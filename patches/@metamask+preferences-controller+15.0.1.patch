diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs b/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs
index a36c32e..2cf3d16 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs
@@ -17,7 +17,7 @@ const metadata = {
     isIpfsGatewayEnabled: { persist: true, anonymous: true },
     isMultiAccountBalancesEnabled: { persist: true, anonymous: true },
     lostIdentities: { persist: true, anonymous: false },
-    openSeaEnabled: { persist: true, anonymous: true },
+    displayNftMedia: { persist: true, anonymous: true },
     securityAlertsEnabled: { persist: true, anonymous: true },
     selectedAddress: { persist: true, anonymous: false },
     showTestNetworks: { persist: true, anonymous: true },
@@ -26,10 +26,11 @@ const metadata = {
     useTokenDetection: { persist: true, anonymous: true },
     smartTransactionsOptInStatus: { persist: true, anonymous: false },
     useTransactionSimulations: { persist: true, anonymous: true },
-    useMultiRpcMigration: { persist: true, anonymous: true },
+    showMultiRpcModal: { persist: true, anonymous: true },
     useSafeChainsListValidation: { persist: true, anonymous: true },
     tokenSortConfig: { persist: true, anonymous: true },
     privacyMode: { persist: true, anonymous: true },
+    tokenNetworkFilter: { persist: true, anonymous: false },
 };
 const name = 'PreferencesController';
 /**
@@ -45,7 +46,7 @@ function getDefaultPreferencesState() {
         isIpfsGatewayEnabled: true,
         isMultiAccountBalancesEnabled: true,
         lostIdentities: {},
-        openSeaEnabled: false,
+        displayNftMedia: false,
         securityAlertsEnabled: false,
         selectedAddress: '',
         showIncomingTransactions: {
@@ -73,16 +74,17 @@ function getDefaultPreferencesState() {
         showTestNetworks: false,
         useNftDetection: false,
         useTokenDetection: true,
-        useMultiRpcMigration: true,
+        showMultiRpcModal: false,
         smartTransactionsOptInStatus: true,
         useTransactionSimulations: true,
         useSafeChainsListValidation: true,
         tokenSortConfig: {
-            key: 'tokenFiatAmount',
+            key: 'tokenFiatBalance',
             order: 'dsc',
             sortCallback: 'stringNumeric',
         },
         privacyMode: false,
+        tokenNetworkFilter: {},
     };
 }
 exports.getDefaultPreferencesState = getDefaultPreferencesState;
@@ -221,22 +223,22 @@ class PreferencesController extends base_controller_1.BaseController {
      * @param useNftDetection - Boolean indicating user preference on NFT detection.
      */
     setUseNftDetection(useNftDetection) {
-        if (useNftDetection && !this.state.openSeaEnabled) {
-            throw new Error('useNftDetection cannot be enabled if openSeaEnabled is false');
+        if (useNftDetection && !this.state.displayNftMedia) {
+            throw new Error('useNftDetection cannot be enabled if displayNftMedia is false');
         }
         this.update((state) => {
             state.useNftDetection = useNftDetection;
         });
     }
     /**
-     * Toggle the opensea enabled setting.
+     * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     * @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
      */
-    setOpenSeaEnabled(openSeaEnabled) {
+    setDisplayNftMedia(displayNftMedia) {
         this.update((state) => {
-            state.openSeaEnabled = openSeaEnabled;
-            if (!openSeaEnabled) {
+            state.displayNftMedia = displayNftMedia;
+            if (!displayNftMedia) {
                 state.useNftDetection = false;
             }
         });
@@ -300,13 +302,13 @@ class PreferencesController extends base_controller_1.BaseController {
     /**
      * Toggle multi rpc migration modal.
      *
-     * @param useMultiRpcMigration - Boolean indicating if the multi rpc modal will be displayed or not.
+     * @param showMultiRpcModal - Boolean indicating if the multi rpc modal will be displayed or not.
      */
-    setUseMultiRpcMigration(useMultiRpcMigration) {
+    setShowMultiRpcModal(showMultiRpcModal) {
         this.update((state) => {
-            state.useMultiRpcMigration = useMultiRpcMigration;
-            if (!useMultiRpcMigration) {
-                state.useMultiRpcMigration = false;
+            state.showMultiRpcModal = showMultiRpcModal;
+            if (!showMultiRpcModal) {
+                state.showMultiRpcModal = false;
             }
         });
     }
@@ -360,6 +362,16 @@ class PreferencesController extends base_controller_1.BaseController {
             state.privacyMode = privacyMode;
         });
     }
+    /**
+     * Set the token network filter configuration setting.
+     *
+     * @param tokenNetworkFilter - Object describing token sort configuration.
+     */
+    setTokenNetworkFilter(tokenNetworkFilter) {
+      this.update((state) => {
+        state.tokenNetworkFilter = tokenNetworkFilter;
+      });
+    }
 }
 exports.PreferencesController = PreferencesController;
 _PreferencesController_instances = new WeakSet(), _PreferencesController_syncIdentities = function _PreferencesController_syncIdentities(addresses) {
diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts
index b587817..ad05486 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts
@@ -70,7 +70,7 @@ export type PreferencesState = {
     /**
      * Controls whether the OpenSea API is used
      */
-    openSeaEnabled: boolean;
+    displayNftMedia: boolean;
     /**
      * Controls whether "security alerts" are enabled
      */
@@ -108,7 +108,7 @@ export type PreferencesState = {
     /**
      * Controls whether Multi rpc modal is displayed or not
      */
-    useMultiRpcMigration: boolean;
+    showMultiRpcModal: boolean;
     /**
      * Controls whether to use the safe chains list validation
      */
@@ -121,6 +121,10 @@ export type PreferencesState = {
      * Controls whether balance and assets are hidden or not
      */
     privacyMode: boolean;
+    /**
+     * Controls token filtering controls
+     */
+    tokenNetworkFilter: Record<string, string>;
 };
 declare const name = "PreferencesController";
 export type PreferencesControllerGetStateAction = ControllerGetStateAction<typeof name, PreferencesState>;
@@ -202,11 +206,11 @@ export declare class PreferencesController extends BaseController<typeof name, P
      */
     setUseNftDetection(useNftDetection: boolean): void;
     /**
-     * Toggle the opensea enabled setting.
+     * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     * @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
      */
-    setOpenSeaEnabled(openSeaEnabled: boolean): void;
+    setDisplayNftMedia(displayNftMedia: boolean): void;
     /**
      * Toggle the security alert enabled setting.
      *
@@ -241,9 +245,9 @@ export declare class PreferencesController extends BaseController<typeof name, P
     /**
      * Toggle multi rpc migration modal.
      *
-     * @param useMultiRpcMigration - Boolean indicating if the multi rpc modal will be displayed or not.
+     * @param showMultiRpcModal - Boolean indicating if the multi rpc modal will be displayed or not.
      */
-    setUseMultiRpcMigration(useMultiRpcMigration: boolean): void;
+    setShowMultiRpcModal(showMultiRpcModal: boolean): void;
     /**
      * A setter for the user to opt into smart transactions
      *
@@ -274,6 +278,12 @@ export declare class PreferencesController extends BaseController<typeof name, P
      * @param privacyMode - true to enable privacy mode, false to disable it.
      */
     setPrivacyMode(privacyMode: boolean): void;
+    /**
+     * Set the token sort configuration setting.
+     *
+     * @param tokenNetworkFilter - Object describing token sort configuration.
+     */
+    setTokenNetworkFilter(tokenNetworkFilter: Record<string, boolean>): void;
 }
 export default PreferencesController;
 //# sourceMappingURL=PreferencesController.d.cts.map
