diff --git a/node_modules/react-native-branch/src/BranchSubscriber.js b/node_modules/react-native-branch/src/BranchSubscriber.js
index 7ba6be7..b0fb384 100644
--- a/node_modules/react-native-branch/src/BranchSubscriber.js
+++ b/node_modules/react-native-branch/src/BranchSubscriber.js
@@ -1,4 +1,4 @@
-import { NativeModules, NativeEventEmitter, DeviceEventEmitter, Platform } from 'react-native'
+import { NativeModules, NativeEventEmitter } from 'react-native'
 
 const { RNBranch, RNBranchEventEmitter } = NativeModules
 
@@ -9,10 +9,7 @@ export default class BranchSubscriber {
   /**
    * Native event emitter (private)
    */
-  _nativeEventEmitter = Platform.select({
-    android: DeviceEventEmitter,
-    ios: new NativeEventEmitter(RNBranchEventEmitter),
-  })
+  _nativeEventEmitter = new NativeEventEmitter(RNBranchEventEmitter)
 
   /**
    * Tracks whether cached events should be checked on the next
@@ -96,12 +93,12 @@ export default class BranchSubscriber {
    */
   _subscribe() {
     if (this.options.onOpenStart) {
-      this._nativeEventEmitter.addListener(RNBranch.INIT_SESSION_START, this.options.onOpenStart)
+      this.sessionStartListener = this._nativeEventEmitter.addListener(RNBranch.INIT_SESSION_START, this.options.onOpenStart)
     }
 
     if (this.options.onOpenComplete) {
-      this._nativeEventEmitter.addListener(RNBranch.INIT_SESSION_SUCCESS, this.options.onOpenComplete)
-      this._nativeEventEmitter.addListener(RNBranch.INIT_SESSION_ERROR, this.options.onOpenComplete)
+      this.sessionSuccessListener = this._nativeEventEmitter.addListener(RNBranch.INIT_SESSION_SUCCESS, this.options.onOpenComplete)
+      this.sessionErrorListener =this._nativeEventEmitter.addListener(RNBranch.INIT_SESSION_ERROR, this.options.onOpenComplete)
     }
   }
 
@@ -114,12 +111,15 @@ export default class BranchSubscriber {
     this._subscribed = false
 
     if (this.options.onOpenStart) {
-      this._nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_START, this.options.onOpenStart)
+      this.sessionStartListener.remove();
+      // this._nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_START, this.options.onOpenStart)
     }
 
     if (this.options.onOpenComplete) {
-      this._nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_SUCCESS, this.options.onOpenComplete)
-      this._nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_ERROR, this.options.onOpenComplete)
+      this.sessionSuccessListener.remove();
+      this.sessionErrorListener.remove();
+      // this._nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_SUCCESS, this.options.onOpenComplete)
+      // this._nativeEventEmitter.removeListener(RNBranch.INIT_SESSION_ERROR, this.options.onOpenComplete)
     }
   }
 }
