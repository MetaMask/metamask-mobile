diff --git a/node_modules/ses/.DS_Store b/node_modules/ses/.DS_Store
new file mode 100644
index 0000000..d1689e5
Binary files /dev/null and b/node_modules/ses/.DS_Store differ
diff --git a/node_modules/ses/dist/.DS_Store b/node_modules/ses/dist/.DS_Store
new file mode 100644
index 0000000..5008ddf
Binary files /dev/null and b/node_modules/ses/dist/.DS_Store differ
diff --git a/node_modules/ses/dist/ses-hermes.cjs b/node_modules/ses/dist/ses-hermes.cjs
index 608b217..136c38e 100644
--- a/node_modules/ses/dist/ses-hermes.cjs
+++ b/node_modules/ses/dist/ses-hermes.cjs
@@ -209,6 +209,9 @@
     {
       isBufferImmutable: cell("isBufferImmutable"),
       sliceBufferToImmutable: cell("sliceBufferToImmutable"),
+      transferBufferToImmutableMaybe: cell("transferBufferToImmutableMaybe"),
+    },
+    {
     },
     {
     },
@@ -663,13 +666,14 @@ function observeImports(map, importName, importIndex) {
     onceVar: {
       isBufferImmutable: cells[4].isBufferImmutable.set,
       sliceBufferToImmutable: cells[4].sliceBufferToImmutable.set,
+      transferBufferToImmutableMaybe: cells[4].transferBufferToImmutableMaybe.set,
     },
     importMeta: {},
   });
   functors[5]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./src/limited-pony-for-hermes.js", 4);
+      observeImports(map, "./immutable-arraybuffer-pony.js", 4);
     },
     liveVar: {
     },
@@ -680,24 +684,25 @@ function observeImports(map, importName, importIndex) {
   functors[6]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../commons.js", 0);
+      observeImports(map, "./src/immutable-arraybuffer-shim.js", 5);
     },
     liveVar: {
     },
     onceVar: {
-      an: cells[6].an.set,
-      bestEffortStringify: cells[6].bestEffortStringify.set,
-      enJoin: cells[6].enJoin.set,
     },
     importMeta: {},
   });
   functors[7]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "../commons.js", 0);
     },
     liveVar: {
     },
     onceVar: {
+      an: cells[7].an.set,
+      bestEffortStringify: cells[7].bestEffortStringify.set,
+      enJoin: cells[7].enJoin.set,
     },
     importMeta: {},
   });
@@ -718,59 +723,55 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      makeLRUCacheMap: cells[9].makeLRUCacheMap.set,
     },
     importMeta: {},
   });
   functors[10]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../make-lru-cachemap.js", 9);
     },
     liveVar: {
     },
     onceVar: {
-      makeNoteLogArgsArrayKit: cells[10].makeNoteLogArgsArrayKit.set,
+      makeLRUCacheMap: cells[10].makeLRUCacheMap.set,
     },
     importMeta: {},
   });
   functors[11]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../commons.js", 0);
-      observeImports(map, "./stringify-utils.js", 6);
-      observeImports(map, "./types.js", 7);
-      observeImports(map, "./internal-types.js", 8);
-      observeImports(map, "./note-log-args.js", 10);
+      observeImports(map, "../make-lru-cachemap.js", 10);
     },
     liveVar: {
     },
     onceVar: {
-      quote: cells[11].q.set,
-      bare: cells[11].b.set,
-      redactedDetails: cells[11].X.set,
-      unredactedDetails: cells[11].unredactedDetails.set,
-      makeError: cells[11].makeError.set,
-      note: cells[11].annotateError.set,
-      loggedErrorHandler: cells[11].loggedErrorHandler.set,
-      makeAssert: cells[11].makeAssert.set,
-      assert: cells[11].assert.set,
-      assertEqual: cells[11].assertEqual.set,
-      sanitizeError: cells[11].sanitizeError.set,
+      makeNoteLogArgsArrayKit: cells[11].makeNoteLogArgsArrayKit.set,
     },
     importMeta: {},
   });
   functors[12]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "../commons.js", 0);
+      observeImports(map, "./stringify-utils.js", 7);
+      observeImports(map, "./types.js", 8);
+      observeImports(map, "./internal-types.js", 9);
+      observeImports(map, "./note-log-args.js", 11);
     },
     liveVar: {
     },
     onceVar: {
-      isTypedArray: cells[12].isTypedArray.set,
-      makeHardener: cells[12].makeHardener.set,
+      quote: cells[12].q.set,
+      bare: cells[12].b.set,
+      redactedDetails: cells[12].X.set,
+      unredactedDetails: cells[12].unredactedDetails.set,
+      makeError: cells[12].makeError.set,
+      note: cells[12].annotateError.set,
+      loggedErrorHandler: cells[12].loggedErrorHandler.set,
+      makeAssert: cells[12].makeAssert.set,
+      assert: cells[12].assert.set,
+      assertEqual: cells[12].assertEqual.set,
+      sanitizeError: cells[12].sanitizeError.set,
     },
     importMeta: {},
   });
@@ -778,11 +779,13 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      cauterizeProperty: cells[13].cauterizeProperty.set,
+      isTypedArray: cells[13].isTypedArray.set,
+      makeHardener: cells[13].makeHardener.set,
     },
     importMeta: {},
   });
@@ -794,52 +797,52 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      NativeErrors: cells[14].NativeErrors.set,
-      constantProperties: cells[14].constantProperties.set,
-      universalPropertyNames: cells[14].universalPropertyNames.set,
-      initialGlobalPropertyNames: cells[14].initialGlobalPropertyNames.set,
-      sharedGlobalPropertyNames: cells[14].sharedGlobalPropertyNames.set,
-      uniqueGlobalPropertyNames: cells[14].uniqueGlobalPropertyNames.set,
-      FunctionInstance: cells[14].FunctionInstance.set,
-      AsyncFunctionInstance: cells[14].AsyncFunctionInstance.set,
-      isAccessorPermit: cells[14].isAccessorPermit.set,
-      permitted: cells[14].permitted.set,
+      cauterizeProperty: cells[14].cauterizeProperty.set,
     },
     importMeta: {},
   });
   functors[15]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./cauterize-property.js", 13);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./permits.js", 14);
     },
     liveVar: {
     },
     onceVar: {
-      makeIntrinsicsCollector: cells[15].makeIntrinsicsCollector.set,
-      getGlobalIntrinsics: cells[15].getGlobalIntrinsics.set,
+      NativeErrors: cells[15].NativeErrors.set,
+      constantProperties: cells[15].constantProperties.set,
+      universalPropertyNames: cells[15].universalPropertyNames.set,
+      initialGlobalPropertyNames: cells[15].initialGlobalPropertyNames.set,
+      sharedGlobalPropertyNames: cells[15].sharedGlobalPropertyNames.set,
+      uniqueGlobalPropertyNames: cells[15].uniqueGlobalPropertyNames.set,
+      FunctionInstance: cells[15].FunctionInstance.set,
+      AsyncFunctionInstance: cells[15].AsyncFunctionInstance.set,
+      isAccessorPermit: cells[15].isAccessorPermit.set,
+      permitted: cells[15].permitted.set,
     },
     importMeta: {},
   });
   functors[16]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./permits.js", 14);
+      observeImports(map, "./cauterize-property.js", 14);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./cauterize-property.js", 13);
+      observeImports(map, "./permits.js", 15);
     },
     liveVar: {
     },
     onceVar: {
-      default: cells[16].default.set,
+      makeIntrinsicsCollector: cells[16].makeIntrinsicsCollector.set,
+      getGlobalIntrinsics: cells[16].getGlobalIntrinsics.set,
     },
     importMeta: {},
   });
   functors[17]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./permits.js", 15);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./cauterize-property.js", 14);
     },
     liveVar: {
     },
@@ -892,9 +895,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      minEnablements: cells[21].minEnablements.set,
-      moderateEnablements: cells[21].moderateEnablements.set,
-      severeEnablements: cells[21].severeEnablements.set,
+      default: cells[21].default.set,
     },
     importMeta: {},
   });
@@ -902,12 +903,13 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./enablements.js", 21);
     },
     liveVar: {
     },
     onceVar: {
-      default: cells[22].default.set,
+      minEnablements: cells[22].minEnablements.set,
+      moderateEnablements: cells[22].moderateEnablements.set,
+      severeEnablements: cells[22].severeEnablements.set,
     },
     importMeta: {},
   });
@@ -915,7 +917,7 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./enablements.js", 22);
     },
     liveVar: {
     },
@@ -927,24 +929,24 @@ function observeImports(map, importName, importIndex) {
   functors[24]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      makeEvalFunction: cells[24].makeEvalFunction.set,
+      default: cells[24].default.set,
     },
     importMeta: {},
   });
   functors[25]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
     },
     liveVar: {
     },
     onceVar: {
-      makeFunctionConstructor: cells[25].makeFunctionConstructor.set,
+      makeEvalFunction: cells[25].makeEvalFunction.set,
     },
     importMeta: {},
   });
@@ -952,17 +954,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./make-eval-function.js", 24);
-      observeImports(map, "./make-function-constructor.js", 25);
-      observeImports(map, "./permits.js", 14);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      setGlobalObjectSymbolUnscopables: cells[26].setGlobalObjectSymbolUnscopables.set,
-      setGlobalObjectConstantProperties: cells[26].setGlobalObjectConstantProperties.set,
-      setGlobalObjectMutableProperties: cells[26].setGlobalObjectMutableProperties.set,
-      setGlobalObjectEvaluators: cells[26].setGlobalObjectEvaluators.set,
+      makeFunctionConstructor: cells[26].makeFunctionConstructor.set,
     },
     importMeta: {},
   });
@@ -970,14 +967,17 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./make-eval-function.js", 25);
+      observeImports(map, "./make-function-constructor.js", 26);
+      observeImports(map, "./permits.js", 15);
     },
     liveVar: {
     },
     onceVar: {
-      alwaysThrowHandler: cells[27].alwaysThrowHandler.set,
-      strictScopeTerminatorHandler: cells[27].strictScopeTerminatorHandler.set,
-      strictScopeTerminator: cells[27].strictScopeTerminator.set,
+      setGlobalObjectSymbolUnscopables: cells[27].setGlobalObjectSymbolUnscopables.set,
+      setGlobalObjectConstantProperties: cells[27].setGlobalObjectConstantProperties.set,
+      setGlobalObjectMutableProperties: cells[27].setGlobalObjectMutableProperties.set,
+      setGlobalObjectEvaluators: cells[27].setGlobalObjectEvaluators.set,
     },
     importMeta: {},
   });
@@ -985,12 +985,14 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./strict-scope-terminator.js", 27);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      createSloppyGlobalsScopeTerminator: cells[28].createSloppyGlobalsScopeTerminator.set,
+      alwaysThrowHandler: cells[28].alwaysThrowHandler.set,
+      strictScopeTerminatorHandler: cells[28].strictScopeTerminatorHandler.set,
+      strictScopeTerminator: cells[28].strictScopeTerminator.set,
     },
     importMeta: {},
   });
@@ -998,12 +1000,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./strict-scope-terminator.js", 28);
     },
     liveVar: {
     },
     onceVar: {
-      makeEvalScopeKit: cells[29].makeEvalScopeKit.set,
+      createSloppyGlobalsScopeTerminator: cells[29].createSloppyGlobalsScopeTerminator.set,
     },
     importMeta: {},
   });
@@ -1011,11 +1013,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      getSourceURL: cells[30].getSourceURL.set,
+      makeEvalScopeKit: cells[30].makeEvalScopeKit.set,
     },
     importMeta: {},
   });
@@ -1023,19 +1026,11 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./get-source-url.js", 30);
     },
     liveVar: {
     },
     onceVar: {
-      rejectHtmlComments: cells[31].rejectHtmlComments.set,
-      evadeHtmlCommentTest: cells[31].evadeHtmlCommentTest.set,
-      rejectImportExpressions: cells[31].rejectImportExpressions.set,
-      evadeImportExpressionTest: cells[31].evadeImportExpressionTest.set,
-      rejectSomeDirectEvalExpressions: cells[31].rejectSomeDirectEvalExpressions.set,
-      mandatoryTransforms: cells[31].mandatoryTransforms.set,
-      applyTransforms: cells[31].applyTransforms.set,
-      transforms: cells[31].transforms.set,
+      getSourceURL: cells[31].getSourceURL.set,
     },
     importMeta: {},
   });
@@ -1043,12 +1038,19 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./get-source-url.js", 31);
     },
     liveVar: {
     },
     onceVar: {
-      isValidIdentifierName: cells[32].isValidIdentifierName.set,
-      getScopeConstants: cells[32].getScopeConstants.set,
+      rejectHtmlComments: cells[32].rejectHtmlComments.set,
+      evadeHtmlCommentTest: cells[32].evadeHtmlCommentTest.set,
+      rejectImportExpressions: cells[32].rejectImportExpressions.set,
+      evadeImportExpressionTest: cells[32].evadeImportExpressionTest.set,
+      rejectSomeDirectEvalExpressions: cells[32].rejectSomeDirectEvalExpressions.set,
+      mandatoryTransforms: cells[32].mandatoryTransforms.set,
+      applyTransforms: cells[32].applyTransforms.set,
+      transforms: cells[32].transforms.set,
     },
     importMeta: {},
   });
@@ -1056,12 +1058,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./scope-constants.js", 32);
     },
     liveVar: {
     },
     onceVar: {
-      makeEvaluate: cells[33].makeEvaluate.set,
+      isValidIdentifierName: cells[33].isValidIdentifierName.set,
+      getScopeConstants: cells[33].getScopeConstants.set,
     },
     importMeta: {},
   });
@@ -1069,17 +1071,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./strict-scope-terminator.js", 27);
-      observeImports(map, "./sloppy-globals-scope-terminator.js", 28);
-      observeImports(map, "./eval-scope.js", 29);
-      observeImports(map, "./transforms.js", 31);
-      observeImports(map, "./make-evaluate.js", 33);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./scope-constants.js", 33);
     },
     liveVar: {
     },
     onceVar: {
-      makeSafeEvaluator: cells[34].makeSafeEvaluator.set,
+      makeEvaluate: cells[34].makeEvaluate.set,
     },
     importMeta: {},
   });
@@ -1087,11 +1084,17 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./strict-scope-terminator.js", 28);
+      observeImports(map, "./sloppy-globals-scope-terminator.js", 29);
+      observeImports(map, "./eval-scope.js", 30);
+      observeImports(map, "./transforms.js", 32);
+      observeImports(map, "./make-evaluate.js", 34);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      tameFunctionToString: cells[35].tameFunctionToString.set,
+      makeSafeEvaluator: cells[35].makeSafeEvaluator.set,
     },
     importMeta: {},
   });
@@ -1103,7 +1106,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameDomains: cells[36].tameDomains.set,
+      tameFunctionToString: cells[36].tameFunctionToString.set,
     },
     importMeta: {},
   });
@@ -1115,25 +1118,19 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameModuleSource: cells[37].tameModuleSource.set,
+      tameDomains: cells[37].tameDomains.set,
     },
     importMeta: {},
   });
   functors[38]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../commons.js", 0);
+      observeImports(map, "./commons.js", 0);
     },
     liveVar: {
     },
     onceVar: {
-      consoleLevelMethods: cells[38].consoleLevelMethods.set,
-      consoleOtherMethods: cells[38].consoleOtherMethods.set,
-      makeLoggingConsoleKit: cells[38].makeLoggingConsoleKit.set,
-      pumpLogToConsole: cells[38].pumpLogToConsole.set,
-      makeCausalConsole: cells[38].makeCausalConsole.set,
-      defineCausalConsoleFromLogger: cells[38].defineCausalConsoleFromLogger.set,
-      filterConsole: cells[38].filterConsole.set,
+      tameModuleSource: cells[38].tameModuleSource.set,
     },
     importMeta: {},
   });
@@ -1145,7 +1142,13 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      makeRejectionHandlers: cells[39].makeRejectionHandlers.set,
+      consoleLevelMethods: cells[39].consoleLevelMethods.set,
+      consoleOtherMethods: cells[39].consoleOtherMethods.set,
+      makeLoggingConsoleKit: cells[39].makeLoggingConsoleKit.set,
+      pumpLogToConsole: cells[39].pumpLogToConsole.set,
+      makeCausalConsole: cells[39].makeCausalConsole.set,
+      defineCausalConsoleFromLogger: cells[39].defineCausalConsoleFromLogger.set,
+      filterConsole: cells[39].filterConsole.set,
     },
     importMeta: {},
   });
@@ -1153,14 +1156,11 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "../commons.js", 0);
-      observeImports(map, "./assert.js", 11);
-      observeImports(map, "./console.js", 38);
-      observeImports(map, "./unhandled-rejection.js", 39);
     },
     liveVar: {
     },
     onceVar: {
-      tameConsole: cells[40].tameConsole.set,
+      makeRejectionHandlers: cells[40].makeRejectionHandlers.set,
     },
     importMeta: {},
   });
@@ -1168,13 +1168,14 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "../commons.js", 0);
+      observeImports(map, "./assert.js", 12);
+      observeImports(map, "./console.js", 39);
+      observeImports(map, "./unhandled-rejection.js", 40);
     },
     liveVar: {
     },
     onceVar: {
-      filterFileName: cells[41].filterFileName.set,
-      shortenCallSiteString: cells[41].shortenCallSiteString.set,
-      tameV8ErrorConstructor: cells[41].tameV8ErrorConstructor.set,
+      tameConsole: cells[41].tameConsole.set,
     },
     importMeta: {},
   });
@@ -1182,113 +1183,104 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "../commons.js", 0);
-      observeImports(map, "../permits.js", 14);
-      observeImports(map, "./tame-v8-error-constructor.js", 41);
     },
     liveVar: {
     },
     onceVar: {
-      default: cells[42].default.set,
+      filterFileName: cells[42].filterFileName.set,
+      shortenCallSiteString: cells[42].shortenCallSiteString.set,
+      tameV8ErrorConstructor: cells[42].tameV8ErrorConstructor.set,
     },
     importMeta: {},
   });
   functors[43]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "@endo/env-options", 3);
-      observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "../commons.js", 0);
+      observeImports(map, "../permits.js", 15);
+      observeImports(map, "./tame-v8-error-constructor.js", 42);
     },
     liveVar: {
     },
     onceVar: {
-      makeAlias: cells[43].makeAlias.set,
-      load: cells[43].load.set,
-      loadNow: cells[43].loadNow.set,
+      default: cells[43].default.set,
     },
     importMeta: {},
   });
   functors[44]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./module-load.js", 43);
+      observeImports(map, "@endo/env-options", 3);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      deferExports: cells[44].deferExports.set,
-      getDeferredExports: cells[44].getDeferredExports.set,
+      makeAlias: cells[44].makeAlias.set,
+      load: cells[44].load.set,
+      loadNow: cells[44].loadNow.set,
     },
     importMeta: {},
   });
   functors[45]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./module-load.js", 44);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./transforms.js", 31);
-      observeImports(map, "./make-safe-evaluator.js", 34);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      provideCompartmentEvaluator: cells[45].provideCompartmentEvaluator.set,
-      compartmentEvaluate: cells[45].compartmentEvaluate.set,
+      deferExports: cells[45].deferExports.set,
+      getDeferredExports: cells[45].getDeferredExports.set,
     },
     importMeta: {},
   });
   functors[46]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./module-proxy.js", 44);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./compartment-evaluate.js", 45);
+      observeImports(map, "./transforms.js", 32);
+      observeImports(map, "./make-safe-evaluator.js", 35);
     },
     liveVar: {
     },
     onceVar: {
-      makeVirtualModuleInstance: cells[46].makeVirtualModuleInstance.set,
-      makeModuleInstance: cells[46].makeModuleInstance.set,
+      provideCompartmentEvaluator: cells[46].provideCompartmentEvaluator.set,
+      compartmentEvaluate: cells[46].compartmentEvaluate.set,
     },
     importMeta: {},
   });
   functors[47]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./module-instance.js", 46);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./module-proxy.js", 45);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./compartment-evaluate.js", 46);
     },
     liveVar: {
     },
     onceVar: {
-      link: cells[47].link.set,
-      instantiate: cells[47].instantiate.set,
+      makeVirtualModuleInstance: cells[47].makeVirtualModuleInstance.set,
+      makeModuleInstance: cells[47].makeModuleInstance.set,
     },
     importMeta: {},
   });
   functors[48]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./module-instance.js", 47);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./global-object.js", 26);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./permits.js", 14);
-      observeImports(map, "./module-load.js", 43);
-      observeImports(map, "./module-link.js", 47);
-      observeImports(map, "./module-proxy.js", 44);
-      observeImports(map, "./compartment-evaluate.js", 45);
-      observeImports(map, "./make-safe-evaluator.js", 34);
     },
     liveVar: {
     },
     onceVar: {
-      InertCompartment: cells[48].InertCompartment.set,
-      CompartmentPrototype: cells[48].CompartmentPrototype.set,
-      compartmentOptions: cells[48].compartmentOptions.set,
-      makeCompartmentConstructor: cells[48].makeCompartmentConstructor.set,
+      link: cells[48].link.set,
+      instantiate: cells[48].instantiate.set,
     },
     importMeta: {},
   });
@@ -1296,12 +1288,22 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./compartment.js", 48);
+      observeImports(map, "./global-object.js", 27);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./permits.js", 15);
+      observeImports(map, "./module-load.js", 44);
+      observeImports(map, "./module-link.js", 48);
+      observeImports(map, "./module-proxy.js", 45);
+      observeImports(map, "./compartment-evaluate.js", 46);
+      observeImports(map, "./make-safe-evaluator.js", 35);
     },
     liveVar: {
     },
     onceVar: {
-      getAnonymousIntrinsics: cells[49].getAnonymousIntrinsics.set,
+      InertCompartment: cells[49].InertCompartment.set,
+      CompartmentPrototype: cells[49].CompartmentPrototype.set,
+      compartmentOptions: cells[49].compartmentOptions.set,
+      makeCompartmentConstructor: cells[49].makeCompartmentConstructor.set,
     },
     importMeta: {},
   });
@@ -1309,11 +1311,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./compartment.js", 49);
     },
     liveVar: {
     },
     onceVar: {
-      tameHarden: cells[50].tameHarden.set,
+      getAnonymousIntrinsics: cells[50].getAnonymousIntrinsics.set,
     },
     importMeta: {},
   });
@@ -1325,7 +1328,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameSymbolConstructor: cells[51].tameSymbolConstructor.set,
+      tameHarden: cells[51].tameHarden.set,
     },
     importMeta: {},
   });
@@ -1337,8 +1340,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameFauxDataProperty: cells[52].tameFauxDataProperty.set,
-      tameFauxDataProperties: cells[52].tameFauxDataProperties.set,
+      tameSymbolConstructor: cells[52].tameSymbolConstructor.set,
     },
     importMeta: {},
   });
@@ -1350,7 +1352,8 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameRegeneratorRuntime: cells[53].tameRegeneratorRuntime.set,
+      tameFauxDataProperty: cells[53].tameFauxDataProperty.set,
+      tameFauxDataProperties: cells[53].tameFauxDataProperties.set,
     },
     importMeta: {},
   });
@@ -1362,7 +1365,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      shimArrayBufferTransfer: cells[54].shimArrayBufferTransfer.set,
+      tameRegeneratorRuntime: cells[54].tameRegeneratorRuntime.set,
     },
     importMeta: {},
   });
@@ -1370,77 +1373,74 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
     },
     liveVar: {
     },
     onceVar: {
-      chooseReporter: cells[55].chooseReporter.set,
-      reportInGroup: cells[55].reportInGroup.set,
+      shimArrayBufferTransfer: cells[55].shimArrayBufferTransfer.set,
     },
     importMeta: {},
   });
   functors[56]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "@endo/env-options", 3);
-      observeImports(map, "@endo/immutable-arraybuffer/shim-hermes.js", 5);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./make-hardener.js", 12);
-      observeImports(map, "./intrinsics.js", 15);
-      observeImports(map, "./permits-intrinsics.js", 16);
-      observeImports(map, "./tame-function-constructors.js", 17);
-      observeImports(map, "./tame-date-constructor.js", 18);
-      observeImports(map, "./tame-math-object.js", 19);
-      observeImports(map, "./tame-regexp-constructor.js", 20);
-      observeImports(map, "./enable-property-overrides.js", 22);
-      observeImports(map, "./tame-locale-methods.js", 23);
-      observeImports(map, "./global-object.js", 26);
-      observeImports(map, "./make-safe-evaluator.js", 34);
-      observeImports(map, "./permits.js", 14);
-      observeImports(map, "./tame-function-tostring.js", 35);
-      observeImports(map, "./tame-domains.js", 36);
-      observeImports(map, "./tame-module-source.js", 37);
-      observeImports(map, "./error/tame-console.js", 40);
-      observeImports(map, "./error/tame-error-constructor.js", 42);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./get-anonymous-intrinsics.js", 49);
-      observeImports(map, "./compartment.js", 48);
-      observeImports(map, "./tame-harden.js", 50);
-      observeImports(map, "./tame-symbol-constructor.js", 51);
-      observeImports(map, "./tame-faux-data-properties.js", 52);
-      observeImports(map, "./tame-regenerator-runtime.js", 53);
-      observeImports(map, "./shim-arraybuffer-transfer.js", 54);
-      observeImports(map, "./reporting.js", 55);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      repairIntrinsics: cells[56].repairIntrinsics.set,
+      chooseReporter: cells[56].chooseReporter.set,
+      reportInGroup: cells[56].reportInGroup.set,
     },
     importMeta: {},
   });
   functors[57]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./assert-sloppy-mode.js", 1);
+      observeImports(map, "@endo/env-options", 3);
+      observeImports(map, "@endo/immutable-arraybuffer/shim.js", 6);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./lockdown.js", 56);
+      observeImports(map, "./make-hardener.js", 13);
+      observeImports(map, "./intrinsics.js", 16);
+      observeImports(map, "./permits-intrinsics.js", 17);
+      observeImports(map, "./tame-function-constructors.js", 18);
+      observeImports(map, "./tame-date-constructor.js", 19);
+      observeImports(map, "./tame-math-object.js", 20);
+      observeImports(map, "./tame-regexp-constructor.js", 21);
+      observeImports(map, "./enable-property-overrides.js", 23);
+      observeImports(map, "./tame-locale-methods.js", 24);
+      observeImports(map, "./global-object.js", 27);
+      observeImports(map, "./make-safe-evaluator.js", 35);
+      observeImports(map, "./permits.js", 15);
+      observeImports(map, "./tame-function-tostring.js", 36);
+      observeImports(map, "./tame-domains.js", 37);
+      observeImports(map, "./tame-module-source.js", 38);
+      observeImports(map, "./error/tame-console.js", 41);
+      observeImports(map, "./error/tame-error-constructor.js", 43);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./get-anonymous-intrinsics.js", 50);
+      observeImports(map, "./compartment.js", 49);
+      observeImports(map, "./tame-harden.js", 51);
+      observeImports(map, "./tame-symbol-constructor.js", 52);
+      observeImports(map, "./tame-faux-data-properties.js", 53);
+      observeImports(map, "./tame-regenerator-runtime.js", 54);
+      observeImports(map, "./shim-arraybuffer-transfer.js", 55);
+      observeImports(map, "./reporting.js", 56);
     },
     liveVar: {
     },
     onceVar: {
+      repairIntrinsics: cells[57].repairIntrinsics.set,
     },
     importMeta: {},
   });
   functors[58]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./assert-sloppy-mode.js", 1);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./compartment.js", 48);
-      observeImports(map, "./tame-function-tostring.js", 35);
-      observeImports(map, "./intrinsics.js", 15);
-      observeImports(map, "./reporting.js", 55);
+      observeImports(map, "./lockdown.js", 57);
     },
     liveVar: {
     },
@@ -1452,7 +1452,10 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./compartment.js", 49);
+      observeImports(map, "./tame-function-tostring.js", 36);
+      observeImports(map, "./intrinsics.js", 16);
+      observeImports(map, "./reporting.js", 56);
     },
     liveVar: {
     },
@@ -1464,8 +1467,7 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/console.js", 38);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
@@ -1476,10 +1478,23 @@ function observeImports(map, importName, importIndex) {
   functors[61]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./src/lockdown-shim.js", 57);
-      observeImports(map, "./src/compartment-shim.js", 58);
-      observeImports(map, "./src/assert-shim.js", 59);
-      observeImports(map, "./src/console-shim.js", 60);
+      observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/console.js", 39);
+      observeImports(map, "./error/assert.js", 12);
+    },
+    liveVar: {
+    },
+    onceVar: {
+    },
+    importMeta: {},
+  });
+  functors[62]({
+    imports(entries) {
+      const map = new Map(entries);
+      observeImports(map, "./src/lockdown-shim.js", 58);
+      observeImports(map, "./src/compartment-shim.js", 59);
+      observeImports(map, "./src/assert-shim.js", 60);
+      observeImports(map, "./src/console-shim.js", 61);
     },
     liveVar: {
     },
@@ -2083,25 +2098,24 @@ freeze(makeEnvironmentCaptor);
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([["./src/env-options.js", []]]);
 })()
 ,
-// === 4. immutable-arraybuffer ./src/limited-pony-for-hermes.js ===
-({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);const { apply } = Reflect;
-const { prototype: arrayBufferPrototype } = ArrayBuffer;
+// === 4. immutable-arraybuffer ./src/immutable-arraybuffer-pony.js ===
+({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);/* global globalThis */
 
-const { slice } = arrayBufferPrototype;
+const { defineProperty } = Object;
+const { apply, ownKeys } = Reflect;
+const { prototype: arrayBufferPrototype } = ArrayBuffer;
 
-// Based on the real `../index.js` but lives within the restrictions of
-// current Hermes:
-// - No class syntax, therefore also no private fields
-// - No `ArrayBuffer.prototype.transfer`
-// - No `structuredClone`
-//
-// Within these restrictions we cannot emulate `transferToImmutable`, so
-// we omit it from the pony. We can emulate `sliceToImmutable` using
-// a different technique than used by the original. The omission of
-// `transferToImmutable` will be visible, enabling feature detection.
-// We perfectly emulate the `class` with a `function` function.
-// We perfectly emulate the private `this.#buffer` private field with
-// the encapsulated `buffers` WeakMap.
+const {
+  slice,
+  // TODO used to be a-ts-expect-error, but my local IDE's TS server
+  // seems to use a more recent definition of the `ArrayBuffer` type.
+  // @ts-ignore At the time of this writing, the `ArrayBuffer` type built
+  // into TypeScript does not know about the recent standard `transfer` method.
+  // Indeed, the `transfer` method is absent from Node <= 20.
+  transfer: transferMaybe,
+} = arrayBufferPrototype;
+// Capture structuredClone before it could be scuttled.
+const { structuredClone: structuredCloneMaybe } = globalThis;
 
 /**
  * Enforces that `realBuffer` is a genuine `ArrayBuffer` exotic object.
@@ -2115,7 +2129,46 @@ const arrayBufferSlice = (realBuffer, start = undefined, end = undefined) =>
   apply(slice, realBuffer, [start, end]);
 
 /**
- * Emulates the `this.#buffer` private field, including its use as a brand check.
+ * Enforces that `arrayBuffer` is a genuine `ArrayBuffer` exotic object.
+ * Return a new fresh `ArrayBuffer` exotic object, where the contents of the
+ * original `arrayBuffer` has been moved into the new one, and the original
+ * `arrayBuffer` has been detached. We can only do this emulation on platforms
+ * that support `structureClose` or `ArrayBuffer.prototype.transfer`.
+ * On other platforms, we can still emulate `sliceToImmutable` but not
+ * `arrayBufferTransferMaybe`, and therefore not
+ * `ArrayBuffer.prototype.transferToImmutable`. Currently, these other platforms
+ * are
+ * - Hermes
+ * - Node <= 16
+ * - Apparently some versions of JSC that are still of concern.
+ *
+ * @param {ArrayBuffer} arrayBuffer
+ * @returns {ArrayBuffer}
+ */
+let arrayBufferTransferMaybe;
+
+if (transferMaybe) {
+  arrayBufferTransferMaybe = arrayBuffer =>
+    apply(transferMaybe, arrayBuffer, []);
+} else if (structuredCloneMaybe) {
+  arrayBufferTransferMaybe = arrayBuffer => {
+    // Hopefully, a zero-length slice is cheap, but still enforces that
+    // `arrayBuffer` is a genuine `ArrayBuffer` exotic object.
+    arrayBufferSlice(arrayBuffer, 0, 0);
+    return structuredCloneMaybe(arrayBuffer, {
+      transfer: [arrayBuffer],
+    });
+  };
+} else {
+  // Assignment is redundant, but remains for clarity.
+  arrayBufferTransferMaybe = undefined;
+}
+
+/**
+ * If we could use classes with private fields everywhere, this would have
+ * been a `this.#buffer` private field on an `ImmutableArrayBufferInternal`
+ * class. But we cannot do so on Hermes. So, instead, we
+ * emulate the `this.#buffer` private field, including its use as a brand check.
  * Maps from all and only emulated Immutable ArrayBuffers to real ArrayBuffers.
  */
 const buffers = new WeakMap();
@@ -2160,11 +2213,34 @@ const ImmutableArrayBufferInternalPrototype = {
     getBuffer(this); // shim brand check
     throw TypeError('Cannot resize an immutable ArrayBuffer');
   },
+  transfer(_newLength = undefined) {
+    getBuffer(this); // shim brand check
+    throw TypeError('Cannot detach an immutable ArrayBuffer');
+  },
+  transferToFixedLength(_newLength = undefined) {
+    getBuffer(this); // shim brand check
+    throw TypeError('Cannot detach an immutable ArrayBuffer');
+  },
+  transferToImmutable(_newLength = undefined) {
+    getBuffer(this); // shim brand check
+    throw TypeError('Cannot detach an immutable ArrayBuffer');
+  },
+  /**
+   * See https://github.com/endojs/endo/tree/master/packages/immutable-arraybuffer#purposeful-violation
+   */
+  [Symbol.toStringTag]: 'ImmutableArrayBuffer',
 };
 
+// Better fidelity emulation of a class prototype
+for (const key of ownKeys(ImmutableArrayBufferInternalPrototype)) {
+  defineProperty(ImmutableArrayBufferInternalPrototype, key, {
+    enumerable: false,
+  });
+}
+
 /**
- * Emulates the encapsulated `ImmutableArrayBufferInternal` class constructor
- * from the original except this function takes the `realBuffer` which its
+ * Emulates what would have been the encapsulated `ImmutableArrayBufferInternal`
+ * class constructor. This function takes the `realBuffer` which its
  * result encapsulates. Security demands that this result has exclusive access
  * to the `realBuffer` it is given, which its callers must ensure.
  *
@@ -2202,20 +2278,64 @@ Object.freeze(makeImmutableArrayBufferInternal);
     arrayBufferSlice(realBuffer, start, end),
   );
 };$h͏_once.sliceBufferToImmutable(sliceBufferToImmutable);
+
+let transferBufferToImmutable;
+if (arrayBufferTransferMaybe) {
+  /**
+   * Transfer the contents to a new Immutable ArrayBuffer
+   *
+   * @param {ArrayBuffer} buffer The original buffer.
+   * @param {number} [newLength] The start index.
+   * @returns {ArrayBuffer}
+   */
+  transferBufferToImmutable = (buffer, newLength = undefined) => {
+    if (newLength === undefined) {
+      buffer = arrayBufferTransferMaybe(buffer);
+    } else if (transferMaybe) {
+      buffer = apply(transferMaybe, buffer, [newLength]);
+    } else {
+      buffer = arrayBufferTransferMaybe(buffer);
+      const oldLength = buffer.byteLength;
+      // eslint-disable-next-line @endo/restrict-comparison-operands
+      if (newLength <= oldLength) {
+        buffer = arrayBufferSlice(buffer, 0, newLength);
+      } else {
+        const oldTA = new Uint8Array(buffer);
+        const newTA = new Uint8Array(newLength);
+        newTA.set(oldTA);
+        buffer = newTA.buffer;
+      }
+    }
+    const result = makeImmutableArrayBufferInternal(buffer);
+    return /** @type {ArrayBuffer} */ (/** @type {unknown} */ (result));
+  };
+} else {
+  transferBufferToImmutable = undefined;
+}
+
+       const transferBufferToImmutableMaybe = transferBufferToImmutable;$h͏_once.transferBufferToImmutableMaybe(transferBufferToImmutableMaybe);
 })()
 ,
-// === 5. immutable-arraybuffer ./shim-hermes.js ===
-({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let isBufferImmutable,sliceBufferToImmutable;$h͏_imports([["./src/limited-pony-for-hermes.js", [["isBufferImmutable",[$h͏_a => (isBufferImmutable = $h͏_a)]],["sliceBufferToImmutable",[$h͏_a => (sliceBufferToImmutable = $h͏_a)]]]]]);
+// === 5. immutable-arraybuffer ./src/immutable-arraybuffer-shim.js ===
+({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let isBufferImmutable,sliceBufferToImmutable,transferBufferToImmutableMaybe;$h͏_imports([["./immutable-arraybuffer-pony.js", [["isBufferImmutable",[$h͏_a => (isBufferImmutable = $h͏_a)]],["sliceBufferToImmutable",[$h͏_a => (sliceBufferToImmutable = $h͏_a)]],["transferBufferToImmutableMaybe",[$h͏_a => (transferBufferToImmutableMaybe = $h͏_a)]]]]]);
+
+
 
 
 
+// Even though the exported one is not a live binding, TS doesn't know that,
+// so it cannot do it's normal flow-based inference. By making a using a local
+// copy, no problem.
+const tbtiMaybe = transferBufferToImmutableMaybe;
 
-const { getOwnPropertyDescriptors, defineProperties } = Object;
+const { getOwnPropertyDescriptors, defineProperties, defineProperty } = Object;
+const { ownKeys } = Reflect;
 const { prototype: arrayBufferPrototype } = ArrayBuffer;
 
 const arrayBufferMethods = {
   /**
    * Creates an immutable slice of the given buffer.
+   *
    * @this {ArrayBuffer} buffer The original buffer.
    * @param {number} [start] The start index.
    * @param {number} [end] The end index.
@@ -2224,15 +2344,17 @@ const arrayBufferMethods = {
   sliceToImmutable(start = undefined, end = undefined) {
     return sliceBufferToImmutable(this, start, end);
   },
+
   get immutable() {
     return isBufferImmutable(this);
   },
 };
 
-if ('transfer' in arrayBufferPrototype) {
-  console.warn(
-    'Could have used the full shim, rather than the limited one for Hermes',
-  );
+// Better fidelity emulation of a class prototype
+for (const key of ownKeys(arrayBufferMethods)) {
+  defineProperty(arrayBufferMethods, key, {
+    enumerable: false,
+  });
 }
 
 if ('sliceToImmutable' in arrayBufferPrototype) {
@@ -2255,9 +2377,56 @@ defineProperties(
   arrayBufferPrototype,
   getOwnPropertyDescriptors(arrayBufferMethods),
 );
+
+if (tbtiMaybe) {
+  const moreMethods = {
+    /**
+     * Transfer the contents to a new Immutable ArrayBuffer
+     *
+     * @this {ArrayBuffer} buffer The original buffer.
+     * @param {number} [newLength] The start index.
+     * @returns {ArrayBuffer} The sliced immutable ArrayBuffer.
+     */
+    transferToImmutable(newLength = undefined) {
+      return tbtiMaybe(this, newLength);
+    },
+  };
+
+  // Better fidelity emulation of a class prototype
+  for (const key of ownKeys(moreMethods)) {
+    defineProperty(moreMethods, key, {
+      enumerable: false,
+    });
+  }
+
+  if ('transferToImmutable' in arrayBufferPrototype) {
+    // Modern shim practice frowns on conditional installation, at least for
+    // proposals prior to stage 3. This is so changes to the proposal since
+    // an old shim was distributed don't need to worry about the proposal
+    // breaking old code depending on the old shim. Thus, if we detect that
+    // we're about to overwrite a prior installation, we simply issue this
+    // warning and continue.
+    //
+    // TODO, if the primordials are frozen after the prior implementation, such as
+    // by `lockdown`, then this precludes overwriting as expected. However, for
+    // this case, the following warning text will be confusing.
+    console.warn(
+      'About to overwrite a prior implementation of "transferToImmutable"',
+    );
+  }
+
+  defineProperties(
+    arrayBufferPrototype,
+    getOwnPropertyDescriptors(moreMethods),
+  );
+}
 })()
 ,
-// === 6. ses ./src/error/stringify-utils.js ===
+// === 6. immutable-arraybuffer ./shim.js ===
+({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([["./src/immutable-arraybuffer-shim.js", []]]);
+})()
+,
+// === 7. ses ./src/error/stringify-utils.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Set,String,isArray,arrayJoin,arraySlice,arraySort,arrayMap,keys,fromEntries,freeze,is,isError,setAdd,setHas,stringIncludes,stringStartsWith,stringifyJson,toStringTagSymbol;$h͏_imports([["../commons.js", [["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arraySlice",[$h͏_a => (arraySlice = $h͏_a)]],["arraySort",[$h͏_a => (arraySort = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["keys",[$h͏_a => (keys = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]],["setAdd",[$h͏_a => (setAdd = $h͏_a)]],["setHas",[$h͏_a => (setHas = $h͏_a)]],["stringIncludes",[$h͏_a => (stringIncludes = $h͏_a)]],["stringStartsWith",[$h͏_a => (stringStartsWith = $h͏_a)]],["stringifyJson",[$h͏_a => (stringifyJson = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]]]]]);
 
 
@@ -2454,7 +2623,7 @@ const bestEffortStringify = (payload, spaces = undefined) => {
 freeze(bestEffortStringify);
 })()
 ,
-// === 7. ses ./src/error/types.js ===
+// === 8. ses ./src/error/types.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);// @ts-check
 
 /** @import {GenericErrorConstructor, AssertMakeErrorOptions, DetailsToken, StringablePayload} from '../../types.js' */
@@ -2516,7 +2685,7 @@ freeze(bestEffortStringify);
  */
 })()
 ,
-// === 8. ses ./src/error/internal-types.js ===
+// === 9. ses ./src/error/internal-types.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);// @ts-check
 
 /**
@@ -2617,7 +2786,7 @@ freeze(bestEffortStringify);
  */
 })()
 ,
-// === 9. ses ./src/make-lru-cachemap.js ===
+// === 10. ses ./src/make-lru-cachemap.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);// @ts-check
 /* eslint-disable @endo/no-polymorphic-call */
 
@@ -2841,7 +3010,7 @@ const spliceOut = cell => {
 freeze(makeLRUCacheMap);
 })()
 ,
-// === 10. ses ./src/error/note-log-args.js ===
+// === 11. ses ./src/error/note-log-args.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let makeLRUCacheMap;$h͏_imports([["../make-lru-cachemap.js", [["makeLRUCacheMap",[$h͏_a => (makeLRUCacheMap = $h͏_a)]]]]]);
 
 
@@ -2920,7 +3089,7 @@ const defaultArgsPerErrorBudget = 100;
 freeze(makeNoteLogArgsArrayKit);
 })()
 ,
-// === 11. ses ./src/error/assert.js ===
+// === 12. ses ./src/error/assert.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let RangeError,TypeError,WeakMap,arrayJoin,arrayMap,arrayPop,arrayPush,assign,freeze,defineProperty,globalThis,is,isError,regexpTest,stringIndexOf,stringReplace,stringSlice,stringStartsWith,weakmapDelete,weakmapGet,weakmapHas,weakmapSet,AggregateError,getOwnPropertyDescriptors,ownKeys,create,objectPrototype,objectHasOwnProperty,an,bestEffortStringify,makeNoteLogArgsArrayKit;$h͏_imports([["../commons.js", [["RangeError",[$h͏_a => (RangeError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arrayPop",[$h͏_a => (arrayPop = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]],["regexpTest",[$h͏_a => (regexpTest = $h͏_a)]],["stringIndexOf",[$h͏_a => (stringIndexOf = $h͏_a)]],["stringReplace",[$h͏_a => (stringReplace = $h͏_a)]],["stringSlice",[$h͏_a => (stringSlice = $h͏_a)]],["stringStartsWith",[$h͏_a => (stringStartsWith = $h͏_a)]],["weakmapDelete",[$h͏_a => (weakmapDelete = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapHas",[$h͏_a => (weakmapHas = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]],["AggregateError",[$h͏_a => (AggregateError = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["objectPrototype",[$h͏_a => (objectPrototype = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]]]],["./stringify-utils.js", [["an",[$h͏_a => (an = $h͏_a)]],["bestEffortStringify",[$h͏_a => (bestEffortStringify = $h͏_a)]]]],["./types.js", []],["./internal-types.js", []],["./note-log-args.js", [["makeNoteLogArgsArrayKit",[$h͏_a => (makeNoteLogArgsArrayKit = $h͏_a)]]]]]);
 
 
@@ -3498,7 +3667,7 @@ const assert = makeAssert();$h͏_once.assert(assert);
 const assertEqual = assert.equal;$h͏_once.assertEqual(assertEqual);
 })()
 ,
-// === 12. ses ./src/make-hardener.js ===
+// === 13. ses ./src/make-hardener.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Set,String,TypeError,WeakSet,globalThis,apply,arrayForEach,defineProperty,freeze,getOwnPropertyDescriptor,getOwnPropertyDescriptors,getPrototypeOf,isInteger,isObject,objectHasOwnProperty,ownKeys,preventExtensions,setAdd,setForEach,setHas,toStringTagSymbol,typedArrayPrototype,weaksetAdd,weaksetHas,FERAL_STACK_GETTER,FERAL_STACK_SETTER,isError,assert;$h͏_imports([["./commons.js", [["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["isInteger",[$h͏_a => (isInteger = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["preventExtensions",[$h͏_a => (preventExtensions = $h͏_a)]],["setAdd",[$h͏_a => (setAdd = $h͏_a)]],["setForEach",[$h͏_a => (setForEach = $h͏_a)]],["setHas",[$h͏_a => (setHas = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["typedArrayPrototype",[$h͏_a => (typedArrayPrototype = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]],["FERAL_STACK_GETTER",[$h͏_a => (FERAL_STACK_GETTER = $h͏_a)]],["FERAL_STACK_SETTER",[$h͏_a => (FERAL_STACK_SETTER = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -3776,7 +3945,7 @@ const freezeTypedArray = array => {
 };$h͏_once.makeHardener(makeHardener);
 })()
 ,
-// === 13. ses ./src/cauterize-property.js ===
+// === 14. ses ./src/cauterize-property.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let objectHasOwnProperty;$h͏_imports([["./commons.js", [["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]]]]]);
 
 /**
@@ -3848,7 +4017,7 @@ const freezeTypedArray = array => {
 };$h͏_once.cauterizeProperty(cauterizeProperty);
 })()
 ,
-// === 14. ses ./src/permits.js ===
+// === 15. ses ./src/permits.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let arrayPush,arrayForEach;$h͏_imports([["./commons.js", [["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]]]]]);
 
 
@@ -5223,6 +5392,8 @@ const CommonMath = {
     '[[Proto]]': '%ArrayBufferPrototype%',
     byteLength: getter,
     slice: fn,
+    // See https://github.com/endojs/endo/tree/master/packages/immutable-arraybuffer#purposeful-violation
+    '@@toStringTag': 'string',
     // See https://github.com/tc39/proposal-resizablearraybuffer
     transfer: fn,
     resize: fn,
@@ -5610,7 +5781,7 @@ const CommonMath = {
 };$h͏_once.permitted(permitted);
 })()
 ,
-// === 15. ses ./src/intrinsics.js ===
+// === 16. ses ./src/intrinsics.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let cauterizeProperty,TypeError,WeakSet,arrayFilter,create,defineProperty,entries,freeze,getOwnPropertyDescriptor,getOwnPropertyDescriptors,globalThis,is,isObject,objectHasOwnProperty,values,weaksetHas,constantProperties,sharedGlobalPropertyNames,universalPropertyNames,permitted;$h͏_imports([["./cauterize-property.js", [["cauterizeProperty",[$h͏_a => (cauterizeProperty = $h͏_a)]]]],["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["values",[$h͏_a => (values = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]]]],["./permits.js", [["constantProperties",[$h͏_a => (constantProperties = $h͏_a)]],["sharedGlobalPropertyNames",[$h͏_a => (sharedGlobalPropertyNames = $h͏_a)]],["universalPropertyNames",[$h͏_a => (universalPropertyNames = $h͏_a)]],["permitted",[$h͏_a => (permitted = $h͏_a)]]]]]);
 
 
@@ -5805,7 +5976,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 };$h͏_once.getGlobalIntrinsics(getGlobalIntrinsics);
 })()
 ,
-// === 16. ses ./src/permits-intrinsics.js ===
+// === 17. ses ./src/permits-intrinsics.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let permitted,FunctionInstance,isAccessorPermit,Map,String,Symbol,TypeError,arrayFilter,arrayIncludes,arrayMap,entries,getOwnPropertyDescriptor,getPrototypeOf,isObject,mapGet,objectHasOwnProperty,ownKeys,symbolKeyFor,cauterizeProperty;$h͏_imports([["./permits.js", [["permitted",[$h͏_a => (permitted = $h͏_a)]],["FunctionInstance",[$h͏_a => (FunctionInstance = $h͏_a)]],["isAccessorPermit",[$h͏_a => (isAccessorPermit = $h͏_a)]]]],["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["Symbol",[$h͏_a => (Symbol = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayIncludes",[$h͏_a => (arrayIncludes = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["symbolKeyFor",[$h͏_a => (symbolKeyFor = $h͏_a)]]]],["./cauterize-property.js", [["cauterizeProperty",[$h͏_a => (cauterizeProperty = $h͏_a)]]]]]);
 
 
@@ -6099,7 +6270,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      removeUnpermittedIntrinsics);
 })()
 ,
-// === 17. ses ./src/tame-function-constructors.js ===
+// === 18. ses ./src/tame-function-constructors.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,SyntaxError,TypeError,defineProperties,getPrototypeOf,setPrototypeOf,freeze,AsyncGeneratorFunctionInstance;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["SyntaxError",[$h͏_a => (SyntaxError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["setPrototypeOf",[$h͏_a => (setPrototypeOf = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["AsyncGeneratorFunctionInstance",[$h͏_a => (AsyncGeneratorFunctionInstance = $h͏_a)]]]]]);
 
 
@@ -6242,7 +6413,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameFunctionConstructors);
 })()
 ,
-// === 18. ses ./src/tame-date-constructor.js ===
+// === 19. ses ./src/tame-date-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Date,TypeError,apply,construct,defineProperties;$h͏_imports([["./commons.js", [["Date",[$h͏_a => (Date = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["construct",[$h͏_a => (construct = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]]]]]);
 
 
@@ -6372,7 +6543,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameDateConstructor);
 })()
 ,
-// === 19. ses ./src/tame-math-object.js ===
+// === 20. ses ./src/tame-math-object.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Math,TypeError,create,getOwnPropertyDescriptors,objectPrototype;$h͏_imports([["./commons.js", [["Math",[$h͏_a => (Math = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["objectPrototype",[$h͏_a => (objectPrototype = $h͏_a)]]]]]);
 
 
@@ -6416,7 +6587,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameMathObject);
 })()
 ,
-// === 20. ses ./src/tame-regexp-constructor.js ===
+// === 21. ses ./src/tame-regexp-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_REG_EXP,TypeError,construct,defineProperties,getOwnPropertyDescriptor,speciesSymbol;$h͏_imports([["./commons.js", [["FERAL_REG_EXP",[$h͏_a => (FERAL_REG_EXP = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["construct",[$h͏_a => (construct = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["speciesSymbol",[$h͏_a => (speciesSymbol = $h͏_a)]]]]]);
 
 
@@ -6484,7 +6655,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameRegExpConstructor);
 })()
 ,
-// === 21. ses ./src/enablements.js ===
+// === 22. ses ./src/enablements.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let toStringTagSymbol,iteratorSymbol;$h͏_imports([["./commons.js", [["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["iteratorSymbol",[$h͏_a => (iteratorSymbol = $h͏_a)]]]]]);
 
 /**
@@ -6731,7 +6902,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 };$h͏_once.severeEnablements(severeEnablements);
 })()
 ,
-// === 22. ses ./src/enable-property-overrides.js ===
+// === 23. ses ./src/enable-property-overrides.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Set,String,TypeError,arrayForEach,defineProperty,getOwnPropertyDescriptor,getOwnPropertyDescriptors,isObject,objectHasOwnProperty,ownKeys,setHas,minEnablements,moderateEnablements,severeEnablements;$h͏_imports([["./commons.js", [["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["setHas",[$h͏_a => (setHas = $h͏_a)]]]],["./enablements.js", [["minEnablements",[$h͏_a => (minEnablements = $h͏_a)]],["moderateEnablements",[$h͏_a => (moderateEnablements = $h͏_a)]],["severeEnablements",[$h͏_a => (severeEnablements = $h͏_a)]]]]]);
 
 
@@ -6945,7 +7116,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      enablePropertyOverrides);
 })()
 ,
-// === 23. ses ./src/tame-locale-methods.js ===
+// === 24. ses ./src/tame-locale-methods.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Number,String,TypeError,defineProperty,getOwnPropertyNames,isObject,regexpExec,assert;$h͏_imports([["./commons.js", [["Number",[$h͏_a => (Number = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["regexpExec",[$h͏_a => (regexpExec = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7026,7 +7197,7 @@ const numberToString = tamedMethods.toString;
 }$h͏_once.default(      tameLocaleMethods);
 })()
 ,
-// === 24. ses ./src/make-eval-function.js ===
+// === 25. ses ./src/make-eval-function.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);/**
  * makeEvalFunction()
  * A safe version of the native eval function which relies on
@@ -7057,7 +7228,7 @@ const numberToString = tamedMethods.toString;
 };$h͏_once.makeEvalFunction(makeEvalFunction);
 })()
 ,
-// === 25. ses ./src/make-function-constructor.js ===
+// === 26. ses ./src/make-function-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,arrayJoin,arrayPop,defineProperties,getPrototypeOf,assert;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayPop",[$h͏_a => (arrayPop = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7139,7 +7310,7 @@ const { Fail } = assert;
 };$h͏_once.makeFunctionConstructor(makeFunctionConstructor);
 })()
 ,
-// === 26. ses ./src/global-object.js ===
+// === 27. ses ./src/global-object.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,assign,create,defineProperty,entries,freeze,objectHasOwnProperty,unscopablesSymbol,makeEvalFunction,makeFunctionConstructor,constantProperties,universalPropertyNames;$h͏_imports([["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["unscopablesSymbol",[$h͏_a => (unscopablesSymbol = $h͏_a)]]]],["./make-eval-function.js", [["makeEvalFunction",[$h͏_a => (makeEvalFunction = $h͏_a)]]]],["./make-function-constructor.js", [["makeFunctionConstructor",[$h͏_a => (makeFunctionConstructor = $h͏_a)]]]],["./permits.js", [["constantProperties",[$h͏_a => (constantProperties = $h͏_a)]],["universalPropertyNames",[$h͏_a => (universalPropertyNames = $h͏_a)]]]]]);
 
 
@@ -7317,7 +7488,7 @@ const { Fail } = assert;
 };$h͏_once.setGlobalObjectEvaluators(setGlobalObjectEvaluators);
 })()
 ,
-// === 27. ses ./src/strict-scope-terminator.js ===
+// === 28. ses ./src/strict-scope-terminator.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Proxy,String,TypeError,ReferenceError,create,freeze,getOwnPropertyDescriptors,assert;$h͏_imports([["./commons.js", [["Proxy",[$h͏_a => (Proxy = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["ReferenceError",[$h͏_a => (ReferenceError = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7419,7 +7590,7 @@ const scopeProxyHandlerProperties = {
 );$h͏_once.strictScopeTerminator(strictScopeTerminator);
 })()
 ,
-// === 28. ses ./src/sloppy-globals-scope-terminator.js ===
+// === 29. ses ./src/sloppy-globals-scope-terminator.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Proxy,create,freeze,getOwnPropertyDescriptors,reflectSet,strictScopeTerminatorHandler,alwaysThrowHandler;$h͏_imports([["./commons.js", [["Proxy",[$h͏_a => (Proxy = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["reflectSet",[$h͏_a => (reflectSet = $h͏_a)]]]],["./strict-scope-terminator.js", [["strictScopeTerminatorHandler",[$h͏_a => (strictScopeTerminatorHandler = $h͏_a)]],["alwaysThrowHandler",[$h͏_a => (alwaysThrowHandler = $h͏_a)]]]]]);
 
 
@@ -7483,7 +7654,7 @@ const objTarget = freeze({ __proto__: null });
 freeze(createSloppyGlobalsScopeTerminator);
 })()
 ,
-// === 29. ses ./src/eval-scope.js ===
+// === 30. ses ./src/eval-scope.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_EVAL,create,defineProperties,freeze,assert;$h͏_imports([["./commons.js", [["FERAL_EVAL",[$h͏_a => (FERAL_EVAL = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7575,7 +7746,7 @@ const { Fail } = assert;
 };$h͏_once.makeEvalScopeKit(makeEvalScopeKit);
 })()
 ,
-// === 30. ses ./src/get-source-url.js ===
+// === 31. ses ./src/get-source-url.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_REG_EXP,regexpExec,stringSlice;$h͏_imports([["./commons.js", [["FERAL_REG_EXP",[$h͏_a => (FERAL_REG_EXP = $h͏_a)]],["regexpExec",[$h͏_a => (regexpExec = $h͏_a)]],["stringSlice",[$h͏_a => (stringSlice = $h͏_a)]]]]]);
 
 // Captures a key and value of the form #key=value or @key=value
@@ -7628,7 +7799,7 @@ const sourceMetaEntriesRegExp = new FERAL_REG_EXP(
 };$h͏_once.getSourceURL(getSourceURL);
 })()
 ,
-// === 31. ses ./src/transforms.js ===
+// === 32. ses ./src/transforms.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_REG_EXP,SyntaxError,stringReplace,stringSearch,stringSlice,stringSplit,freeze,getSourceURL;$h͏_imports([["./commons.js", [["FERAL_REG_EXP",[$h͏_a => (FERAL_REG_EXP = $h͏_a)]],["SyntaxError",[$h͏_a => (SyntaxError = $h͏_a)]],["stringReplace",[$h͏_a => (stringReplace = $h͏_a)]],["stringSearch",[$h͏_a => (stringSearch = $h͏_a)]],["stringSlice",[$h͏_a => (stringSlice = $h͏_a)]],["stringSplit",[$h͏_a => (stringSplit = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]]]],["./get-source-url.js", [["getSourceURL",[$h͏_a => (getSourceURL = $h͏_a)]]]]]);
 
 
@@ -7898,7 +8069,7 @@ $h͏_once.applyTransforms(applyTransforms);const transforms=freeze({
 });$h͏_once.transforms(transforms);
 })()
 ,
-// === 32. ses ./src/scope-constants.js ===
+// === 33. ses ./src/scope-constants.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let arrayFilter,arrayIncludes,getOwnPropertyDescriptor,getOwnPropertyNames,objectHasOwnProperty,regexpTest;$h͏_imports([["./commons.js", [["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayIncludes",[$h͏_a => (arrayIncludes = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["regexpTest",[$h͏_a => (regexpTest = $h͏_a)]]]]]);
 
 
@@ -8081,7 +8252,7 @@ function isImmutableDataProperty(obj, name) {
 };$h͏_once.getScopeConstants(getScopeConstants);
 })()
 ,
-// === 33. ses ./src/make-evaluate.js ===
+// === 34. ses ./src/make-evaluate.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,arrayJoin,apply,getScopeConstants;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]]]],["./scope-constants.js", [["getScopeConstants",[$h͏_a => (getScopeConstants = $h͏_a)]]]]]);
 
 
@@ -8194,7 +8365,7 @@ function buildOptimizer(constants, name) {
 };$h͏_once.makeEvaluate(makeEvaluate);
 })()
 ,
-// === 34. ses ./src/make-safe-evaluator.js ===
+// === 35. ses ./src/make-safe-evaluator.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let apply,arrayFlatMap,freeze,identity,strictScopeTerminator,createSloppyGlobalsScopeTerminator,makeEvalScopeKit,applyTransforms,mandatoryTransforms,makeEvaluate,assert;$h͏_imports([["./commons.js", [["apply",[$h͏_a => (apply = $h͏_a)]],["arrayFlatMap",[$h͏_a => (arrayFlatMap = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["identity",[$h͏_a => (identity = $h͏_a)]]]],["./strict-scope-terminator.js", [["strictScopeTerminator",[$h͏_a => (strictScopeTerminator = $h͏_a)]]]],["./sloppy-globals-scope-terminator.js", [["createSloppyGlobalsScopeTerminator",[$h͏_a => (createSloppyGlobalsScopeTerminator = $h͏_a)]]]],["./eval-scope.js", [["makeEvalScopeKit",[$h͏_a => (makeEvalScopeKit = $h͏_a)]]]],["./transforms.js", [["applyTransforms",[$h͏_a => (applyTransforms = $h͏_a)]],["mandatoryTransforms",[$h͏_a => (mandatoryTransforms = $h͏_a)]]]],["./make-evaluate.js", [["makeEvaluate",[$h͏_a => (makeEvaluate = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -8309,7 +8480,7 @@ const { Fail } = assert;
 };$h͏_once.makeSafeEvaluator(makeSafeEvaluator);
 })()
 ,
-// === 35. ses ./src/tame-function-tostring.js ===
+// === 36. ses ./src/tame-function-tostring.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let WeakSet,defineProperty,freeze,functionPrototype,functionToString,stringEndsWith,weaksetAdd,weaksetHas;$h͏_imports([["./commons.js", [["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["functionPrototype",[$h͏_a => (functionPrototype = $h͏_a)]],["functionToString",[$h͏_a => (functionToString = $h͏_a)]],["stringEndsWith",[$h͏_a => (stringEndsWith = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]]]]]);
 
 
@@ -8362,7 +8533,7 @@ let markVirtualizedNativeFunction;
 };$h͏_once.tameFunctionToString(tameFunctionToString);
 })()
 ,
-// === 36. ses ./src/tame-domains.js ===
+// === 37. ses ./src/tame-domains.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,globalThis,getOwnPropertyDescriptor,defineProperty;$h͏_imports([["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]]]]]);Object.defineProperty(tameDomains,'name',{value:"tameDomains"});$h͏_once.tameDomains(tameDomains);
 
 
@@ -8406,7 +8577,7 @@ let markVirtualizedNativeFunction;
 }
 })()
 ,
-// === 37. ses ./src/tame-module-source.js ===
+// === 38. ses ./src/tame-module-source.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let functionPrototype,getPrototypeOf,globalThis,objectPrototype,setPrototypeOf;$h͏_imports([["./commons.js", [["functionPrototype",[$h͏_a => (functionPrototype = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["objectPrototype",[$h͏_a => (objectPrototype = $h͏_a)]],["setPrototypeOf",[$h͏_a => (setPrototypeOf = $h͏_a)]]]]]);
 
 
@@ -8460,7 +8631,7 @@ let markVirtualizedNativeFunction;
 };$h͏_once.tameModuleSource(tameModuleSource);
 })()
 ,
-// === 38. ses ./src/error/console.js ===
+// === 39. ses ./src/error/console.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let WeakSet,arrayFilter,arrayFlatMap,arrayMap,arrayPop,arrayPush,defineProperty,freeze,fromEntries,isError,stringEndsWith,stringIncludes,stringSplit,weaksetAdd,weaksetHas;$h͏_imports([["../commons.js", [["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayFlatMap",[$h͏_a => (arrayFlatMap = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arrayPop",[$h͏_a => (arrayPop = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]],["stringEndsWith",[$h͏_a => (stringEndsWith = $h͏_a)]],["stringIncludes",[$h͏_a => (stringIncludes = $h͏_a)]],["stringSplit",[$h͏_a => (stringSplit = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]]]]]);
 
 
@@ -9004,7 +9175,7 @@ freeze(defineCausalConsoleFromLogger);
 freeze(filterConsole);
 })()
 ,
-// === 39. ses ./src/error/unhandled-rejection.js ===
+// === 40. ses ./src/error/unhandled-rejection.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FinalizationRegistry,Map,mapGet,mapDelete,WeakMap,mapSet,finalizationRegistryRegister,weakmapSet,weakmapGet,mapEntries,mapHas;$h͏_imports([["../commons.js", [["FinalizationRegistry",[$h͏_a => (FinalizationRegistry = $h͏_a)]],["Map",[$h͏_a => (Map = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapDelete",[$h͏_a => (mapDelete = $h͏_a)]],["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["finalizationRegistryRegister",[$h͏_a => (finalizationRegistryRegister = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["mapEntries",[$h͏_a => (mapEntries = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]]]]]);
 
 
@@ -9129,7 +9300,7 @@ freeze(filterConsole);
 };$h͏_once.makeRejectionHandlers(makeRejectionHandlers);
 })()
 ,
-// === 40. ses ./src/error/tame-console.js ===
+// === 41. ses ./src/error/tame-console.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,apply,defineProperty,freeze,globalThis,defaultHandler,makeCausalConsole,makeRejectionHandlers;$h͏_imports([["../commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./assert.js", [["loggedErrorHandler",[$h͏_a => (defaultHandler = $h͏_a)]]]],["./console.js", [["makeCausalConsole",[$h͏_a => (makeCausalConsole = $h͏_a)]]]],["./unhandled-rejection.js", [["makeRejectionHandlers",[$h͏_a => (makeRejectionHandlers = $h͏_a)]]]]]);
 
 
@@ -9329,7 +9500,7 @@ const wrapLogger = (logger, thisArg) =>
 };$h͏_once.tameConsole(tameConsole);
 })()
 ,
-// === 41. ses ./src/error/tame-v8-error-constructor.js ===
+// === 42. ses ./src/error/tame-v8-error-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let WeakMap,WeakSet,apply,arrayFilter,arrayJoin,arrayMap,arraySlice,create,defineProperties,fromEntries,reflectSet,regexpExec,regexpTest,weakmapGet,weakmapSet,weaksetAdd,weaksetHas,TypeError;$h͏_imports([["../commons.js", [["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arraySlice",[$h͏_a => (arraySlice = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["reflectSet",[$h͏_a => (reflectSet = $h͏_a)]],["regexpExec",[$h͏_a => (regexpExec = $h͏_a)]],["regexpTest",[$h͏_a => (regexpTest = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]]]]]);
 
 
@@ -9718,7 +9889,7 @@ const CALLSITE_PATTERNS = [
 };$h͏_once.tameV8ErrorConstructor(tameV8ErrorConstructor);
 })()
 ,
-// === 42. ses ./src/error/tame-error-constructor.js ===
+// === 43. ses ./src/error/tame-error-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_ERROR,apply,construct,defineProperties,setPrototypeOf,getOwnPropertyDescriptor,defineProperty,getOwnPropertyDescriptors,NativeErrors,tameV8ErrorConstructor;$h͏_imports([["../commons.js", [["FERAL_ERROR",[$h͏_a => (FERAL_ERROR = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["construct",[$h͏_a => (construct = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["setPrototypeOf",[$h͏_a => (setPrototypeOf = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]]]],["../permits.js", [["NativeErrors",[$h͏_a => (NativeErrors = $h͏_a)]]]],["./tame-v8-error-constructor.js", [["tameV8ErrorConstructor",[$h͏_a => (tameV8ErrorConstructor = $h͏_a)]]]]]);
 
 
@@ -10005,7 +10176,7 @@ let initialGetStackString = tamedMethods.getStackString;
 }$h͏_once.default(      tameErrorConstructor);
 })()
 ,
-// === 43. ses ./src/module-load.js ===
+// === 44. ses ./src/module-load.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let getenv,Map,Set,TypeError,arrayJoin,arrayMap,arrayPush,arraySome,create,freeze,generatorNext,generatorThrow,getOwnPropertyNames,isArray,isObject,mapGet,mapHas,mapSet,promiseThen,setAdd,values,weakmapGet,weakmapHas,makeError,annotateError,q,b,X;$h͏_imports([["@endo/env-options", [["getEnvironmentOption",[$h͏_a => (getenv = $h͏_a)]]]],["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["Set",[$h͏_a => (Set = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["arraySome",[$h͏_a => (arraySome = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["generatorNext",[$h͏_a => (generatorNext = $h͏_a)]],["generatorThrow",[$h͏_a => (generatorThrow = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["promiseThen",[$h͏_a => (promiseThen = $h͏_a)]],["setAdd",[$h͏_a => (setAdd = $h͏_a)]],["values",[$h͏_a => (values = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapHas",[$h͏_a => (weakmapHas = $h͏_a)]]]],["./error/assert.js", [["makeError",[$h͏_a => (makeError = $h͏_a)]],["annotateError",[$h͏_a => (annotateError = $h͏_a)]],["q",[$h͏_a => (q = $h͏_a)]],["b",[$h͏_a => (b = $h͏_a)]],["X",[$h͏_a => (X = $h͏_a)]]]]]);
 
 
@@ -10692,7 +10863,7 @@ const preferAsync = (asyncImpl, _syncImpl) => asyncImpl;
 };$h͏_once.loadNow(loadNow);
 })()
 ,
-// === 44. ses ./src/module-proxy.js ===
+// === 45. ses ./src/module-proxy.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let makeAlias,Proxy,TypeError,create,freeze,mapGet,mapHas,mapSet,ownKeys,reflectGet,reflectGetOwnPropertyDescriptor,reflectHas,reflectIsExtensible,reflectPreventExtensions,toStringTagSymbol,weakmapSet,assert;$h͏_imports([["./module-load.js", [["makeAlias",[$h͏_a => (makeAlias = $h͏_a)]]]],["./commons.js", [["Proxy",[$h͏_a => (Proxy = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["reflectGet",[$h͏_a => (reflectGet = $h͏_a)]],["reflectGetOwnPropertyDescriptor",[$h͏_a => (reflectGetOwnPropertyDescriptor = $h͏_a)]],["reflectHas",[$h͏_a => (reflectHas = $h͏_a)]],["reflectIsExtensible",[$h͏_a => (reflectIsExtensible = $h͏_a)]],["reflectPreventExtensions",[$h͏_a => (reflectPreventExtensions = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -10895,7 +11066,7 @@ const { quote: q } = assert;
 };$h͏_once.getDeferredExports(getDeferredExports);
 })()
 ,
-// === 45. ses ./src/compartment-evaluate.js ===
+// === 46. ses ./src/compartment-evaluate.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,arrayPush,create,getOwnPropertyDescriptors,evadeHtmlCommentTest,evadeImportExpressionTest,rejectSomeDirectEvalExpressions,makeSafeEvaluator;$h͏_imports([["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]]]],["./transforms.js", [["evadeHtmlCommentTest",[$h͏_a => (evadeHtmlCommentTest = $h͏_a)]],["evadeImportExpressionTest",[$h͏_a => (evadeImportExpressionTest = $h͏_a)]],["rejectSomeDirectEvalExpressions",[$h͏_a => (rejectSomeDirectEvalExpressions = $h͏_a)]]]],["./make-safe-evaluator.js", [["makeSafeEvaluator",[$h͏_a => (makeSafeEvaluator = $h͏_a)]]]]]);
 
 
@@ -10991,7 +11162,7 @@ const { quote: q } = assert;
 };$h͏_once.compartmentEvaluate(compartmentEvaluate);
 })()
 ,
-// === 46. ses ./src/module-instance.js ===
+// === 47. ses ./src/module-instance.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let assert,getDeferredExports,ReferenceError,SyntaxError,TypeError,arrayForEach,arrayIncludes,arrayPush,arraySome,arraySort,create,defineProperty,entries,freeze,isArray,keys,mapGet,weakmapGet,reflectHas,assign,compartmentEvaluate;$h͏_imports([["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]],["./module-proxy.js", [["getDeferredExports",[$h͏_a => (getDeferredExports = $h͏_a)]]]],["./commons.js", [["ReferenceError",[$h͏_a => (ReferenceError = $h͏_a)]],["SyntaxError",[$h͏_a => (SyntaxError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]],["arrayIncludes",[$h͏_a => (arrayIncludes = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["arraySome",[$h͏_a => (arraySome = $h͏_a)]],["arraySort",[$h͏_a => (arraySort = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["keys",[$h͏_a => (keys = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["reflectHas",[$h͏_a => (reflectHas = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]]]],["./compartment-evaluate.js", [["compartmentEvaluate",[$h͏_a => (compartmentEvaluate = $h͏_a)]]]]]);
 
 
@@ -11491,7 +11662,7 @@ $h͏_once.makeVirtualModuleInstance(makeVirtualModuleInstance);const makeModuleI
 };$h͏_once.makeModuleInstance(makeModuleInstance);
 })()
 ,
-// === 47. ses ./src/module-link.js ===
+// === 48. ses ./src/module-link.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let assert,makeModuleInstance,makeVirtualModuleInstance,Map,ReferenceError,TypeError,entries,isArray,isObject,mapGet,mapHas,mapSet,weakmapGet;$h͏_imports([["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]],["./module-instance.js", [["makeModuleInstance",[$h͏_a => (makeModuleInstance = $h͏_a)]],["makeVirtualModuleInstance",[$h͏_a => (makeVirtualModuleInstance = $h͏_a)]]]],["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["ReferenceError",[$h͏_a => (ReferenceError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]]]]]);
 
 
@@ -11653,7 +11824,7 @@ function validateModuleSource(moduleSource, moduleSpecifier) {
 };$h͏_once.instantiate(instantiate);
 })()
 ,
-// === 48. ses ./src/compartment.js ===
+// === 49. ses ./src/compartment.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Map,TypeError,WeakMap,arrayFlatMap,assign,defineProperties,identity,promiseThen,toStringTagSymbol,weakmapGet,weakmapSet,setGlobalObjectSymbolUnscopables,setGlobalObjectConstantProperties,setGlobalObjectMutableProperties,setGlobalObjectEvaluators,assert,assertEqual,q,sharedGlobalPropertyNames,load,loadNow,link,getDeferredExports,compartmentEvaluate,makeSafeEvaluator;$h͏_imports([["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["arrayFlatMap",[$h͏_a => (arrayFlatMap = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["identity",[$h͏_a => (identity = $h͏_a)]],["promiseThen",[$h͏_a => (promiseThen = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]]]],["./global-object.js", [["setGlobalObjectSymbolUnscopables",[$h͏_a => (setGlobalObjectSymbolUnscopables = $h͏_a)]],["setGlobalObjectConstantProperties",[$h͏_a => (setGlobalObjectConstantProperties = $h͏_a)]],["setGlobalObjectMutableProperties",[$h͏_a => (setGlobalObjectMutableProperties = $h͏_a)]],["setGlobalObjectEvaluators",[$h͏_a => (setGlobalObjectEvaluators = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]],["assertEqual",[$h͏_a => (assertEqual = $h͏_a)]],["q",[$h͏_a => (q = $h͏_a)]]]],["./permits.js", [["sharedGlobalPropertyNames",[$h͏_a => (sharedGlobalPropertyNames = $h͏_a)]]]],["./module-load.js", [["load",[$h͏_a => (load = $h͏_a)]],["loadNow",[$h͏_a => (loadNow = $h͏_a)]]]],["./module-link.js", [["link",[$h͏_a => (link = $h͏_a)]]]],["./module-proxy.js", [["getDeferredExports",[$h͏_a => (getDeferredExports = $h͏_a)]]]],["./compartment-evaluate.js", [["compartmentEvaluate",[$h͏_a => (compartmentEvaluate = $h͏_a)]]]],["./make-safe-evaluator.js", [["makeSafeEvaluator",[$h͏_a => (makeSafeEvaluator = $h͏_a)]]]]]);
 
 
@@ -11723,18 +11894,49 @@ function validateModuleSource(moduleSource, moduleSpecifier) {
 
 
 
+/**
+ * @import {ImportHook, ImportMetaHook, ImportNowHook, ModuleDescriptor, ModuleExportsNamespace, ModuleMap, ModuleMapHook, ResolveHook, ModuleSource, CompartmentOptions} from '../types.js'
+ * @import {Transform} from './lockdown.js'
+ * @import {DeferredExports} from './module-proxy.js'
+ */
 
-/** @import {ModuleDescriptor, ModuleExportsNamespace} from '../types.js' */
-
-// moduleAliases associates every public module exports namespace with its
-// corresponding compartment and specifier so they can be used to link modules
-// across compartments.
-// The mechanism to thread an alias is to use the compartment.module function
-// to obtain the exports namespace of a foreign module and pass it into another
-// compartment's moduleMap constructor option.
+/**
+ * Associates every public module exports namespace with its corresponding
+ * compartment and specifier so they can be used to link modules across
+ * compartments. The mechanism to thread an alias is to use the
+ * {@link Compartment.module} function to obtain the exports namespace of a foreign
+ * module and pass it into another compartment's `moduleMap` constructor option
+ * @type {WeakMap<ModuleExportsNamespace, Compartment>}
+ *
+ */
 const moduleAliases = new WeakMap();
 
-// privateFields captures the private state for each compartment.
+/**
+ * Private fields for `Compartment` instances
+ * @typedef {object} CompartmentFields
+ * @property {string} name
+ * @property {object} globalObject
+ * @property {Array<Transform>} globalTransforms
+ * @property {(source: string, options?: {localTransforms?: Array<Transform>}) => void} safeEvaluate
+ * @property {ResolveHook} resolveHook
+ * @property {ImportHook} importHook
+ * @property {ImportNowHook} importNowHook
+ * @property {ModuleMap} moduleMap
+ * @property {ModuleMapHook} moduleMapHook
+ * @property {ImportMetaHook} importMetaHook
+ * @property {Map<string, ModuleSource>} moduleRecords
+ * @property {Array<Transform>} __shimTransforms__
+ * @property {DeferredExports} deferredExports
+ * @property {Map<string, ModuleDescriptor>} instances
+ * @property {Compartment} [parentCompartment]
+ * @property {boolean} noNamespaceBox
+ * @property {(fullSpecifier: string) => Promise<ModuleExportsNamespace>} compartmentImport
+ */
+
+/**
+ * Captures the private state for each {@link Compartment}
+ * @type {WeakMap<Compartment, CompartmentFields>}
+ */
 const privateFields = new WeakMap();
 
        const InertCompartment = function Compartment(
@@ -11750,6 +11952,7 @@ const privateFields = new WeakMap();
 /**
  * @param {Compartment} compartment
  * @param {string} specifier
+ * @returns {{namespace: ModuleExportsNamespace}}
  */$h͏_once.InertCompartment(InertCompartment);
 const compartmentImportNow = (compartment, specifier) => {
   const { execute, exportsProxy } = link(
@@ -11762,27 +11965,20 @@ const compartmentImportNow = (compartment, specifier) => {
   return exportsProxy;
 };
 
+/** @type {Compartment & {constructor: typeof InertCompartment}} */
        const CompartmentPrototype = {
   constructor: InertCompartment,
 
   get globalThis() {
-    return weakmapGet(privateFields, this).globalObject;
+    return /** @type {CompartmentFields} */ (weakmapGet(privateFields, this))
+      .globalObject;
   },
 
   get name() {
-    return weakmapGet(privateFields, this).name;
+    return /** @type {CompartmentFields} */ (weakmapGet(privateFields, this))
+      .name;
   },
 
-  /**
-   * @param {string} source is a JavaScript program grammar construction.
-   * @param {object} [options]
-   * @param {Array<import('./lockdown-shim').Transform>} [options.transforms]
-   * @param {boolean} [options.sloppyGlobalsMode]
-   * @param {object} [options.__moduleShimLexicals__]
-   * @param {boolean} [options.__evadeHtmlCommentTest__]
-   * @param {boolean} [options.__evadeImportExpressionTest__]
-   * @param {boolean} [options.__rejectSomeDirectEvalExpressions__]
-   */
   evaluate(source, options = {}) {
     const compartmentFields = weakmapGet(privateFields, this);
     return compartmentEvaluate(compartmentFields, source, options);
@@ -11804,7 +12000,9 @@ const compartmentImportNow = (compartment, specifier) => {
   },
 
   async import(specifier) {
-    const { noNamespaceBox } = weakmapGet(privateFields, this);
+    const { noNamespaceBox } = /** @type {CompartmentFields} */ (
+      weakmapGet(privateFields, this)
+    );
 
     if (typeof specifier !== 'string') {
       throw TypeError('first argument of import() must be a string');
@@ -11843,7 +12041,7 @@ const compartmentImportNow = (compartment, specifier) => {
     }
 
     loadNow(privateFields, moduleAliases, this, specifier);
-    return compartmentImportNow(/** @type {Compartment} */ (this), specifier);
+    return compartmentImportNow(this, specifier);
   },
 };
 
@@ -11874,15 +12072,35 @@ defineProperties(InertCompartment, {
  * @returns {Compartment['constructor']}
  */
 
-// In order to facilitate migration from the deprecated signature
-// of the compartment constructor,
-//   new Compartent(globals?, modules?, options?)
-// to the new signature:
-//   new Compartment(options?)
-// where globals and modules are expressed in the options bag instead of
-// positional arguments, this function detects the temporary sigil __options__
-// on the first argument and coerces compartments arguments into a single
-// compartments object.
+/**
+ * "Options bag"-style `Compartment` constructor arguments.
+ * @typedef {[options?: CompartmentOptions & { __options__: true }]} CompartmentOptionsArgs
+ */
+
+/**
+ * Legacy `Compartment` constructor arguments.
+ *
+ * @deprecated
+ * @typedef {[globals?: Map<string, any>, modules?: Map<string, ModuleDescriptor>, options?: CompartmentOptions]} LegacyCompartmentOptionsArgs
+ */
+
+/**
+ * In order to facilitate migration from the deprecated signature of the
+ * compartment constructor,
+ *
+ * `new Compartent(globals?, modules?, options?)`
+ *
+ * to the new signature:
+ *
+ * `new Compartment(options?)`
+ *
+ * ...where globals and modules are expressed in the options bag instead of
+ * positional arguments, this function detects the temporary sigil __options__
+ * on the first argument and coerces compartments arguments into a single
+ * compartments object.
+ * @param {CompartmentOptionsArgs|LegacyCompartmentOptionsArgs} args
+ * @returns {CompartmentOptions}
+ */
        const compartmentOptions = (...args) => {
   if (args.length === 0) {
     return {};
@@ -11904,7 +12122,7 @@ defineProperties(InertCompartment, {
       globals = /** @type {Map<string, any>} */ ({}),
       modules = /** @type {Map<string, ModuleDescriptor>} */ ({}),
       options = {},
-    ] = args;
+    ] = /** @type {LegacyCompartmentOptionsArgs} */ (args);
     assertEqual(
       options.modules,
       undefined,
@@ -11930,6 +12148,10 @@ defineProperties(InertCompartment, {
   markVirtualizedNativeFunction,
   { parentCompartment = undefined, enforceNew = false } = {},
 ) => {
+  /**
+   *
+   * @param {CompartmentOptionsArgs|LegacyCompartmentOptionsArgs} args
+   */
   function Compartment(...args) {
     if (enforceNew && new.target === undefined) {
       throw TypeError(
@@ -12065,7 +12287,7 @@ defineProperties(InertCompartment, {
 };$h͏_once.makeCompartmentConstructor(makeCompartmentConstructor);
 })()
 ,
-// === 49. ses ./src/get-anonymous-intrinsics.js ===
+// === 50. ses ./src/get-anonymous-intrinsics.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,Float32Array,Map,Set,String,getOwnPropertyDescriptor,getPrototypeOf,iterateArray,iterateMap,iterateSet,iterateString,matchAllRegExp,matchAllSymbol,regexpPrototype,globalThis,assign,AsyncGeneratorFunctionInstance,ArrayBuffer,InertCompartment;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["Float32Array",[$h͏_a => (Float32Array = $h͏_a)]],["Map",[$h͏_a => (Map = $h͏_a)]],["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["iterateArray",[$h͏_a => (iterateArray = $h͏_a)]],["iterateMap",[$h͏_a => (iterateMap = $h͏_a)]],["iterateSet",[$h͏_a => (iterateSet = $h͏_a)]],["iterateString",[$h͏_a => (iterateString = $h͏_a)]],["matchAllRegExp",[$h͏_a => (matchAllRegExp = $h͏_a)]],["matchAllSymbol",[$h͏_a => (matchAllSymbol = $h͏_a)]],["regexpPrototype",[$h͏_a => (regexpPrototype = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["AsyncGeneratorFunctionInstance",[$h͏_a => (AsyncGeneratorFunctionInstance = $h͏_a)]],["ArrayBuffer",[$h͏_a => (ArrayBuffer = $h͏_a)]]]],["./compartment.js", [["InertCompartment",[$h͏_a => (InertCompartment = $h͏_a)]]]]]);
 
 
@@ -12249,7 +12471,7 @@ function makeArguments() {
 };$h͏_once.getAnonymousIntrinsics(getAnonymousIntrinsics);
 })()
 ,
-// === 50. ses ./src/tame-harden.js ===
+// === 51. ses ./src/tame-harden.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let freeze;$h͏_imports([["./commons.js", [["freeze",[$h͏_a => (freeze = $h͏_a)]]]]]);
 
 
@@ -12281,7 +12503,7 @@ function makeArguments() {
 freeze(tameHarden);
 })()
 ,
-// === 51. ses ./src/tame-symbol-constructor.js ===
+// === 52. ses ./src/tame-symbol-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Symbol,entries,fromEntries,getOwnPropertyDescriptors,defineProperties,arrayMap,functionBind;$h͏_imports([["./commons.js", [["Symbol",[$h͏_a => (Symbol = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["functionBind",[$h͏_a => (functionBind = $h͏_a)]]]]]);
 
 
@@ -12348,7 +12570,7 @@ freeze(tameHarden);
 };$h͏_once.tameSymbolConstructor(tameSymbolConstructor);
 })()
 ,
-// === 52. ses ./src/tame-faux-data-properties.js ===
+// === 53. ses ./src/tame-faux-data-properties.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let getOwnPropertyDescriptor,apply,defineProperty,toStringTagSymbol;$h͏_imports([["./commons.js", [["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]]]]]);
 
 
@@ -12561,7 +12783,7 @@ const throws = thunk => {
 };$h͏_once.tameFauxDataProperties(tameFauxDataProperties);
 })()
 ,
-// === 53. ses ./src/tame-regenerator-runtime.js ===
+// === 54. ses ./src/tame-regenerator-runtime.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let defineProperty,iteratorPrototype,iteratorSymbol,objectHasOwnProperty;$h͏_imports([["./commons.js", [["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["iteratorPrototype",[$h͏_a => (iteratorPrototype = $h͏_a)]],["iteratorSymbol",[$h͏_a => (iteratorSymbol = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]]]]]);
 
 
@@ -12593,7 +12815,7 @@ const throws = thunk => {
 };$h͏_once.tameRegeneratorRuntime(tameRegeneratorRuntime);
 })()
 ,
-// === 54. ses ./src/shim-arraybuffer-transfer.js ===
+// === 55. ses ./src/shim-arraybuffer-transfer.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let ArrayBuffer,arrayBufferPrototype,arrayBufferSlice,arrayBufferGetByteLength,Uint8Array,typedArraySet,globalThis,TypeError,defineProperty;$h͏_imports([["./commons.js", [["ArrayBuffer",[$h͏_a => (ArrayBuffer = $h͏_a)]],["arrayBufferPrototype",[$h͏_a => (arrayBufferPrototype = $h͏_a)]],["arrayBufferSlice",[$h͏_a => (arrayBufferSlice = $h͏_a)]],["arrayBufferGetByteLength",[$h͏_a => (arrayBufferGetByteLength = $h͏_a)]],["Uint8Array",[$h͏_a => (Uint8Array = $h͏_a)]],["typedArraySet",[$h͏_a => (typedArraySet = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]]]]]);
 
 
@@ -12681,7 +12903,7 @@ const throws = thunk => {
 };$h͏_once.shimArrayBufferTransfer(shimArrayBufferTransfer);
 })()
 ,
-// === 55. ses ./src/reporting.js ===
+// === 56. ses ./src/reporting.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let functionBind,globalThis,assert;$h͏_imports([["./commons.js", [["functionBind",[$h͏_a => (functionBind = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -12789,8 +13011,8 @@ const mute = () => {};
 };$h͏_once.reportInGroup(reportInGroup);
 })()
 ,
-// === 56. ses ./src/lockdown.js ===
-({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let getenv,FERAL_FUNCTION,FERAL_EVAL,TypeError,arrayFilter,globalThis,is,ownKeys,stringSplit,noEvalEvaluate,getOwnPropertyNames,getPrototypeOf,makeHardener,makeIntrinsicsCollector,removeUnpermittedIntrinsics,tameFunctionConstructors,tameDateConstructor,tameMathObject,tameRegExpConstructor,enablePropertyOverrides,tameLocaleMethods,setGlobalObjectConstantProperties,setGlobalObjectMutableProperties,setGlobalObjectEvaluators,makeSafeEvaluator,initialGlobalPropertyNames,tameFunctionToString,tameDomains,tameModuleSource,tameConsole,tameErrorConstructor,assert,makeAssert,getAnonymousIntrinsics,makeCompartmentConstructor,tameHarden,tameSymbolConstructor,tameFauxDataProperties,tameRegeneratorRuntime,shimArrayBufferTransfer,reportInGroup,chooseReporter;$h͏_imports([["@endo/env-options", [["getEnvironmentOption",[$h͏_a => (getenv = $h͏_a)]]]],["@endo/immutable-arraybuffer/shim-hermes.js", []],["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["FERAL_EVAL",[$h͏_a => (FERAL_EVAL = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["stringSplit",[$h͏_a => (stringSplit = $h͏_a)]],["noEvalEvaluate",[$h͏_a => (noEvalEvaluate = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]]]],["./make-hardener.js", [["makeHardener",[$h͏_a => (makeHardener = $h͏_a)]]]],["./intrinsics.js", [["makeIntrinsicsCollector",[$h͏_a => (makeIntrinsicsCollector = $h͏_a)]]]],["./permits-intrinsics.js", [["default",[$h͏_a => (removeUnpermittedIntrinsics = $h͏_a)]]]],["./tame-function-constructors.js", [["default",[$h͏_a => (tameFunctionConstructors = $h͏_a)]]]],["./tame-date-constructor.js", [["default",[$h͏_a => (tameDateConstructor = $h͏_a)]]]],["./tame-math-object.js", [["default",[$h͏_a => (tameMathObject = $h͏_a)]]]],["./tame-regexp-constructor.js", [["default",[$h͏_a => (tameRegExpConstructor = $h͏_a)]]]],["./enable-property-overrides.js", [["default",[$h͏_a => (enablePropertyOverrides = $h͏_a)]]]],["./tame-locale-methods.js", [["default",[$h͏_a => (tameLocaleMethods = $h͏_a)]]]],["./global-object.js", [["setGlobalObjectConstantProperties",[$h͏_a => (setGlobalObjectConstantProperties = $h͏_a)]],["setGlobalObjectMutableProperties",[$h͏_a => (setGlobalObjectMutableProperties = $h͏_a)]],["setGlobalObjectEvaluators",[$h͏_a => (setGlobalObjectEvaluators = $h͏_a)]]]],["./make-safe-evaluator.js", [["makeSafeEvaluator",[$h͏_a => (makeSafeEvaluator = $h͏_a)]]]],["./permits.js", [["initialGlobalPropertyNames",[$h͏_a => (initialGlobalPropertyNames = $h͏_a)]]]],["./tame-function-tostring.js", [["tameFunctionToString",[$h͏_a => (tameFunctionToString = $h͏_a)]]]],["./tame-domains.js", [["tameDomains",[$h͏_a => (tameDomains = $h͏_a)]]]],["./tame-module-source.js", [["tameModuleSource",[$h͏_a => (tameModuleSource = $h͏_a)]]]],["./error/tame-console.js", [["tameConsole",[$h͏_a => (tameConsole = $h͏_a)]]]],["./error/tame-error-constructor.js", [["default",[$h͏_a => (tameErrorConstructor = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]],["makeAssert",[$h͏_a => (makeAssert = $h͏_a)]]]],["./get-anonymous-intrinsics.js", [["getAnonymousIntrinsics",[$h͏_a => (getAnonymousIntrinsics = $h͏_a)]]]],["./compartment.js", [["makeCompartmentConstructor",[$h͏_a => (makeCompartmentConstructor = $h͏_a)]]]],["./tame-harden.js", [["tameHarden",[$h͏_a => (tameHarden = $h͏_a)]]]],["./tame-symbol-constructor.js", [["tameSymbolConstructor",[$h͏_a => (tameSymbolConstructor = $h͏_a)]]]],["./tame-faux-data-properties.js", [["tameFauxDataProperties",[$h͏_a => (tameFauxDataProperties = $h͏_a)]]]],["./tame-regenerator-runtime.js", [["tameRegeneratorRuntime",[$h͏_a => (tameRegeneratorRuntime = $h͏_a)]]]],["./shim-arraybuffer-transfer.js", [["shimArrayBufferTransfer",[$h͏_a => (shimArrayBufferTransfer = $h͏_a)]]]],["./reporting.js", [["reportInGroup",[$h͏_a => (reportInGroup = $h͏_a)]],["chooseReporter",[$h͏_a => (chooseReporter = $h͏_a)]]]]]);
+// === 57. ses ./src/lockdown.js ===
+({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let getenv,FERAL_FUNCTION,FERAL_EVAL,TypeError,arrayFilter,globalThis,is,ownKeys,stringSplit,noEvalEvaluate,getOwnPropertyNames,getPrototypeOf,makeHardener,makeIntrinsicsCollector,removeUnpermittedIntrinsics,tameFunctionConstructors,tameDateConstructor,tameMathObject,tameRegExpConstructor,enablePropertyOverrides,tameLocaleMethods,setGlobalObjectConstantProperties,setGlobalObjectMutableProperties,setGlobalObjectEvaluators,makeSafeEvaluator,initialGlobalPropertyNames,tameFunctionToString,tameDomains,tameModuleSource,tameConsole,tameErrorConstructor,assert,makeAssert,getAnonymousIntrinsics,makeCompartmentConstructor,tameHarden,tameSymbolConstructor,tameFauxDataProperties,tameRegeneratorRuntime,shimArrayBufferTransfer,reportInGroup,chooseReporter;$h͏_imports([["@endo/env-options", [["getEnvironmentOption",[$h͏_a => (getenv = $h͏_a)]]]],["@endo/immutable-arraybuffer/shim.js", []],["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["FERAL_EVAL",[$h͏_a => (FERAL_EVAL = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["stringSplit",[$h͏_a => (stringSplit = $h͏_a)]],["noEvalEvaluate",[$h͏_a => (noEvalEvaluate = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]]]],["./make-hardener.js", [["makeHardener",[$h͏_a => (makeHardener = $h͏_a)]]]],["./intrinsics.js", [["makeIntrinsicsCollector",[$h͏_a => (makeIntrinsicsCollector = $h͏_a)]]]],["./permits-intrinsics.js", [["default",[$h͏_a => (removeUnpermittedIntrinsics = $h͏_a)]]]],["./tame-function-constructors.js", [["default",[$h͏_a => (tameFunctionConstructors = $h͏_a)]]]],["./tame-date-constructor.js", [["default",[$h͏_a => (tameDateConstructor = $h͏_a)]]]],["./tame-math-object.js", [["default",[$h͏_a => (tameMathObject = $h͏_a)]]]],["./tame-regexp-constructor.js", [["default",[$h͏_a => (tameRegExpConstructor = $h͏_a)]]]],["./enable-property-overrides.js", [["default",[$h͏_a => (enablePropertyOverrides = $h͏_a)]]]],["./tame-locale-methods.js", [["default",[$h͏_a => (tameLocaleMethods = $h͏_a)]]]],["./global-object.js", [["setGlobalObjectConstantProperties",[$h͏_a => (setGlobalObjectConstantProperties = $h͏_a)]],["setGlobalObjectMutableProperties",[$h͏_a => (setGlobalObjectMutableProperties = $h͏_a)]],["setGlobalObjectEvaluators",[$h͏_a => (setGlobalObjectEvaluators = $h͏_a)]]]],["./make-safe-evaluator.js", [["makeSafeEvaluator",[$h͏_a => (makeSafeEvaluator = $h͏_a)]]]],["./permits.js", [["initialGlobalPropertyNames",[$h͏_a => (initialGlobalPropertyNames = $h͏_a)]]]],["./tame-function-tostring.js", [["tameFunctionToString",[$h͏_a => (tameFunctionToString = $h͏_a)]]]],["./tame-domains.js", [["tameDomains",[$h͏_a => (tameDomains = $h͏_a)]]]],["./tame-module-source.js", [["tameModuleSource",[$h͏_a => (tameModuleSource = $h͏_a)]]]],["./error/tame-console.js", [["tameConsole",[$h͏_a => (tameConsole = $h͏_a)]]]],["./error/tame-error-constructor.js", [["default",[$h͏_a => (tameErrorConstructor = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]],["makeAssert",[$h͏_a => (makeAssert = $h͏_a)]]]],["./get-anonymous-intrinsics.js", [["getAnonymousIntrinsics",[$h͏_a => (getAnonymousIntrinsics = $h͏_a)]]]],["./compartment.js", [["makeCompartmentConstructor",[$h͏_a => (makeCompartmentConstructor = $h͏_a)]]]],["./tame-harden.js", [["tameHarden",[$h͏_a => (tameHarden = $h͏_a)]]]],["./tame-symbol-constructor.js", [["tameSymbolConstructor",[$h͏_a => (tameSymbolConstructor = $h͏_a)]]]],["./tame-faux-data-properties.js", [["tameFauxDataProperties",[$h͏_a => (tameFauxDataProperties = $h͏_a)]]]],["./tame-regenerator-runtime.js", [["tameRegeneratorRuntime",[$h͏_a => (tameRegeneratorRuntime = $h͏_a)]]]],["./shim-arraybuffer-transfer.js", [["shimArrayBufferTransfer",[$h͏_a => (shimArrayBufferTransfer = $h͏_a)]]]],["./reporting.js", [["reportInGroup",[$h͏_a => (reportInGroup = $h͏_a)]],["chooseReporter",[$h͏_a => (chooseReporter = $h͏_a)]]]]]);
 
 
 
@@ -13350,7 +13572,7 @@ const probeHostEvaluators = () => {
 };$h͏_once.repairIntrinsics(repairIntrinsics);
 })()
 ,
-// === 57. ses ./src/lockdown-shim.js ===
+// === 58. ses ./src/lockdown-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let globalThis,repairIntrinsics;$h͏_imports([["./assert-sloppy-mode.js", []],["./commons.js", [["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./lockdown.js", [["repairIntrinsics",[$h͏_a => (repairIntrinsics = $h͏_a)]]]]]);
 
 
@@ -13390,7 +13612,7 @@ globalThis.repairIntrinsics = options => {
 };
 })()
 ,
-// === 58. ses ./src/compartment-shim.js ===
+// === 59. ses ./src/compartment-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let globalThis,makeCompartmentConstructor,tameFunctionToString,getGlobalIntrinsics,chooseReporter;$h͏_imports([["./commons.js", [["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./compartment.js", [["makeCompartmentConstructor",[$h͏_a => (makeCompartmentConstructor = $h͏_a)]]]],["./tame-function-tostring.js", [["tameFunctionToString",[$h͏_a => (tameFunctionToString = $h͏_a)]]]],["./intrinsics.js", [["getGlobalIntrinsics",[$h͏_a => (getGlobalIntrinsics = $h͏_a)]]]],["./reporting.js", [["chooseReporter",[$h͏_a => (chooseReporter = $h͏_a)]]]]]);
 
 
@@ -13415,14 +13637,14 @@ globalThis.Compartment = makeCompartmentConstructor(
 );
 })()
 ,
-// === 59. ses ./src/assert-shim.js ===
+// === 60. ses ./src/assert-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let globalThis,assert;$h͏_imports([["./commons.js", [["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
 globalThis.assert = assert;
 })()
 ,
-// === 60. ses ./src/console-shim.js ===
+// === 61. ses ./src/console-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let symbolFor,globalThis,defineCausalConsoleFromLogger,loggedErrorHandler;$h͏_imports([["./commons.js", [["symbolFor",[$h͏_a => (symbolFor = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./error/console.js", [["defineCausalConsoleFromLogger",[$h͏_a => (defineCausalConsoleFromLogger = $h͏_a)]]]],["./error/assert.js", [["loggedErrorHandler",[$h͏_a => (loggedErrorHandler = $h͏_a)]]]]]);
 
 
@@ -13475,7 +13697,7 @@ globalThis[MAKE_CAUSAL_CONSOLE_FROM_LOGGER_KEY_FOR_SES_AVA] =
   makeCausalConsoleFromLoggerForSesAva;
 })()
 ,
-// === 61. ses ./index.js ===
+// === 62. ses ./index.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([["./src/lockdown-shim.js", []],["./src/compartment-shim.js", []],["./src/assert-shim.js", []],["./src/console-shim.js", []]]);
 })()
 ,
diff --git a/node_modules/ses/dist/ses.cjs b/node_modules/ses/dist/ses.cjs
index f998baa..805b88d 100644
--- a/node_modules/ses/dist/ses.cjs
+++ b/node_modules/ses/dist/ses.cjs
@@ -207,9 +207,11 @@
     {
     },
     {
-      transferBufferToImmutable: cell("transferBufferToImmutable"),
       isBufferImmutable: cell("isBufferImmutable"),
       sliceBufferToImmutable: cell("sliceBufferToImmutable"),
+      transferBufferToImmutableMaybe: cell("transferBufferToImmutableMaybe"),
+    },
+    {
     },
     {
     },
@@ -662,16 +664,16 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      transferBufferToImmutable: cells[4].transferBufferToImmutable.set,
       isBufferImmutable: cells[4].isBufferImmutable.set,
       sliceBufferToImmutable: cells[4].sliceBufferToImmutable.set,
+      transferBufferToImmutableMaybe: cells[4].transferBufferToImmutableMaybe.set,
     },
     importMeta: {},
   });
   functors[5]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./index.js", 4);
+      observeImports(map, "./immutable-arraybuffer-pony.js", 4);
     },
     liveVar: {
     },
@@ -682,24 +684,25 @@ function observeImports(map, importName, importIndex) {
   functors[6]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../commons.js", 0);
+      observeImports(map, "./src/immutable-arraybuffer-shim.js", 5);
     },
     liveVar: {
     },
     onceVar: {
-      an: cells[6].an.set,
-      bestEffortStringify: cells[6].bestEffortStringify.set,
-      enJoin: cells[6].enJoin.set,
     },
     importMeta: {},
   });
   functors[7]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "../commons.js", 0);
     },
     liveVar: {
     },
     onceVar: {
+      an: cells[7].an.set,
+      bestEffortStringify: cells[7].bestEffortStringify.set,
+      enJoin: cells[7].enJoin.set,
     },
     importMeta: {},
   });
@@ -720,59 +723,55 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      makeLRUCacheMap: cells[9].makeLRUCacheMap.set,
     },
     importMeta: {},
   });
   functors[10]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../make-lru-cachemap.js", 9);
     },
     liveVar: {
     },
     onceVar: {
-      makeNoteLogArgsArrayKit: cells[10].makeNoteLogArgsArrayKit.set,
+      makeLRUCacheMap: cells[10].makeLRUCacheMap.set,
     },
     importMeta: {},
   });
   functors[11]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../commons.js", 0);
-      observeImports(map, "./stringify-utils.js", 6);
-      observeImports(map, "./types.js", 7);
-      observeImports(map, "./internal-types.js", 8);
-      observeImports(map, "./note-log-args.js", 10);
+      observeImports(map, "../make-lru-cachemap.js", 10);
     },
     liveVar: {
     },
     onceVar: {
-      quote: cells[11].q.set,
-      bare: cells[11].b.set,
-      redactedDetails: cells[11].X.set,
-      unredactedDetails: cells[11].unredactedDetails.set,
-      makeError: cells[11].makeError.set,
-      note: cells[11].annotateError.set,
-      loggedErrorHandler: cells[11].loggedErrorHandler.set,
-      makeAssert: cells[11].makeAssert.set,
-      assert: cells[11].assert.set,
-      assertEqual: cells[11].assertEqual.set,
-      sanitizeError: cells[11].sanitizeError.set,
+      makeNoteLogArgsArrayKit: cells[11].makeNoteLogArgsArrayKit.set,
     },
     importMeta: {},
   });
   functors[12]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "../commons.js", 0);
+      observeImports(map, "./stringify-utils.js", 7);
+      observeImports(map, "./types.js", 8);
+      observeImports(map, "./internal-types.js", 9);
+      observeImports(map, "./note-log-args.js", 11);
     },
     liveVar: {
     },
     onceVar: {
-      isTypedArray: cells[12].isTypedArray.set,
-      makeHardener: cells[12].makeHardener.set,
+      quote: cells[12].q.set,
+      bare: cells[12].b.set,
+      redactedDetails: cells[12].X.set,
+      unredactedDetails: cells[12].unredactedDetails.set,
+      makeError: cells[12].makeError.set,
+      note: cells[12].annotateError.set,
+      loggedErrorHandler: cells[12].loggedErrorHandler.set,
+      makeAssert: cells[12].makeAssert.set,
+      assert: cells[12].assert.set,
+      assertEqual: cells[12].assertEqual.set,
+      sanitizeError: cells[12].sanitizeError.set,
     },
     importMeta: {},
   });
@@ -780,11 +779,13 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      cauterizeProperty: cells[13].cauterizeProperty.set,
+      isTypedArray: cells[13].isTypedArray.set,
+      makeHardener: cells[13].makeHardener.set,
     },
     importMeta: {},
   });
@@ -796,52 +797,52 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      NativeErrors: cells[14].NativeErrors.set,
-      constantProperties: cells[14].constantProperties.set,
-      universalPropertyNames: cells[14].universalPropertyNames.set,
-      initialGlobalPropertyNames: cells[14].initialGlobalPropertyNames.set,
-      sharedGlobalPropertyNames: cells[14].sharedGlobalPropertyNames.set,
-      uniqueGlobalPropertyNames: cells[14].uniqueGlobalPropertyNames.set,
-      FunctionInstance: cells[14].FunctionInstance.set,
-      AsyncFunctionInstance: cells[14].AsyncFunctionInstance.set,
-      isAccessorPermit: cells[14].isAccessorPermit.set,
-      permitted: cells[14].permitted.set,
+      cauterizeProperty: cells[14].cauterizeProperty.set,
     },
     importMeta: {},
   });
   functors[15]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./cauterize-property.js", 13);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./permits.js", 14);
     },
     liveVar: {
     },
     onceVar: {
-      makeIntrinsicsCollector: cells[15].makeIntrinsicsCollector.set,
-      getGlobalIntrinsics: cells[15].getGlobalIntrinsics.set,
+      NativeErrors: cells[15].NativeErrors.set,
+      constantProperties: cells[15].constantProperties.set,
+      universalPropertyNames: cells[15].universalPropertyNames.set,
+      initialGlobalPropertyNames: cells[15].initialGlobalPropertyNames.set,
+      sharedGlobalPropertyNames: cells[15].sharedGlobalPropertyNames.set,
+      uniqueGlobalPropertyNames: cells[15].uniqueGlobalPropertyNames.set,
+      FunctionInstance: cells[15].FunctionInstance.set,
+      AsyncFunctionInstance: cells[15].AsyncFunctionInstance.set,
+      isAccessorPermit: cells[15].isAccessorPermit.set,
+      permitted: cells[15].permitted.set,
     },
     importMeta: {},
   });
   functors[16]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./permits.js", 14);
+      observeImports(map, "./cauterize-property.js", 14);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./cauterize-property.js", 13);
+      observeImports(map, "./permits.js", 15);
     },
     liveVar: {
     },
     onceVar: {
-      default: cells[16].default.set,
+      makeIntrinsicsCollector: cells[16].makeIntrinsicsCollector.set,
+      getGlobalIntrinsics: cells[16].getGlobalIntrinsics.set,
     },
     importMeta: {},
   });
   functors[17]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./permits.js", 15);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./cauterize-property.js", 14);
     },
     liveVar: {
     },
@@ -894,9 +895,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      minEnablements: cells[21].minEnablements.set,
-      moderateEnablements: cells[21].moderateEnablements.set,
-      severeEnablements: cells[21].severeEnablements.set,
+      default: cells[21].default.set,
     },
     importMeta: {},
   });
@@ -904,12 +903,13 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./enablements.js", 21);
     },
     liveVar: {
     },
     onceVar: {
-      default: cells[22].default.set,
+      minEnablements: cells[22].minEnablements.set,
+      moderateEnablements: cells[22].moderateEnablements.set,
+      severeEnablements: cells[22].severeEnablements.set,
     },
     importMeta: {},
   });
@@ -917,7 +917,7 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./enablements.js", 22);
     },
     liveVar: {
     },
@@ -929,24 +929,24 @@ function observeImports(map, importName, importIndex) {
   functors[24]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      makeEvalFunction: cells[24].makeEvalFunction.set,
+      default: cells[24].default.set,
     },
     importMeta: {},
   });
   functors[25]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
     },
     liveVar: {
     },
     onceVar: {
-      makeFunctionConstructor: cells[25].makeFunctionConstructor.set,
+      makeEvalFunction: cells[25].makeEvalFunction.set,
     },
     importMeta: {},
   });
@@ -954,17 +954,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./make-eval-function.js", 24);
-      observeImports(map, "./make-function-constructor.js", 25);
-      observeImports(map, "./permits.js", 14);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      setGlobalObjectSymbolUnscopables: cells[26].setGlobalObjectSymbolUnscopables.set,
-      setGlobalObjectConstantProperties: cells[26].setGlobalObjectConstantProperties.set,
-      setGlobalObjectMutableProperties: cells[26].setGlobalObjectMutableProperties.set,
-      setGlobalObjectEvaluators: cells[26].setGlobalObjectEvaluators.set,
+      makeFunctionConstructor: cells[26].makeFunctionConstructor.set,
     },
     importMeta: {},
   });
@@ -972,14 +967,17 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./make-eval-function.js", 25);
+      observeImports(map, "./make-function-constructor.js", 26);
+      observeImports(map, "./permits.js", 15);
     },
     liveVar: {
     },
     onceVar: {
-      alwaysThrowHandler: cells[27].alwaysThrowHandler.set,
-      strictScopeTerminatorHandler: cells[27].strictScopeTerminatorHandler.set,
-      strictScopeTerminator: cells[27].strictScopeTerminator.set,
+      setGlobalObjectSymbolUnscopables: cells[27].setGlobalObjectSymbolUnscopables.set,
+      setGlobalObjectConstantProperties: cells[27].setGlobalObjectConstantProperties.set,
+      setGlobalObjectMutableProperties: cells[27].setGlobalObjectMutableProperties.set,
+      setGlobalObjectEvaluators: cells[27].setGlobalObjectEvaluators.set,
     },
     importMeta: {},
   });
@@ -987,12 +985,14 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./strict-scope-terminator.js", 27);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      createSloppyGlobalsScopeTerminator: cells[28].createSloppyGlobalsScopeTerminator.set,
+      alwaysThrowHandler: cells[28].alwaysThrowHandler.set,
+      strictScopeTerminatorHandler: cells[28].strictScopeTerminatorHandler.set,
+      strictScopeTerminator: cells[28].strictScopeTerminator.set,
     },
     importMeta: {},
   });
@@ -1000,12 +1000,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./strict-scope-terminator.js", 28);
     },
     liveVar: {
     },
     onceVar: {
-      makeEvalScopeKit: cells[29].makeEvalScopeKit.set,
+      createSloppyGlobalsScopeTerminator: cells[29].createSloppyGlobalsScopeTerminator.set,
     },
     importMeta: {},
   });
@@ -1013,11 +1013,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      getSourceURL: cells[30].getSourceURL.set,
+      makeEvalScopeKit: cells[30].makeEvalScopeKit.set,
     },
     importMeta: {},
   });
@@ -1025,19 +1026,11 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./get-source-url.js", 30);
     },
     liveVar: {
     },
     onceVar: {
-      rejectHtmlComments: cells[31].rejectHtmlComments.set,
-      evadeHtmlCommentTest: cells[31].evadeHtmlCommentTest.set,
-      rejectImportExpressions: cells[31].rejectImportExpressions.set,
-      evadeImportExpressionTest: cells[31].evadeImportExpressionTest.set,
-      rejectSomeDirectEvalExpressions: cells[31].rejectSomeDirectEvalExpressions.set,
-      mandatoryTransforms: cells[31].mandatoryTransforms.set,
-      applyTransforms: cells[31].applyTransforms.set,
-      transforms: cells[31].transforms.set,
+      getSourceURL: cells[31].getSourceURL.set,
     },
     importMeta: {},
   });
@@ -1045,12 +1038,19 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./get-source-url.js", 31);
     },
     liveVar: {
     },
     onceVar: {
-      isValidIdentifierName: cells[32].isValidIdentifierName.set,
-      getScopeConstants: cells[32].getScopeConstants.set,
+      rejectHtmlComments: cells[32].rejectHtmlComments.set,
+      evadeHtmlCommentTest: cells[32].evadeHtmlCommentTest.set,
+      rejectImportExpressions: cells[32].rejectImportExpressions.set,
+      evadeImportExpressionTest: cells[32].evadeImportExpressionTest.set,
+      rejectSomeDirectEvalExpressions: cells[32].rejectSomeDirectEvalExpressions.set,
+      mandatoryTransforms: cells[32].mandatoryTransforms.set,
+      applyTransforms: cells[32].applyTransforms.set,
+      transforms: cells[32].transforms.set,
     },
     importMeta: {},
   });
@@ -1058,12 +1058,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./scope-constants.js", 32);
     },
     liveVar: {
     },
     onceVar: {
-      makeEvaluate: cells[33].makeEvaluate.set,
+      isValidIdentifierName: cells[33].isValidIdentifierName.set,
+      getScopeConstants: cells[33].getScopeConstants.set,
     },
     importMeta: {},
   });
@@ -1071,17 +1071,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./strict-scope-terminator.js", 27);
-      observeImports(map, "./sloppy-globals-scope-terminator.js", 28);
-      observeImports(map, "./eval-scope.js", 29);
-      observeImports(map, "./transforms.js", 31);
-      observeImports(map, "./make-evaluate.js", 33);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./scope-constants.js", 33);
     },
     liveVar: {
     },
     onceVar: {
-      makeSafeEvaluator: cells[34].makeSafeEvaluator.set,
+      makeEvaluate: cells[34].makeEvaluate.set,
     },
     importMeta: {},
   });
@@ -1089,11 +1084,17 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./strict-scope-terminator.js", 28);
+      observeImports(map, "./sloppy-globals-scope-terminator.js", 29);
+      observeImports(map, "./eval-scope.js", 30);
+      observeImports(map, "./transforms.js", 32);
+      observeImports(map, "./make-evaluate.js", 34);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      tameFunctionToString: cells[35].tameFunctionToString.set,
+      makeSafeEvaluator: cells[35].makeSafeEvaluator.set,
     },
     importMeta: {},
   });
@@ -1105,7 +1106,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameDomains: cells[36].tameDomains.set,
+      tameFunctionToString: cells[36].tameFunctionToString.set,
     },
     importMeta: {},
   });
@@ -1117,25 +1118,19 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameModuleSource: cells[37].tameModuleSource.set,
+      tameDomains: cells[37].tameDomains.set,
     },
     importMeta: {},
   });
   functors[38]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "../commons.js", 0);
+      observeImports(map, "./commons.js", 0);
     },
     liveVar: {
     },
     onceVar: {
-      consoleLevelMethods: cells[38].consoleLevelMethods.set,
-      consoleOtherMethods: cells[38].consoleOtherMethods.set,
-      makeLoggingConsoleKit: cells[38].makeLoggingConsoleKit.set,
-      pumpLogToConsole: cells[38].pumpLogToConsole.set,
-      makeCausalConsole: cells[38].makeCausalConsole.set,
-      defineCausalConsoleFromLogger: cells[38].defineCausalConsoleFromLogger.set,
-      filterConsole: cells[38].filterConsole.set,
+      tameModuleSource: cells[38].tameModuleSource.set,
     },
     importMeta: {},
   });
@@ -1147,7 +1142,13 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      makeRejectionHandlers: cells[39].makeRejectionHandlers.set,
+      consoleLevelMethods: cells[39].consoleLevelMethods.set,
+      consoleOtherMethods: cells[39].consoleOtherMethods.set,
+      makeLoggingConsoleKit: cells[39].makeLoggingConsoleKit.set,
+      pumpLogToConsole: cells[39].pumpLogToConsole.set,
+      makeCausalConsole: cells[39].makeCausalConsole.set,
+      defineCausalConsoleFromLogger: cells[39].defineCausalConsoleFromLogger.set,
+      filterConsole: cells[39].filterConsole.set,
     },
     importMeta: {},
   });
@@ -1155,14 +1156,11 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "../commons.js", 0);
-      observeImports(map, "./assert.js", 11);
-      observeImports(map, "./console.js", 38);
-      observeImports(map, "./unhandled-rejection.js", 39);
     },
     liveVar: {
     },
     onceVar: {
-      tameConsole: cells[40].tameConsole.set,
+      makeRejectionHandlers: cells[40].makeRejectionHandlers.set,
     },
     importMeta: {},
   });
@@ -1170,13 +1168,14 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "../commons.js", 0);
+      observeImports(map, "./assert.js", 12);
+      observeImports(map, "./console.js", 39);
+      observeImports(map, "./unhandled-rejection.js", 40);
     },
     liveVar: {
     },
     onceVar: {
-      filterFileName: cells[41].filterFileName.set,
-      shortenCallSiteString: cells[41].shortenCallSiteString.set,
-      tameV8ErrorConstructor: cells[41].tameV8ErrorConstructor.set,
+      tameConsole: cells[41].tameConsole.set,
     },
     importMeta: {},
   });
@@ -1184,113 +1183,104 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "../commons.js", 0);
-      observeImports(map, "../permits.js", 14);
-      observeImports(map, "./tame-v8-error-constructor.js", 41);
     },
     liveVar: {
     },
     onceVar: {
-      default: cells[42].default.set,
+      filterFileName: cells[42].filterFileName.set,
+      shortenCallSiteString: cells[42].shortenCallSiteString.set,
+      tameV8ErrorConstructor: cells[42].tameV8ErrorConstructor.set,
     },
     importMeta: {},
   });
   functors[43]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "@endo/env-options", 3);
-      observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "../commons.js", 0);
+      observeImports(map, "../permits.js", 15);
+      observeImports(map, "./tame-v8-error-constructor.js", 42);
     },
     liveVar: {
     },
     onceVar: {
-      makeAlias: cells[43].makeAlias.set,
-      load: cells[43].load.set,
-      loadNow: cells[43].loadNow.set,
+      default: cells[43].default.set,
     },
     importMeta: {},
   });
   functors[44]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./module-load.js", 43);
+      observeImports(map, "@endo/env-options", 3);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      deferExports: cells[44].deferExports.set,
-      getDeferredExports: cells[44].getDeferredExports.set,
+      makeAlias: cells[44].makeAlias.set,
+      load: cells[44].load.set,
+      loadNow: cells[44].loadNow.set,
     },
     importMeta: {},
   });
   functors[45]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./module-load.js", 44);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./transforms.js", 31);
-      observeImports(map, "./make-safe-evaluator.js", 34);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      provideCompartmentEvaluator: cells[45].provideCompartmentEvaluator.set,
-      compartmentEvaluate: cells[45].compartmentEvaluate.set,
+      deferExports: cells[45].deferExports.set,
+      getDeferredExports: cells[45].getDeferredExports.set,
     },
     importMeta: {},
   });
   functors[46]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./module-proxy.js", 44);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./compartment-evaluate.js", 45);
+      observeImports(map, "./transforms.js", 32);
+      observeImports(map, "./make-safe-evaluator.js", 35);
     },
     liveVar: {
     },
     onceVar: {
-      makeVirtualModuleInstance: cells[46].makeVirtualModuleInstance.set,
-      makeModuleInstance: cells[46].makeModuleInstance.set,
+      provideCompartmentEvaluator: cells[46].provideCompartmentEvaluator.set,
+      compartmentEvaluate: cells[46].compartmentEvaluate.set,
     },
     importMeta: {},
   });
   functors[47]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./module-instance.js", 46);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./module-proxy.js", 45);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./compartment-evaluate.js", 46);
     },
     liveVar: {
     },
     onceVar: {
-      link: cells[47].link.set,
-      instantiate: cells[47].instantiate.set,
+      makeVirtualModuleInstance: cells[47].makeVirtualModuleInstance.set,
+      makeModuleInstance: cells[47].makeModuleInstance.set,
     },
     importMeta: {},
   });
   functors[48]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./module-instance.js", 47);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./global-object.js", 26);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./permits.js", 14);
-      observeImports(map, "./module-load.js", 43);
-      observeImports(map, "./module-link.js", 47);
-      observeImports(map, "./module-proxy.js", 44);
-      observeImports(map, "./compartment-evaluate.js", 45);
-      observeImports(map, "./make-safe-evaluator.js", 34);
     },
     liveVar: {
     },
     onceVar: {
-      InertCompartment: cells[48].InertCompartment.set,
-      CompartmentPrototype: cells[48].CompartmentPrototype.set,
-      compartmentOptions: cells[48].compartmentOptions.set,
-      makeCompartmentConstructor: cells[48].makeCompartmentConstructor.set,
+      link: cells[48].link.set,
+      instantiate: cells[48].instantiate.set,
     },
     importMeta: {},
   });
@@ -1298,12 +1288,22 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./compartment.js", 48);
+      observeImports(map, "./global-object.js", 27);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./permits.js", 15);
+      observeImports(map, "./module-load.js", 44);
+      observeImports(map, "./module-link.js", 48);
+      observeImports(map, "./module-proxy.js", 45);
+      observeImports(map, "./compartment-evaluate.js", 46);
+      observeImports(map, "./make-safe-evaluator.js", 35);
     },
     liveVar: {
     },
     onceVar: {
-      getAnonymousIntrinsics: cells[49].getAnonymousIntrinsics.set,
+      InertCompartment: cells[49].InertCompartment.set,
+      CompartmentPrototype: cells[49].CompartmentPrototype.set,
+      compartmentOptions: cells[49].compartmentOptions.set,
+      makeCompartmentConstructor: cells[49].makeCompartmentConstructor.set,
     },
     importMeta: {},
   });
@@ -1311,11 +1311,12 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
+      observeImports(map, "./compartment.js", 49);
     },
     liveVar: {
     },
     onceVar: {
-      tameHarden: cells[50].tameHarden.set,
+      getAnonymousIntrinsics: cells[50].getAnonymousIntrinsics.set,
     },
     importMeta: {},
   });
@@ -1327,7 +1328,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameSymbolConstructor: cells[51].tameSymbolConstructor.set,
+      tameHarden: cells[51].tameHarden.set,
     },
     importMeta: {},
   });
@@ -1339,8 +1340,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameFauxDataProperty: cells[52].tameFauxDataProperty.set,
-      tameFauxDataProperties: cells[52].tameFauxDataProperties.set,
+      tameSymbolConstructor: cells[52].tameSymbolConstructor.set,
     },
     importMeta: {},
   });
@@ -1352,7 +1352,8 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      tameRegeneratorRuntime: cells[53].tameRegeneratorRuntime.set,
+      tameFauxDataProperty: cells[53].tameFauxDataProperty.set,
+      tameFauxDataProperties: cells[53].tameFauxDataProperties.set,
     },
     importMeta: {},
   });
@@ -1364,7 +1365,7 @@ function observeImports(map, importName, importIndex) {
     liveVar: {
     },
     onceVar: {
-      shimArrayBufferTransfer: cells[54].shimArrayBufferTransfer.set,
+      tameRegeneratorRuntime: cells[54].tameRegeneratorRuntime.set,
     },
     importMeta: {},
   });
@@ -1372,77 +1373,74 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
     },
     liveVar: {
     },
     onceVar: {
-      chooseReporter: cells[55].chooseReporter.set,
-      reportInGroup: cells[55].reportInGroup.set,
+      shimArrayBufferTransfer: cells[55].shimArrayBufferTransfer.set,
     },
     importMeta: {},
   });
   functors[56]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "@endo/env-options", 3);
-      observeImports(map, "@endo/immutable-arraybuffer/shim.js", 5);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./make-hardener.js", 12);
-      observeImports(map, "./intrinsics.js", 15);
-      observeImports(map, "./permits-intrinsics.js", 16);
-      observeImports(map, "./tame-function-constructors.js", 17);
-      observeImports(map, "./tame-date-constructor.js", 18);
-      observeImports(map, "./tame-math-object.js", 19);
-      observeImports(map, "./tame-regexp-constructor.js", 20);
-      observeImports(map, "./enable-property-overrides.js", 22);
-      observeImports(map, "./tame-locale-methods.js", 23);
-      observeImports(map, "./global-object.js", 26);
-      observeImports(map, "./make-safe-evaluator.js", 34);
-      observeImports(map, "./permits.js", 14);
-      observeImports(map, "./tame-function-tostring.js", 35);
-      observeImports(map, "./tame-domains.js", 36);
-      observeImports(map, "./tame-module-source.js", 37);
-      observeImports(map, "./error/tame-console.js", 40);
-      observeImports(map, "./error/tame-error-constructor.js", 42);
-      observeImports(map, "./error/assert.js", 11);
-      observeImports(map, "./get-anonymous-intrinsics.js", 49);
-      observeImports(map, "./compartment.js", 48);
-      observeImports(map, "./tame-harden.js", 50);
-      observeImports(map, "./tame-symbol-constructor.js", 51);
-      observeImports(map, "./tame-faux-data-properties.js", 52);
-      observeImports(map, "./tame-regenerator-runtime.js", 53);
-      observeImports(map, "./shim-arraybuffer-transfer.js", 54);
-      observeImports(map, "./reporting.js", 55);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
     onceVar: {
-      repairIntrinsics: cells[56].repairIntrinsics.set,
+      chooseReporter: cells[56].chooseReporter.set,
+      reportInGroup: cells[56].reportInGroup.set,
     },
     importMeta: {},
   });
   functors[57]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./assert-sloppy-mode.js", 1);
+      observeImports(map, "@endo/env-options", 3);
+      observeImports(map, "@endo/immutable-arraybuffer/shim.js", 6);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./lockdown.js", 56);
+      observeImports(map, "./make-hardener.js", 13);
+      observeImports(map, "./intrinsics.js", 16);
+      observeImports(map, "./permits-intrinsics.js", 17);
+      observeImports(map, "./tame-function-constructors.js", 18);
+      observeImports(map, "./tame-date-constructor.js", 19);
+      observeImports(map, "./tame-math-object.js", 20);
+      observeImports(map, "./tame-regexp-constructor.js", 21);
+      observeImports(map, "./enable-property-overrides.js", 23);
+      observeImports(map, "./tame-locale-methods.js", 24);
+      observeImports(map, "./global-object.js", 27);
+      observeImports(map, "./make-safe-evaluator.js", 35);
+      observeImports(map, "./permits.js", 15);
+      observeImports(map, "./tame-function-tostring.js", 36);
+      observeImports(map, "./tame-domains.js", 37);
+      observeImports(map, "./tame-module-source.js", 38);
+      observeImports(map, "./error/tame-console.js", 41);
+      observeImports(map, "./error/tame-error-constructor.js", 43);
+      observeImports(map, "./error/assert.js", 12);
+      observeImports(map, "./get-anonymous-intrinsics.js", 50);
+      observeImports(map, "./compartment.js", 49);
+      observeImports(map, "./tame-harden.js", 51);
+      observeImports(map, "./tame-symbol-constructor.js", 52);
+      observeImports(map, "./tame-faux-data-properties.js", 53);
+      observeImports(map, "./tame-regenerator-runtime.js", 54);
+      observeImports(map, "./shim-arraybuffer-transfer.js", 55);
+      observeImports(map, "./reporting.js", 56);
     },
     liveVar: {
     },
     onceVar: {
+      repairIntrinsics: cells[57].repairIntrinsics.set,
     },
     importMeta: {},
   });
   functors[58]({
     imports(entries) {
       const map = new Map(entries);
+      observeImports(map, "./assert-sloppy-mode.js", 1);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./compartment.js", 48);
-      observeImports(map, "./tame-function-tostring.js", 35);
-      observeImports(map, "./intrinsics.js", 15);
-      observeImports(map, "./reporting.js", 55);
+      observeImports(map, "./lockdown.js", 57);
     },
     liveVar: {
     },
@@ -1454,7 +1452,10 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./compartment.js", 49);
+      observeImports(map, "./tame-function-tostring.js", 36);
+      observeImports(map, "./intrinsics.js", 16);
+      observeImports(map, "./reporting.js", 56);
     },
     liveVar: {
     },
@@ -1466,8 +1467,7 @@ function observeImports(map, importName, importIndex) {
     imports(entries) {
       const map = new Map(entries);
       observeImports(map, "./commons.js", 0);
-      observeImports(map, "./error/console.js", 38);
-      observeImports(map, "./error/assert.js", 11);
+      observeImports(map, "./error/assert.js", 12);
     },
     liveVar: {
     },
@@ -1478,10 +1478,23 @@ function observeImports(map, importName, importIndex) {
   functors[61]({
     imports(entries) {
       const map = new Map(entries);
-      observeImports(map, "./src/lockdown-shim.js", 57);
-      observeImports(map, "./src/compartment-shim.js", 58);
-      observeImports(map, "./src/assert-shim.js", 59);
-      observeImports(map, "./src/console-shim.js", 60);
+      observeImports(map, "./commons.js", 0);
+      observeImports(map, "./error/console.js", 39);
+      observeImports(map, "./error/assert.js", 12);
+    },
+    liveVar: {
+    },
+    onceVar: {
+    },
+    importMeta: {},
+  });
+  functors[62]({
+    imports(entries) {
+      const map = new Map(entries);
+      observeImports(map, "./src/lockdown-shim.js", 58);
+      observeImports(map, "./src/compartment-shim.js", 59);
+      observeImports(map, "./src/assert-shim.js", 60);
+      observeImports(map, "./src/console-shim.js", 61);
     },
     liveVar: {
     },
@@ -2085,11 +2098,11 @@ freeze(makeEnvironmentCaptor);
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([["./src/env-options.js", []]]);
 })()
 ,
-// === 4. immutable-arraybuffer ./index.js ===
+// === 4. immutable-arraybuffer ./src/immutable-arraybuffer-pony.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);/* global globalThis */
 
-const { setPrototypeOf, getOwnPropertyDescriptors } = Object;
-const { apply } = Reflect;
+const { defineProperty } = Object;
+const { apply, ownKeys } = Reflect;
 const { prototype: arrayBufferPrototype } = ArrayBuffer;
 
 const {
@@ -2099,237 +2112,227 @@ const {
   // @ts-ignore At the time of this writing, the `ArrayBuffer` type built
   // into TypeScript does not know about the recent standard `transfer` method.
   // Indeed, the `transfer` method is absent from Node <= 20.
-  transfer,
+  transfer: transferMaybe,
 } = arrayBufferPrototype;
+// Capture structuredClone before it could be scuttled.
+const { structuredClone: structuredCloneMaybe } = globalThis;
 
 /**
- * Enforces that `arrayBuffer` is a genuine `ArrayBuffer` exotic object.
+ * Enforces that `realBuffer` is a genuine `ArrayBuffer` exotic object.
  *
- * @param {ArrayBuffer} arrayBuffer
+ * @param {ArrayBuffer} realBuffer
  * @param {number} [start]
  * @param {number} [end]
  * @returns {ArrayBuffer}
  */
-const arrayBufferSlice = (arrayBuffer, start = undefined, end = undefined) =>
-  apply(slice, arrayBuffer, [start, end]);
+const arrayBufferSlice = (realBuffer, start = undefined, end = undefined) =>
+  apply(slice, realBuffer, [start, end]);
 
 /**
  * Enforces that `arrayBuffer` is a genuine `ArrayBuffer` exotic object.
  * Return a new fresh `ArrayBuffer` exotic object, where the contents of the
  * original `arrayBuffer` has been moved into the new one, and the original
- * `arrayBuffer` has been detached.
+ * `arrayBuffer` has been detached. We can only do this emulation on platforms
+ * that support `structureClose` or `ArrayBuffer.prototype.transfer`.
+ * On other platforms, we can still emulate `sliceToImmutable` but not
+ * `arrayBufferTransferMaybe`, and therefore not
+ * `ArrayBuffer.prototype.transferToImmutable`. Currently, these other platforms
+ * are
+ * - Hermes
+ * - Node <= 16
+ * - Apparently some versions of JSC that are still of concern.
  *
  * @param {ArrayBuffer} arrayBuffer
  * @returns {ArrayBuffer}
  */
-let arrayBufferTransfer;
+let arrayBufferTransferMaybe;
 
-if (transfer) {
-  arrayBufferTransfer = arrayBuffer => apply(transfer, arrayBuffer, []);
-} else if (globalThis.structuredClone) {
-  arrayBufferTransfer = arrayBuffer => {
+if (transferMaybe) {
+  arrayBufferTransferMaybe = arrayBuffer =>
+    apply(transferMaybe, arrayBuffer, []);
+} else if (structuredCloneMaybe) {
+  arrayBufferTransferMaybe = arrayBuffer => {
     // Hopefully, a zero-length slice is cheap, but still enforces that
     // `arrayBuffer` is a genuine `ArrayBuffer` exotic object.
     arrayBufferSlice(arrayBuffer, 0, 0);
-    return globalThis.structuredClone(arrayBuffer, { transfer: [arrayBuffer] });
+    return structuredCloneMaybe(arrayBuffer, {
+      transfer: [arrayBuffer],
+    });
   };
 } else {
-  // Indeed, Node <= 16 has neither.
-  throw TypeError(
-    `Can only emulate immutable ArrayBuffer on a platform with either "structuredClone" or "ArrayBuffer.prototype.transfer"`,
-  );
+  // Assignment is redundant, but remains for clarity.
+  arrayBufferTransferMaybe = undefined;
 }
 
 /**
- * This class only exists as an artifact of this ponyfill and shim,
- * as a convenience for imperfectly emulating the
- * *Immutable ArrayBuffer* proposal, which would not have this class.
- * In the proposal,
- * `transferToImmutable` makes a new `ArrayBuffer` that inherits directly from
- * `ArrayBuffer.prototype` as you'd expect. In the ponyfill and shim,
- * `transferToImmutable` makes a normal object that inherits directly from
- * `immutableArrayBufferPrototype`, which has been surgically
- * altered to inherit directly from `ArrayBuffer.prototype`. The constructor is
- * captured for use internal to this module, and is made otherwise inaccessible.
- * Therefore, `immutableArrayBufferPrototype` and all its methods
- * and accessor functions effectively become hidden intrinsics.
- * They are not encapsulated. Rather, they are trivially discoverable if you
- * know how, but are not discoverable merely by enumerating naming paths.
+ * If we could use classes with private fields everywhere, this would have
+ * been a `this.#buffer` private field on an `ImmutableArrayBufferInternal`
+ * class. But we cannot do so on Hermes. So, instead, we
+ * emulate the `this.#buffer` private field, including its use as a brand check.
+ * Maps from all and only emulated Immutable ArrayBuffers to real ArrayBuffers.
  */
-class ImmutableArrayBufferInternal {
-  /** @type {ArrayBuffer} */
-  #buffer;
-
-  constructor(buffer) {
-    // This constructor is deleted from the prototype below.
-    this.#buffer = arrayBufferTransfer(buffer);
+const buffers = new WeakMap();
+const getBuffer = immuAB => {
+  const result = buffers.get(immuAB);
+  if (result) {
+    return result;
   }
+  throw TypeError('Not an emulated Immutable ArrayBuffer');
+};
 
+// Omits `constructor` so `Array.prototype.constructor` is inherited.
+const ImmutableArrayBufferInternalPrototype = {
+  __proto__: arrayBufferPrototype,
   get byteLength() {
-    return this.#buffer.byteLength;
-  }
-
+    return getBuffer(this).byteLength;
+  },
   get detached() {
-    this.#buffer; // shim brand check
+    getBuffer(this); // shim brand check
     return false;
-  }
-
+  },
   get maxByteLength() {
     // Not underlying maxByteLength, which is irrelevant
-    return this.#buffer.byteLength;
-  }
-
+    return getBuffer(this).byteLength;
+  },
   get resizable() {
-    this.#buffer; // shim brand check
+    getBuffer(this); // shim brand check
     return false;
-  }
-
+  },
   get immutable() {
-    this.#buffer; // shim brand check
+    getBuffer(this); // shim brand check
     return true;
-  }
-
+  },
   slice(start = undefined, end = undefined) {
-    return arrayBufferSlice(this.#buffer, start, end);
-  }
-
+    return arrayBufferSlice(getBuffer(this), start, end);
+  },
   sliceToImmutable(start = undefined, end = undefined) {
     // eslint-disable-next-line no-use-before-define
-    return sliceBufferToImmutable(this.#buffer, start, end);
-  }
-
+    return sliceBufferToImmutable(getBuffer(this), start, end);
+  },
   resize(_newByteLength = undefined) {
-    this.#buffer; // shim brand check
+    getBuffer(this); // shim brand check
     throw TypeError('Cannot resize an immutable ArrayBuffer');
-  }
-
+  },
   transfer(_newLength = undefined) {
-    this.#buffer; // shim brand check
+    getBuffer(this); // shim brand check
     throw TypeError('Cannot detach an immutable ArrayBuffer');
-  }
-
+  },
   transferToFixedLength(_newLength = undefined) {
-    this.#buffer; // shim brand check
+    getBuffer(this); // shim brand check
     throw TypeError('Cannot detach an immutable ArrayBuffer');
-  }
-
+  },
   transferToImmutable(_newLength = undefined) {
-    this.#buffer; // shim brand check
+    getBuffer(this); // shim brand check
     throw TypeError('Cannot detach an immutable ArrayBuffer');
-  }
-}
-
-const immutableArrayBufferPrototype = ImmutableArrayBufferInternal.prototype;
-// @ts-expect-error can only delete optionals
-delete immutableArrayBufferPrototype.constructor;
-
-const {
-  slice: { value: sliceOfImmutable },
-  immutable: { get: isImmutableGetter },
-} = getOwnPropertyDescriptors(immutableArrayBufferPrototype);
+  },
+  /**
+   * See https://github.com/endojs/endo/tree/master/packages/immutable-arraybuffer#purposeful-violation
+   */
+  [Symbol.toStringTag]: 'ImmutableArrayBuffer',
+};
 
-setPrototypeOf(immutableArrayBufferPrototype, arrayBufferPrototype);
+// Better fidelity emulation of a class prototype
+for (const key of ownKeys(ImmutableArrayBufferInternalPrototype)) {
+  defineProperty(ImmutableArrayBufferInternalPrototype, key, {
+    enumerable: false,
+  });
+}
 
 /**
- * Transfer the contents to a new Immutable ArrayBuffer
+ * Emulates what would have been the encapsulated `ImmutableArrayBufferInternal`
+ * class constructor. This function takes the `realBuffer` which its
+ * result encapsulates. Security demands that this result has exclusive access
+ * to the `realBuffer` it is given, which its callers must ensure.
  *
- * @param {ArrayBuffer} buffer The original buffer.
- * @param {number} [newLength] The start index.
+ * @param {ArrayBuffer} realBuffer
  * @returns {ArrayBuffer}
  */
-       const transferBufferToImmutable = (buffer, newLength = undefined) => {
-  if (newLength !== undefined) {
-    if (transfer) {
-      buffer = apply(transfer, buffer, [newLength]);
-    } else {
-      buffer = arrayBufferTransfer(buffer);
-      const oldLength = buffer.byteLength;
-      // eslint-disable-next-line @endo/restrict-comparison-operands
-      if (newLength <= oldLength) {
-        buffer = arrayBufferSlice(buffer, 0, newLength);
-      } else {
-        const oldTA = new Uint8Array(buffer);
-        const newTA = new Uint8Array(newLength);
-        newTA.set(oldTA);
-        buffer = newTA.buffer;
-      }
-    }
-  }
-  const result = new ImmutableArrayBufferInternal(buffer);
+const makeImmutableArrayBufferInternal = realBuffer => {
+  const result = { __proto__: ImmutableArrayBufferInternalPrototype };
+  buffers.set(result, realBuffer);
   return /** @type {ArrayBuffer} */ (/** @type {unknown} */ (result));
-};$h͏_once.transferBufferToImmutable(transferBufferToImmutable);
-
-       const isBufferImmutable = buffer => {
-  try {
-    // @ts-expect-error Getter should be typed as this-sensitive
-    return apply(isImmutableGetter, buffer, []);
-  } catch (err) {
-    if (err instanceof TypeError) {
-      // Enforce that `buffer` is a genuine ArrayBuffer before returning.
-      arrayBufferSlice(buffer, 0, 0);
-      return false;
-    }
-    throw err;
-  }
 };
+// Since `makeImmutableArrayBufferInternal` MUST not escape,
+// this `freeze` is just belt-and-suspenders.
+Object.freeze(makeImmutableArrayBufferInternal);
 
-/**
- * Enforces that `arrayBuffer` is a genuine `ArrayBuffer` exotic object.
- *
- * @param {ArrayBuffer} buffer
- * @param {number} [start]
- * @param {number} [end]
- * @returns {ArrayBuffer}
- */$h͏_once.isBufferImmutable(isBufferImmutable);
-const sliceBuffer = (buffer, start = undefined, end = undefined) => {
-  try {
-    // @ts-expect-error We know it is really there
-    return apply(sliceOfImmutable, buffer, [start, end]);
-  } catch (err) {
-    if (err instanceof TypeError) {
-      return arrayBufferSlice(buffer, start, end);
-    }
-    throw err;
-  }
-};
+       const isBufferImmutable = buffer => buffers.has(buffer);
 
 /**
  * Creates an immutable slice of the given buffer.
- *
  * @param {ArrayBuffer} buffer The original buffer.
  * @param {number} [start] The start index.
  * @param {number} [end] The end index.
  * @returns {ArrayBuffer} The sliced immutable ArrayBuffer.
- */
+ */$h͏_once.isBufferImmutable(isBufferImmutable);
        const sliceBufferToImmutable = (
   buffer,
   start = undefined,
   end = undefined,
-) => transferBufferToImmutable(sliceBuffer(buffer, start, end));$h͏_once.sliceBufferToImmutable(sliceBufferToImmutable);
+) => {
+  let realBuffer = buffers.get(buffer);
+  if (realBuffer === undefined) {
+    realBuffer = buffer;
+  }
+  return makeImmutableArrayBufferInternal(
+    arrayBufferSlice(realBuffer, start, end),
+  );
+};$h͏_once.sliceBufferToImmutable(sliceBufferToImmutable);
+
+let transferBufferToImmutable;
+if (arrayBufferTransferMaybe) {
+  /**
+   * Transfer the contents to a new Immutable ArrayBuffer
+   *
+   * @param {ArrayBuffer} buffer The original buffer.
+   * @param {number} [newLength] The start index.
+   * @returns {ArrayBuffer}
+   */
+  transferBufferToImmutable = (buffer, newLength = undefined) => {
+    if (newLength === undefined) {
+      buffer = arrayBufferTransferMaybe(buffer);
+    } else if (transferMaybe) {
+      buffer = apply(transferMaybe, buffer, [newLength]);
+    } else {
+      buffer = arrayBufferTransferMaybe(buffer);
+      const oldLength = buffer.byteLength;
+      // eslint-disable-next-line @endo/restrict-comparison-operands
+      if (newLength <= oldLength) {
+        buffer = arrayBufferSlice(buffer, 0, newLength);
+      } else {
+        const oldTA = new Uint8Array(buffer);
+        const newTA = new Uint8Array(newLength);
+        newTA.set(oldTA);
+        buffer = newTA.buffer;
+      }
+    }
+    const result = makeImmutableArrayBufferInternal(buffer);
+    return /** @type {ArrayBuffer} */ (/** @type {unknown} */ (result));
+  };
+} else {
+  transferBufferToImmutable = undefined;
+}
+
+       const transferBufferToImmutableMaybe = transferBufferToImmutable;$h͏_once.transferBufferToImmutableMaybe(transferBufferToImmutableMaybe);
 })()
 ,
-// === 5. immutable-arraybuffer ./shim.js ===
-({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let transferBufferToImmutable,isBufferImmutable,sliceBufferToImmutable;$h͏_imports([["./index.js", [["transferBufferToImmutable",[$h͏_a => (transferBufferToImmutable = $h͏_a)]],["isBufferImmutable",[$h͏_a => (isBufferImmutable = $h͏_a)]],["sliceBufferToImmutable",[$h͏_a => (sliceBufferToImmutable = $h͏_a)]]]]]);
+// === 5. immutable-arraybuffer ./src/immutable-arraybuffer-shim.js ===
+({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let isBufferImmutable,sliceBufferToImmutable,transferBufferToImmutableMaybe;$h͏_imports([["./immutable-arraybuffer-pony.js", [["isBufferImmutable",[$h͏_a => (isBufferImmutable = $h͏_a)]],["sliceBufferToImmutable",[$h͏_a => (sliceBufferToImmutable = $h͏_a)]],["transferBufferToImmutableMaybe",[$h͏_a => (transferBufferToImmutableMaybe = $h͏_a)]]]]]);
+
 
 
 
 
+// Even though the exported one is not a live binding, TS doesn't know that,
+// so it cannot do it's normal flow-based inference. By making a using a local
+// copy, no problem.
+const tbtiMaybe = transferBufferToImmutableMaybe;
 
-const { getOwnPropertyDescriptors, defineProperties } = Object;
+const { getOwnPropertyDescriptors, defineProperties, defineProperty } = Object;
+const { ownKeys } = Reflect;
 const { prototype: arrayBufferPrototype } = ArrayBuffer;
 
 const arrayBufferMethods = {
-  /**
-   * Transfer the contents to a new Immutable ArrayBuffer
-   *
-   * @this {ArrayBuffer} buffer The original buffer.
-   * @param {number} [newLength] The start index.
-   * @returns {ArrayBuffer} The sliced immutable ArrayBuffer.
-   */
-  transferToImmutable(newLength = undefined) {
-    return transferBufferToImmutable(this, newLength);
-  },
-
   /**
    * Creates an immutable slice of the given buffer.
    *
@@ -2347,6 +2350,13 @@ const arrayBufferMethods = {
   },
 };
 
+// Better fidelity emulation of a class prototype
+for (const key of ownKeys(arrayBufferMethods)) {
+  defineProperty(arrayBufferMethods, key, {
+    enumerable: false,
+  });
+}
+
 if ('sliceToImmutable' in arrayBufferPrototype) {
   // Modern shim practice frowns on conditional installation, at least for
   // proposals prior to stage 3. This is so changes to the proposal since
@@ -2367,9 +2377,56 @@ defineProperties(
   arrayBufferPrototype,
   getOwnPropertyDescriptors(arrayBufferMethods),
 );
+
+if (tbtiMaybe) {
+  const moreMethods = {
+    /**
+     * Transfer the contents to a new Immutable ArrayBuffer
+     *
+     * @this {ArrayBuffer} buffer The original buffer.
+     * @param {number} [newLength] The start index.
+     * @returns {ArrayBuffer} The sliced immutable ArrayBuffer.
+     */
+    transferToImmutable(newLength = undefined) {
+      return tbtiMaybe(this, newLength);
+    },
+  };
+
+  // Better fidelity emulation of a class prototype
+  for (const key of ownKeys(moreMethods)) {
+    defineProperty(moreMethods, key, {
+      enumerable: false,
+    });
+  }
+
+  if ('transferToImmutable' in arrayBufferPrototype) {
+    // Modern shim practice frowns on conditional installation, at least for
+    // proposals prior to stage 3. This is so changes to the proposal since
+    // an old shim was distributed don't need to worry about the proposal
+    // breaking old code depending on the old shim. Thus, if we detect that
+    // we're about to overwrite a prior installation, we simply issue this
+    // warning and continue.
+    //
+    // TODO, if the primordials are frozen after the prior implementation, such as
+    // by `lockdown`, then this precludes overwriting as expected. However, for
+    // this case, the following warning text will be confusing.
+    console.warn(
+      'About to overwrite a prior implementation of "transferToImmutable"',
+    );
+  }
+
+  defineProperties(
+    arrayBufferPrototype,
+    getOwnPropertyDescriptors(moreMethods),
+  );
+}
 })()
 ,
-// === 6. ses ./src/error/stringify-utils.js ===
+// === 6. immutable-arraybuffer ./shim.js ===
+({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([["./src/immutable-arraybuffer-shim.js", []]]);
+})()
+,
+// === 7. ses ./src/error/stringify-utils.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Set,String,isArray,arrayJoin,arraySlice,arraySort,arrayMap,keys,fromEntries,freeze,is,isError,setAdd,setHas,stringIncludes,stringStartsWith,stringifyJson,toStringTagSymbol;$h͏_imports([["../commons.js", [["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arraySlice",[$h͏_a => (arraySlice = $h͏_a)]],["arraySort",[$h͏_a => (arraySort = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["keys",[$h͏_a => (keys = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]],["setAdd",[$h͏_a => (setAdd = $h͏_a)]],["setHas",[$h͏_a => (setHas = $h͏_a)]],["stringIncludes",[$h͏_a => (stringIncludes = $h͏_a)]],["stringStartsWith",[$h͏_a => (stringStartsWith = $h͏_a)]],["stringifyJson",[$h͏_a => (stringifyJson = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]]]]]);
 
 
@@ -2566,7 +2623,7 @@ const bestEffortStringify = (payload, spaces = undefined) => {
 freeze(bestEffortStringify);
 })()
 ,
-// === 7. ses ./src/error/types.js ===
+// === 8. ses ./src/error/types.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);// @ts-check
 
 /** @import {GenericErrorConstructor, AssertMakeErrorOptions, DetailsToken, StringablePayload} from '../../types.js' */
@@ -2628,7 +2685,7 @@ freeze(bestEffortStringify);
  */
 })()
 ,
-// === 8. ses ./src/error/internal-types.js ===
+// === 9. ses ./src/error/internal-types.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);// @ts-check
 
 /**
@@ -2729,7 +2786,7 @@ freeze(bestEffortStringify);
  */
 })()
 ,
-// === 9. ses ./src/make-lru-cachemap.js ===
+// === 10. ses ./src/make-lru-cachemap.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);// @ts-check
 /* eslint-disable @endo/no-polymorphic-call */
 
@@ -2953,7 +3010,7 @@ const spliceOut = cell => {
 freeze(makeLRUCacheMap);
 })()
 ,
-// === 10. ses ./src/error/note-log-args.js ===
+// === 11. ses ./src/error/note-log-args.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let makeLRUCacheMap;$h͏_imports([["../make-lru-cachemap.js", [["makeLRUCacheMap",[$h͏_a => (makeLRUCacheMap = $h͏_a)]]]]]);
 
 
@@ -3032,7 +3089,7 @@ const defaultArgsPerErrorBudget = 100;
 freeze(makeNoteLogArgsArrayKit);
 })()
 ,
-// === 11. ses ./src/error/assert.js ===
+// === 12. ses ./src/error/assert.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let RangeError,TypeError,WeakMap,arrayJoin,arrayMap,arrayPop,arrayPush,assign,freeze,defineProperty,globalThis,is,isError,regexpTest,stringIndexOf,stringReplace,stringSlice,stringStartsWith,weakmapDelete,weakmapGet,weakmapHas,weakmapSet,AggregateError,getOwnPropertyDescriptors,ownKeys,create,objectPrototype,objectHasOwnProperty,an,bestEffortStringify,makeNoteLogArgsArrayKit;$h͏_imports([["../commons.js", [["RangeError",[$h͏_a => (RangeError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arrayPop",[$h͏_a => (arrayPop = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]],["regexpTest",[$h͏_a => (regexpTest = $h͏_a)]],["stringIndexOf",[$h͏_a => (stringIndexOf = $h͏_a)]],["stringReplace",[$h͏_a => (stringReplace = $h͏_a)]],["stringSlice",[$h͏_a => (stringSlice = $h͏_a)]],["stringStartsWith",[$h͏_a => (stringStartsWith = $h͏_a)]],["weakmapDelete",[$h͏_a => (weakmapDelete = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapHas",[$h͏_a => (weakmapHas = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]],["AggregateError",[$h͏_a => (AggregateError = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["objectPrototype",[$h͏_a => (objectPrototype = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]]]],["./stringify-utils.js", [["an",[$h͏_a => (an = $h͏_a)]],["bestEffortStringify",[$h͏_a => (bestEffortStringify = $h͏_a)]]]],["./types.js", []],["./internal-types.js", []],["./note-log-args.js", [["makeNoteLogArgsArrayKit",[$h͏_a => (makeNoteLogArgsArrayKit = $h͏_a)]]]]]);
 
 
@@ -3610,7 +3667,7 @@ const assert = makeAssert();$h͏_once.assert(assert);
 const assertEqual = assert.equal;$h͏_once.assertEqual(assertEqual);
 })()
 ,
-// === 12. ses ./src/make-hardener.js ===
+// === 13. ses ./src/make-hardener.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Set,String,TypeError,WeakSet,globalThis,apply,arrayForEach,defineProperty,freeze,getOwnPropertyDescriptor,getOwnPropertyDescriptors,getPrototypeOf,isInteger,isObject,objectHasOwnProperty,ownKeys,preventExtensions,setAdd,setForEach,setHas,toStringTagSymbol,typedArrayPrototype,weaksetAdd,weaksetHas,FERAL_STACK_GETTER,FERAL_STACK_SETTER,isError,assert;$h͏_imports([["./commons.js", [["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["isInteger",[$h͏_a => (isInteger = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["preventExtensions",[$h͏_a => (preventExtensions = $h͏_a)]],["setAdd",[$h͏_a => (setAdd = $h͏_a)]],["setForEach",[$h͏_a => (setForEach = $h͏_a)]],["setHas",[$h͏_a => (setHas = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["typedArrayPrototype",[$h͏_a => (typedArrayPrototype = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]],["FERAL_STACK_GETTER",[$h͏_a => (FERAL_STACK_GETTER = $h͏_a)]],["FERAL_STACK_SETTER",[$h͏_a => (FERAL_STACK_SETTER = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -3888,7 +3945,7 @@ const freezeTypedArray = array => {
 };$h͏_once.makeHardener(makeHardener);
 })()
 ,
-// === 13. ses ./src/cauterize-property.js ===
+// === 14. ses ./src/cauterize-property.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let objectHasOwnProperty;$h͏_imports([["./commons.js", [["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]]]]]);
 
 /**
@@ -3960,7 +4017,7 @@ const freezeTypedArray = array => {
 };$h͏_once.cauterizeProperty(cauterizeProperty);
 })()
 ,
-// === 14. ses ./src/permits.js ===
+// === 15. ses ./src/permits.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let arrayPush,arrayForEach;$h͏_imports([["./commons.js", [["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]]]]]);
 
 
@@ -5335,6 +5392,8 @@ const CommonMath = {
     '[[Proto]]': '%ArrayBufferPrototype%',
     byteLength: getter,
     slice: fn,
+    // See https://github.com/endojs/endo/tree/master/packages/immutable-arraybuffer#purposeful-violation
+    '@@toStringTag': 'string',
     // See https://github.com/tc39/proposal-resizablearraybuffer
     transfer: fn,
     resize: fn,
@@ -5722,7 +5781,7 @@ const CommonMath = {
 };$h͏_once.permitted(permitted);
 })()
 ,
-// === 15. ses ./src/intrinsics.js ===
+// === 16. ses ./src/intrinsics.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let cauterizeProperty,TypeError,WeakSet,arrayFilter,create,defineProperty,entries,freeze,getOwnPropertyDescriptor,getOwnPropertyDescriptors,globalThis,is,isObject,objectHasOwnProperty,values,weaksetHas,constantProperties,sharedGlobalPropertyNames,universalPropertyNames,permitted;$h͏_imports([["./cauterize-property.js", [["cauterizeProperty",[$h͏_a => (cauterizeProperty = $h͏_a)]]]],["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["values",[$h͏_a => (values = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]]]],["./permits.js", [["constantProperties",[$h͏_a => (constantProperties = $h͏_a)]],["sharedGlobalPropertyNames",[$h͏_a => (sharedGlobalPropertyNames = $h͏_a)]],["universalPropertyNames",[$h͏_a => (universalPropertyNames = $h͏_a)]],["permitted",[$h͏_a => (permitted = $h͏_a)]]]]]);
 
 
@@ -5917,7 +5976,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 };$h͏_once.getGlobalIntrinsics(getGlobalIntrinsics);
 })()
 ,
-// === 16. ses ./src/permits-intrinsics.js ===
+// === 17. ses ./src/permits-intrinsics.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let permitted,FunctionInstance,isAccessorPermit,Map,String,Symbol,TypeError,arrayFilter,arrayIncludes,arrayMap,entries,getOwnPropertyDescriptor,getPrototypeOf,isObject,mapGet,objectHasOwnProperty,ownKeys,symbolKeyFor,cauterizeProperty;$h͏_imports([["./permits.js", [["permitted",[$h͏_a => (permitted = $h͏_a)]],["FunctionInstance",[$h͏_a => (FunctionInstance = $h͏_a)]],["isAccessorPermit",[$h͏_a => (isAccessorPermit = $h͏_a)]]]],["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["Symbol",[$h͏_a => (Symbol = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayIncludes",[$h͏_a => (arrayIncludes = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["symbolKeyFor",[$h͏_a => (symbolKeyFor = $h͏_a)]]]],["./cauterize-property.js", [["cauterizeProperty",[$h͏_a => (cauterizeProperty = $h͏_a)]]]]]);
 
 
@@ -6211,7 +6270,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      removeUnpermittedIntrinsics);
 })()
 ,
-// === 17. ses ./src/tame-function-constructors.js ===
+// === 18. ses ./src/tame-function-constructors.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,SyntaxError,TypeError,defineProperties,getPrototypeOf,setPrototypeOf,freeze,AsyncGeneratorFunctionInstance;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["SyntaxError",[$h͏_a => (SyntaxError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["setPrototypeOf",[$h͏_a => (setPrototypeOf = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["AsyncGeneratorFunctionInstance",[$h͏_a => (AsyncGeneratorFunctionInstance = $h͏_a)]]]]]);
 
 
@@ -6354,7 +6413,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameFunctionConstructors);
 })()
 ,
-// === 18. ses ./src/tame-date-constructor.js ===
+// === 19. ses ./src/tame-date-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Date,TypeError,apply,construct,defineProperties;$h͏_imports([["./commons.js", [["Date",[$h͏_a => (Date = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["construct",[$h͏_a => (construct = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]]]]]);
 
 
@@ -6484,7 +6543,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameDateConstructor);
 })()
 ,
-// === 19. ses ./src/tame-math-object.js ===
+// === 20. ses ./src/tame-math-object.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Math,TypeError,create,getOwnPropertyDescriptors,objectPrototype;$h͏_imports([["./commons.js", [["Math",[$h͏_a => (Math = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["objectPrototype",[$h͏_a => (objectPrototype = $h͏_a)]]]]]);
 
 
@@ -6528,7 +6587,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameMathObject);
 })()
 ,
-// === 20. ses ./src/tame-regexp-constructor.js ===
+// === 21. ses ./src/tame-regexp-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_REG_EXP,TypeError,construct,defineProperties,getOwnPropertyDescriptor,speciesSymbol;$h͏_imports([["./commons.js", [["FERAL_REG_EXP",[$h͏_a => (FERAL_REG_EXP = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["construct",[$h͏_a => (construct = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["speciesSymbol",[$h͏_a => (speciesSymbol = $h͏_a)]]]]]);
 
 
@@ -6596,7 +6655,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      tameRegExpConstructor);
 })()
 ,
-// === 21. ses ./src/enablements.js ===
+// === 22. ses ./src/enablements.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let toStringTagSymbol,iteratorSymbol;$h͏_imports([["./commons.js", [["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["iteratorSymbol",[$h͏_a => (iteratorSymbol = $h͏_a)]]]]]);
 
 /**
@@ -6843,7 +6902,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 };$h͏_once.severeEnablements(severeEnablements);
 })()
 ,
-// === 22. ses ./src/enable-property-overrides.js ===
+// === 23. ses ./src/enable-property-overrides.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Set,String,TypeError,arrayForEach,defineProperty,getOwnPropertyDescriptor,getOwnPropertyDescriptors,isObject,objectHasOwnProperty,ownKeys,setHas,minEnablements,moderateEnablements,severeEnablements;$h͏_imports([["./commons.js", [["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["setHas",[$h͏_a => (setHas = $h͏_a)]]]],["./enablements.js", [["minEnablements",[$h͏_a => (minEnablements = $h͏_a)]],["moderateEnablements",[$h͏_a => (moderateEnablements = $h͏_a)]],["severeEnablements",[$h͏_a => (severeEnablements = $h͏_a)]]]]]);
 
 
@@ -7057,7 +7116,7 @@ function sampleGlobals(globalObject, newPropertyNames) {
 }$h͏_once.default(      enablePropertyOverrides);
 })()
 ,
-// === 23. ses ./src/tame-locale-methods.js ===
+// === 24. ses ./src/tame-locale-methods.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Number,String,TypeError,defineProperty,getOwnPropertyNames,isObject,regexpExec,assert;$h͏_imports([["./commons.js", [["Number",[$h͏_a => (Number = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["regexpExec",[$h͏_a => (regexpExec = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7138,7 +7197,7 @@ const numberToString = tamedMethods.toString;
 }$h͏_once.default(      tameLocaleMethods);
 })()
 ,
-// === 24. ses ./src/make-eval-function.js ===
+// === 25. ses ./src/make-eval-function.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([]);/**
  * makeEvalFunction()
  * A safe version of the native eval function which relies on
@@ -7169,7 +7228,7 @@ const numberToString = tamedMethods.toString;
 };$h͏_once.makeEvalFunction(makeEvalFunction);
 })()
 ,
-// === 25. ses ./src/make-function-constructor.js ===
+// === 26. ses ./src/make-function-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,arrayJoin,arrayPop,defineProperties,getPrototypeOf,assert;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayPop",[$h͏_a => (arrayPop = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7251,7 +7310,7 @@ const { Fail } = assert;
 };$h͏_once.makeFunctionConstructor(makeFunctionConstructor);
 })()
 ,
-// === 26. ses ./src/global-object.js ===
+// === 27. ses ./src/global-object.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,assign,create,defineProperty,entries,freeze,objectHasOwnProperty,unscopablesSymbol,makeEvalFunction,makeFunctionConstructor,constantProperties,universalPropertyNames;$h͏_imports([["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["unscopablesSymbol",[$h͏_a => (unscopablesSymbol = $h͏_a)]]]],["./make-eval-function.js", [["makeEvalFunction",[$h͏_a => (makeEvalFunction = $h͏_a)]]]],["./make-function-constructor.js", [["makeFunctionConstructor",[$h͏_a => (makeFunctionConstructor = $h͏_a)]]]],["./permits.js", [["constantProperties",[$h͏_a => (constantProperties = $h͏_a)]],["universalPropertyNames",[$h͏_a => (universalPropertyNames = $h͏_a)]]]]]);
 
 
@@ -7429,7 +7488,7 @@ const { Fail } = assert;
 };$h͏_once.setGlobalObjectEvaluators(setGlobalObjectEvaluators);
 })()
 ,
-// === 27. ses ./src/strict-scope-terminator.js ===
+// === 28. ses ./src/strict-scope-terminator.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Proxy,String,TypeError,ReferenceError,create,freeze,getOwnPropertyDescriptors,assert;$h͏_imports([["./commons.js", [["Proxy",[$h͏_a => (Proxy = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["ReferenceError",[$h͏_a => (ReferenceError = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7531,7 +7590,7 @@ const scopeProxyHandlerProperties = {
 );$h͏_once.strictScopeTerminator(strictScopeTerminator);
 })()
 ,
-// === 28. ses ./src/sloppy-globals-scope-terminator.js ===
+// === 29. ses ./src/sloppy-globals-scope-terminator.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Proxy,create,freeze,getOwnPropertyDescriptors,reflectSet,strictScopeTerminatorHandler,alwaysThrowHandler;$h͏_imports([["./commons.js", [["Proxy",[$h͏_a => (Proxy = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["reflectSet",[$h͏_a => (reflectSet = $h͏_a)]]]],["./strict-scope-terminator.js", [["strictScopeTerminatorHandler",[$h͏_a => (strictScopeTerminatorHandler = $h͏_a)]],["alwaysThrowHandler",[$h͏_a => (alwaysThrowHandler = $h͏_a)]]]]]);
 
 
@@ -7595,7 +7654,7 @@ const objTarget = freeze({ __proto__: null });
 freeze(createSloppyGlobalsScopeTerminator);
 })()
 ,
-// === 29. ses ./src/eval-scope.js ===
+// === 30. ses ./src/eval-scope.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_EVAL,create,defineProperties,freeze,assert;$h͏_imports([["./commons.js", [["FERAL_EVAL",[$h͏_a => (FERAL_EVAL = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -7687,7 +7746,7 @@ const { Fail } = assert;
 };$h͏_once.makeEvalScopeKit(makeEvalScopeKit);
 })()
 ,
-// === 30. ses ./src/get-source-url.js ===
+// === 31. ses ./src/get-source-url.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_REG_EXP,regexpExec,stringSlice;$h͏_imports([["./commons.js", [["FERAL_REG_EXP",[$h͏_a => (FERAL_REG_EXP = $h͏_a)]],["regexpExec",[$h͏_a => (regexpExec = $h͏_a)]],["stringSlice",[$h͏_a => (stringSlice = $h͏_a)]]]]]);
 
 // Captures a key and value of the form #key=value or @key=value
@@ -7740,7 +7799,7 @@ const sourceMetaEntriesRegExp = new FERAL_REG_EXP(
 };$h͏_once.getSourceURL(getSourceURL);
 })()
 ,
-// === 31. ses ./src/transforms.js ===
+// === 32. ses ./src/transforms.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_REG_EXP,SyntaxError,stringReplace,stringSearch,stringSlice,stringSplit,freeze,getSourceURL;$h͏_imports([["./commons.js", [["FERAL_REG_EXP",[$h͏_a => (FERAL_REG_EXP = $h͏_a)]],["SyntaxError",[$h͏_a => (SyntaxError = $h͏_a)]],["stringReplace",[$h͏_a => (stringReplace = $h͏_a)]],["stringSearch",[$h͏_a => (stringSearch = $h͏_a)]],["stringSlice",[$h͏_a => (stringSlice = $h͏_a)]],["stringSplit",[$h͏_a => (stringSplit = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]]]],["./get-source-url.js", [["getSourceURL",[$h͏_a => (getSourceURL = $h͏_a)]]]]]);
 
 
@@ -8010,7 +8069,7 @@ $h͏_once.applyTransforms(applyTransforms);const transforms=freeze({
 });$h͏_once.transforms(transforms);
 })()
 ,
-// === 32. ses ./src/scope-constants.js ===
+// === 33. ses ./src/scope-constants.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let arrayFilter,arrayIncludes,getOwnPropertyDescriptor,getOwnPropertyNames,objectHasOwnProperty,regexpTest;$h͏_imports([["./commons.js", [["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayIncludes",[$h͏_a => (arrayIncludes = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]],["regexpTest",[$h͏_a => (regexpTest = $h͏_a)]]]]]);
 
 
@@ -8193,7 +8252,7 @@ function isImmutableDataProperty(obj, name) {
 };$h͏_once.getScopeConstants(getScopeConstants);
 })()
 ,
-// === 33. ses ./src/make-evaluate.js ===
+// === 34. ses ./src/make-evaluate.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,arrayJoin,apply,getScopeConstants;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]]]],["./scope-constants.js", [["getScopeConstants",[$h͏_a => (getScopeConstants = $h͏_a)]]]]]);
 
 
@@ -8306,7 +8365,7 @@ function buildOptimizer(constants, name) {
 };$h͏_once.makeEvaluate(makeEvaluate);
 })()
 ,
-// === 34. ses ./src/make-safe-evaluator.js ===
+// === 35. ses ./src/make-safe-evaluator.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let apply,arrayFlatMap,freeze,identity,strictScopeTerminator,createSloppyGlobalsScopeTerminator,makeEvalScopeKit,applyTransforms,mandatoryTransforms,makeEvaluate,assert;$h͏_imports([["./commons.js", [["apply",[$h͏_a => (apply = $h͏_a)]],["arrayFlatMap",[$h͏_a => (arrayFlatMap = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["identity",[$h͏_a => (identity = $h͏_a)]]]],["./strict-scope-terminator.js", [["strictScopeTerminator",[$h͏_a => (strictScopeTerminator = $h͏_a)]]]],["./sloppy-globals-scope-terminator.js", [["createSloppyGlobalsScopeTerminator",[$h͏_a => (createSloppyGlobalsScopeTerminator = $h͏_a)]]]],["./eval-scope.js", [["makeEvalScopeKit",[$h͏_a => (makeEvalScopeKit = $h͏_a)]]]],["./transforms.js", [["applyTransforms",[$h͏_a => (applyTransforms = $h͏_a)]],["mandatoryTransforms",[$h͏_a => (mandatoryTransforms = $h͏_a)]]]],["./make-evaluate.js", [["makeEvaluate",[$h͏_a => (makeEvaluate = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -8421,7 +8480,7 @@ const { Fail } = assert;
 };$h͏_once.makeSafeEvaluator(makeSafeEvaluator);
 })()
 ,
-// === 35. ses ./src/tame-function-tostring.js ===
+// === 36. ses ./src/tame-function-tostring.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let WeakSet,defineProperty,freeze,functionPrototype,functionToString,stringEndsWith,weaksetAdd,weaksetHas;$h͏_imports([["./commons.js", [["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["functionPrototype",[$h͏_a => (functionPrototype = $h͏_a)]],["functionToString",[$h͏_a => (functionToString = $h͏_a)]],["stringEndsWith",[$h͏_a => (stringEndsWith = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]]]]]);
 
 
@@ -8474,7 +8533,7 @@ let markVirtualizedNativeFunction;
 };$h͏_once.tameFunctionToString(tameFunctionToString);
 })()
 ,
-// === 36. ses ./src/tame-domains.js ===
+// === 37. ses ./src/tame-domains.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,globalThis,getOwnPropertyDescriptor,defineProperty;$h͏_imports([["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]]]]]);Object.defineProperty(tameDomains,'name',{value:"tameDomains"});$h͏_once.tameDomains(tameDomains);
 
 
@@ -8518,7 +8577,7 @@ let markVirtualizedNativeFunction;
 }
 })()
 ,
-// === 37. ses ./src/tame-module-source.js ===
+// === 38. ses ./src/tame-module-source.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let functionPrototype,getPrototypeOf,globalThis,objectPrototype,setPrototypeOf;$h͏_imports([["./commons.js", [["functionPrototype",[$h͏_a => (functionPrototype = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["objectPrototype",[$h͏_a => (objectPrototype = $h͏_a)]],["setPrototypeOf",[$h͏_a => (setPrototypeOf = $h͏_a)]]]]]);
 
 
@@ -8572,7 +8631,7 @@ let markVirtualizedNativeFunction;
 };$h͏_once.tameModuleSource(tameModuleSource);
 })()
 ,
-// === 38. ses ./src/error/console.js ===
+// === 39. ses ./src/error/console.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let WeakSet,arrayFilter,arrayFlatMap,arrayMap,arrayPop,arrayPush,defineProperty,freeze,fromEntries,isError,stringEndsWith,stringIncludes,stringSplit,weaksetAdd,weaksetHas;$h͏_imports([["../commons.js", [["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayFlatMap",[$h͏_a => (arrayFlatMap = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arrayPop",[$h͏_a => (arrayPop = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["isError",[$h͏_a => (isError = $h͏_a)]],["stringEndsWith",[$h͏_a => (stringEndsWith = $h͏_a)]],["stringIncludes",[$h͏_a => (stringIncludes = $h͏_a)]],["stringSplit",[$h͏_a => (stringSplit = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]]]]]);
 
 
@@ -9116,7 +9175,7 @@ freeze(defineCausalConsoleFromLogger);
 freeze(filterConsole);
 })()
 ,
-// === 39. ses ./src/error/unhandled-rejection.js ===
+// === 40. ses ./src/error/unhandled-rejection.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FinalizationRegistry,Map,mapGet,mapDelete,WeakMap,mapSet,finalizationRegistryRegister,weakmapSet,weakmapGet,mapEntries,mapHas;$h͏_imports([["../commons.js", [["FinalizationRegistry",[$h͏_a => (FinalizationRegistry = $h͏_a)]],["Map",[$h͏_a => (Map = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapDelete",[$h͏_a => (mapDelete = $h͏_a)]],["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["finalizationRegistryRegister",[$h͏_a => (finalizationRegistryRegister = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["mapEntries",[$h͏_a => (mapEntries = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]]]]]);
 
 
@@ -9241,7 +9300,7 @@ freeze(filterConsole);
 };$h͏_once.makeRejectionHandlers(makeRejectionHandlers);
 })()
 ,
-// === 40. ses ./src/error/tame-console.js ===
+// === 41. ses ./src/error/tame-console.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,apply,defineProperty,freeze,globalThis,defaultHandler,makeCausalConsole,makeRejectionHandlers;$h͏_imports([["../commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./assert.js", [["loggedErrorHandler",[$h͏_a => (defaultHandler = $h͏_a)]]]],["./console.js", [["makeCausalConsole",[$h͏_a => (makeCausalConsole = $h͏_a)]]]],["./unhandled-rejection.js", [["makeRejectionHandlers",[$h͏_a => (makeRejectionHandlers = $h͏_a)]]]]]);
 
 
@@ -9441,7 +9500,7 @@ const wrapLogger = (logger, thisArg) =>
 };$h͏_once.tameConsole(tameConsole);
 })()
 ,
-// === 41. ses ./src/error/tame-v8-error-constructor.js ===
+// === 42. ses ./src/error/tame-v8-error-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let WeakMap,WeakSet,apply,arrayFilter,arrayJoin,arrayMap,arraySlice,create,defineProperties,fromEntries,reflectSet,regexpExec,regexpTest,weakmapGet,weakmapSet,weaksetAdd,weaksetHas,TypeError;$h͏_imports([["../commons.js", [["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["WeakSet",[$h͏_a => (WeakSet = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arraySlice",[$h͏_a => (arraySlice = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["reflectSet",[$h͏_a => (reflectSet = $h͏_a)]],["regexpExec",[$h͏_a => (regexpExec = $h͏_a)]],["regexpTest",[$h͏_a => (regexpTest = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]],["weaksetAdd",[$h͏_a => (weaksetAdd = $h͏_a)]],["weaksetHas",[$h͏_a => (weaksetHas = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]]]]]);
 
 
@@ -9830,7 +9889,7 @@ const CALLSITE_PATTERNS = [
 };$h͏_once.tameV8ErrorConstructor(tameV8ErrorConstructor);
 })()
 ,
-// === 42. ses ./src/error/tame-error-constructor.js ===
+// === 43. ses ./src/error/tame-error-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_ERROR,apply,construct,defineProperties,setPrototypeOf,getOwnPropertyDescriptor,defineProperty,getOwnPropertyDescriptors,NativeErrors,tameV8ErrorConstructor;$h͏_imports([["../commons.js", [["FERAL_ERROR",[$h͏_a => (FERAL_ERROR = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["construct",[$h͏_a => (construct = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["setPrototypeOf",[$h͏_a => (setPrototypeOf = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]]]],["../permits.js", [["NativeErrors",[$h͏_a => (NativeErrors = $h͏_a)]]]],["./tame-v8-error-constructor.js", [["tameV8ErrorConstructor",[$h͏_a => (tameV8ErrorConstructor = $h͏_a)]]]]]);
 
 
@@ -10117,7 +10176,7 @@ let initialGetStackString = tamedMethods.getStackString;
 }$h͏_once.default(      tameErrorConstructor);
 })()
 ,
-// === 43. ses ./src/module-load.js ===
+// === 44. ses ./src/module-load.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let getenv,Map,Set,TypeError,arrayJoin,arrayMap,arrayPush,arraySome,create,freeze,generatorNext,generatorThrow,getOwnPropertyNames,isArray,isObject,mapGet,mapHas,mapSet,promiseThen,setAdd,values,weakmapGet,weakmapHas,makeError,annotateError,q,b,X;$h͏_imports([["@endo/env-options", [["getEnvironmentOption",[$h͏_a => (getenv = $h͏_a)]]]],["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["Set",[$h͏_a => (Set = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayJoin",[$h͏_a => (arrayJoin = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["arraySome",[$h͏_a => (arraySome = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["generatorNext",[$h͏_a => (generatorNext = $h͏_a)]],["generatorThrow",[$h͏_a => (generatorThrow = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["promiseThen",[$h͏_a => (promiseThen = $h͏_a)]],["setAdd",[$h͏_a => (setAdd = $h͏_a)]],["values",[$h͏_a => (values = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapHas",[$h͏_a => (weakmapHas = $h͏_a)]]]],["./error/assert.js", [["makeError",[$h͏_a => (makeError = $h͏_a)]],["annotateError",[$h͏_a => (annotateError = $h͏_a)]],["q",[$h͏_a => (q = $h͏_a)]],["b",[$h͏_a => (b = $h͏_a)]],["X",[$h͏_a => (X = $h͏_a)]]]]]);
 
 
@@ -10804,7 +10863,7 @@ const preferAsync = (asyncImpl, _syncImpl) => asyncImpl;
 };$h͏_once.loadNow(loadNow);
 })()
 ,
-// === 44. ses ./src/module-proxy.js ===
+// === 45. ses ./src/module-proxy.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let makeAlias,Proxy,TypeError,create,freeze,mapGet,mapHas,mapSet,ownKeys,reflectGet,reflectGetOwnPropertyDescriptor,reflectHas,reflectIsExtensible,reflectPreventExtensions,toStringTagSymbol,weakmapSet,assert;$h͏_imports([["./module-load.js", [["makeAlias",[$h͏_a => (makeAlias = $h͏_a)]]]],["./commons.js", [["Proxy",[$h͏_a => (Proxy = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["reflectGet",[$h͏_a => (reflectGet = $h͏_a)]],["reflectGetOwnPropertyDescriptor",[$h͏_a => (reflectGetOwnPropertyDescriptor = $h͏_a)]],["reflectHas",[$h͏_a => (reflectHas = $h͏_a)]],["reflectIsExtensible",[$h͏_a => (reflectIsExtensible = $h͏_a)]],["reflectPreventExtensions",[$h͏_a => (reflectPreventExtensions = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -11007,7 +11066,7 @@ const { quote: q } = assert;
 };$h͏_once.getDeferredExports(getDeferredExports);
 })()
 ,
-// === 45. ses ./src/compartment-evaluate.js ===
+// === 46. ses ./src/compartment-evaluate.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let TypeError,arrayPush,create,getOwnPropertyDescriptors,evadeHtmlCommentTest,evadeImportExpressionTest,rejectSomeDirectEvalExpressions,makeSafeEvaluator;$h͏_imports([["./commons.js", [["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]]]],["./transforms.js", [["evadeHtmlCommentTest",[$h͏_a => (evadeHtmlCommentTest = $h͏_a)]],["evadeImportExpressionTest",[$h͏_a => (evadeImportExpressionTest = $h͏_a)]],["rejectSomeDirectEvalExpressions",[$h͏_a => (rejectSomeDirectEvalExpressions = $h͏_a)]]]],["./make-safe-evaluator.js", [["makeSafeEvaluator",[$h͏_a => (makeSafeEvaluator = $h͏_a)]]]]]);
 
 
@@ -11103,7 +11162,7 @@ const { quote: q } = assert;
 };$h͏_once.compartmentEvaluate(compartmentEvaluate);
 })()
 ,
-// === 46. ses ./src/module-instance.js ===
+// === 47. ses ./src/module-instance.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let assert,getDeferredExports,ReferenceError,SyntaxError,TypeError,arrayForEach,arrayIncludes,arrayPush,arraySome,arraySort,create,defineProperty,entries,freeze,isArray,keys,mapGet,weakmapGet,reflectHas,assign,compartmentEvaluate;$h͏_imports([["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]],["./module-proxy.js", [["getDeferredExports",[$h͏_a => (getDeferredExports = $h͏_a)]]]],["./commons.js", [["ReferenceError",[$h͏_a => (ReferenceError = $h͏_a)]],["SyntaxError",[$h͏_a => (SyntaxError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayForEach",[$h͏_a => (arrayForEach = $h͏_a)]],["arrayIncludes",[$h͏_a => (arrayIncludes = $h͏_a)]],["arrayPush",[$h͏_a => (arrayPush = $h͏_a)]],["arraySome",[$h͏_a => (arraySome = $h͏_a)]],["arraySort",[$h͏_a => (arraySort = $h͏_a)]],["create",[$h͏_a => (create = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["freeze",[$h͏_a => (freeze = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["keys",[$h͏_a => (keys = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["reflectHas",[$h͏_a => (reflectHas = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]]]],["./compartment-evaluate.js", [["compartmentEvaluate",[$h͏_a => (compartmentEvaluate = $h͏_a)]]]]]);
 
 
@@ -11603,7 +11662,7 @@ $h͏_once.makeVirtualModuleInstance(makeVirtualModuleInstance);const makeModuleI
 };$h͏_once.makeModuleInstance(makeModuleInstance);
 })()
 ,
-// === 47. ses ./src/module-link.js ===
+// === 48. ses ./src/module-link.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let assert,makeModuleInstance,makeVirtualModuleInstance,Map,ReferenceError,TypeError,entries,isArray,isObject,mapGet,mapHas,mapSet,weakmapGet;$h͏_imports([["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]],["./module-instance.js", [["makeModuleInstance",[$h͏_a => (makeModuleInstance = $h͏_a)]],["makeVirtualModuleInstance",[$h͏_a => (makeVirtualModuleInstance = $h͏_a)]]]],["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["ReferenceError",[$h͏_a => (ReferenceError = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["isArray",[$h͏_a => (isArray = $h͏_a)]],["isObject",[$h͏_a => (isObject = $h͏_a)]],["mapGet",[$h͏_a => (mapGet = $h͏_a)]],["mapHas",[$h͏_a => (mapHas = $h͏_a)]],["mapSet",[$h͏_a => (mapSet = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]]]]]);
 
 
@@ -11765,7 +11824,7 @@ function validateModuleSource(moduleSource, moduleSpecifier) {
 };$h͏_once.instantiate(instantiate);
 })()
 ,
-// === 48. ses ./src/compartment.js ===
+// === 49. ses ./src/compartment.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Map,TypeError,WeakMap,arrayFlatMap,assign,defineProperties,identity,promiseThen,toStringTagSymbol,weakmapGet,weakmapSet,setGlobalObjectSymbolUnscopables,setGlobalObjectConstantProperties,setGlobalObjectMutableProperties,setGlobalObjectEvaluators,assert,assertEqual,q,sharedGlobalPropertyNames,load,loadNow,link,getDeferredExports,compartmentEvaluate,makeSafeEvaluator;$h͏_imports([["./commons.js", [["Map",[$h͏_a => (Map = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["WeakMap",[$h͏_a => (WeakMap = $h͏_a)]],["arrayFlatMap",[$h͏_a => (arrayFlatMap = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["identity",[$h͏_a => (identity = $h͏_a)]],["promiseThen",[$h͏_a => (promiseThen = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]],["weakmapGet",[$h͏_a => (weakmapGet = $h͏_a)]],["weakmapSet",[$h͏_a => (weakmapSet = $h͏_a)]]]],["./global-object.js", [["setGlobalObjectSymbolUnscopables",[$h͏_a => (setGlobalObjectSymbolUnscopables = $h͏_a)]],["setGlobalObjectConstantProperties",[$h͏_a => (setGlobalObjectConstantProperties = $h͏_a)]],["setGlobalObjectMutableProperties",[$h͏_a => (setGlobalObjectMutableProperties = $h͏_a)]],["setGlobalObjectEvaluators",[$h͏_a => (setGlobalObjectEvaluators = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]],["assertEqual",[$h͏_a => (assertEqual = $h͏_a)]],["q",[$h͏_a => (q = $h͏_a)]]]],["./permits.js", [["sharedGlobalPropertyNames",[$h͏_a => (sharedGlobalPropertyNames = $h͏_a)]]]],["./module-load.js", [["load",[$h͏_a => (load = $h͏_a)]],["loadNow",[$h͏_a => (loadNow = $h͏_a)]]]],["./module-link.js", [["link",[$h͏_a => (link = $h͏_a)]]]],["./module-proxy.js", [["getDeferredExports",[$h͏_a => (getDeferredExports = $h͏_a)]]]],["./compartment-evaluate.js", [["compartmentEvaluate",[$h͏_a => (compartmentEvaluate = $h͏_a)]]]],["./make-safe-evaluator.js", [["makeSafeEvaluator",[$h͏_a => (makeSafeEvaluator = $h͏_a)]]]]]);
 
 
@@ -11835,18 +11894,49 @@ function validateModuleSource(moduleSource, moduleSpecifier) {
 
 
 
+/**
+ * @import {ImportHook, ImportMetaHook, ImportNowHook, ModuleDescriptor, ModuleExportsNamespace, ModuleMap, ModuleMapHook, ResolveHook, ModuleSource, CompartmentOptions} from '../types.js'
+ * @import {Transform} from './lockdown.js'
+ * @import {DeferredExports} from './module-proxy.js'
+ */
 
-/** @import {ModuleDescriptor, ModuleExportsNamespace} from '../types.js' */
-
-// moduleAliases associates every public module exports namespace with its
-// corresponding compartment and specifier so they can be used to link modules
-// across compartments.
-// The mechanism to thread an alias is to use the compartment.module function
-// to obtain the exports namespace of a foreign module and pass it into another
-// compartment's moduleMap constructor option.
+/**
+ * Associates every public module exports namespace with its corresponding
+ * compartment and specifier so they can be used to link modules across
+ * compartments. The mechanism to thread an alias is to use the
+ * {@link Compartment.module} function to obtain the exports namespace of a foreign
+ * module and pass it into another compartment's `moduleMap` constructor option
+ * @type {WeakMap<ModuleExportsNamespace, Compartment>}
+ *
+ */
 const moduleAliases = new WeakMap();
 
-// privateFields captures the private state for each compartment.
+/**
+ * Private fields for `Compartment` instances
+ * @typedef {object} CompartmentFields
+ * @property {string} name
+ * @property {object} globalObject
+ * @property {Array<Transform>} globalTransforms
+ * @property {(source: string, options?: {localTransforms?: Array<Transform>}) => void} safeEvaluate
+ * @property {ResolveHook} resolveHook
+ * @property {ImportHook} importHook
+ * @property {ImportNowHook} importNowHook
+ * @property {ModuleMap} moduleMap
+ * @property {ModuleMapHook} moduleMapHook
+ * @property {ImportMetaHook} importMetaHook
+ * @property {Map<string, ModuleSource>} moduleRecords
+ * @property {Array<Transform>} __shimTransforms__
+ * @property {DeferredExports} deferredExports
+ * @property {Map<string, ModuleDescriptor>} instances
+ * @property {Compartment} [parentCompartment]
+ * @property {boolean} noNamespaceBox
+ * @property {(fullSpecifier: string) => Promise<ModuleExportsNamespace>} compartmentImport
+ */
+
+/**
+ * Captures the private state for each {@link Compartment}
+ * @type {WeakMap<Compartment, CompartmentFields>}
+ */
 const privateFields = new WeakMap();
 
        const InertCompartment = function Compartment(
@@ -11862,6 +11952,7 @@ const privateFields = new WeakMap();
 /**
  * @param {Compartment} compartment
  * @param {string} specifier
+ * @returns {{namespace: ModuleExportsNamespace}}
  */$h͏_once.InertCompartment(InertCompartment);
 const compartmentImportNow = (compartment, specifier) => {
   const { execute, exportsProxy } = link(
@@ -11874,27 +11965,20 @@ const compartmentImportNow = (compartment, specifier) => {
   return exportsProxy;
 };
 
+/** @type {Compartment & {constructor: typeof InertCompartment}} */
        const CompartmentPrototype = {
   constructor: InertCompartment,
 
   get globalThis() {
-    return weakmapGet(privateFields, this).globalObject;
+    return /** @type {CompartmentFields} */ (weakmapGet(privateFields, this))
+      .globalObject;
   },
 
   get name() {
-    return weakmapGet(privateFields, this).name;
+    return /** @type {CompartmentFields} */ (weakmapGet(privateFields, this))
+      .name;
   },
 
-  /**
-   * @param {string} source is a JavaScript program grammar construction.
-   * @param {object} [options]
-   * @param {Array<import('./lockdown-shim').Transform>} [options.transforms]
-   * @param {boolean} [options.sloppyGlobalsMode]
-   * @param {object} [options.__moduleShimLexicals__]
-   * @param {boolean} [options.__evadeHtmlCommentTest__]
-   * @param {boolean} [options.__evadeImportExpressionTest__]
-   * @param {boolean} [options.__rejectSomeDirectEvalExpressions__]
-   */
   evaluate(source, options = {}) {
     const compartmentFields = weakmapGet(privateFields, this);
     return compartmentEvaluate(compartmentFields, source, options);
@@ -11916,7 +12000,9 @@ const compartmentImportNow = (compartment, specifier) => {
   },
 
   async import(specifier) {
-    const { noNamespaceBox } = weakmapGet(privateFields, this);
+    const { noNamespaceBox } = /** @type {CompartmentFields} */ (
+      weakmapGet(privateFields, this)
+    );
 
     if (typeof specifier !== 'string') {
       throw TypeError('first argument of import() must be a string');
@@ -11955,7 +12041,7 @@ const compartmentImportNow = (compartment, specifier) => {
     }
 
     loadNow(privateFields, moduleAliases, this, specifier);
-    return compartmentImportNow(/** @type {Compartment} */ (this), specifier);
+    return compartmentImportNow(this, specifier);
   },
 };
 
@@ -11986,15 +12072,35 @@ defineProperties(InertCompartment, {
  * @returns {Compartment['constructor']}
  */
 
-// In order to facilitate migration from the deprecated signature
-// of the compartment constructor,
-//   new Compartent(globals?, modules?, options?)
-// to the new signature:
-//   new Compartment(options?)
-// where globals and modules are expressed in the options bag instead of
-// positional arguments, this function detects the temporary sigil __options__
-// on the first argument and coerces compartments arguments into a single
-// compartments object.
+/**
+ * "Options bag"-style `Compartment` constructor arguments.
+ * @typedef {[options?: CompartmentOptions & { __options__: true }]} CompartmentOptionsArgs
+ */
+
+/**
+ * Legacy `Compartment` constructor arguments.
+ *
+ * @deprecated
+ * @typedef {[globals?: Map<string, any>, modules?: Map<string, ModuleDescriptor>, options?: CompartmentOptions]} LegacyCompartmentOptionsArgs
+ */
+
+/**
+ * In order to facilitate migration from the deprecated signature of the
+ * compartment constructor,
+ *
+ * `new Compartent(globals?, modules?, options?)`
+ *
+ * to the new signature:
+ *
+ * `new Compartment(options?)`
+ *
+ * ...where globals and modules are expressed in the options bag instead of
+ * positional arguments, this function detects the temporary sigil __options__
+ * on the first argument and coerces compartments arguments into a single
+ * compartments object.
+ * @param {CompartmentOptionsArgs|LegacyCompartmentOptionsArgs} args
+ * @returns {CompartmentOptions}
+ */
        const compartmentOptions = (...args) => {
   if (args.length === 0) {
     return {};
@@ -12016,7 +12122,7 @@ defineProperties(InertCompartment, {
       globals = /** @type {Map<string, any>} */ ({}),
       modules = /** @type {Map<string, ModuleDescriptor>} */ ({}),
       options = {},
-    ] = args;
+    ] = /** @type {LegacyCompartmentOptionsArgs} */ (args);
     assertEqual(
       options.modules,
       undefined,
@@ -12042,6 +12148,10 @@ defineProperties(InertCompartment, {
   markVirtualizedNativeFunction,
   { parentCompartment = undefined, enforceNew = false } = {},
 ) => {
+  /**
+   *
+   * @param {CompartmentOptionsArgs|LegacyCompartmentOptionsArgs} args
+   */
   function Compartment(...args) {
     if (enforceNew && new.target === undefined) {
       throw TypeError(
@@ -12177,7 +12287,7 @@ defineProperties(InertCompartment, {
 };$h͏_once.makeCompartmentConstructor(makeCompartmentConstructor);
 })()
 ,
-// === 49. ses ./src/get-anonymous-intrinsics.js ===
+// === 50. ses ./src/get-anonymous-intrinsics.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let FERAL_FUNCTION,Float32Array,Map,Set,String,getOwnPropertyDescriptor,getPrototypeOf,iterateArray,iterateMap,iterateSet,iterateString,matchAllRegExp,matchAllSymbol,regexpPrototype,globalThis,assign,AsyncGeneratorFunctionInstance,ArrayBuffer,InertCompartment;$h͏_imports([["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["Float32Array",[$h͏_a => (Float32Array = $h͏_a)]],["Map",[$h͏_a => (Map = $h͏_a)]],["Set",[$h͏_a => (Set = $h͏_a)]],["String",[$h͏_a => (String = $h͏_a)]],["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]],["iterateArray",[$h͏_a => (iterateArray = $h͏_a)]],["iterateMap",[$h͏_a => (iterateMap = $h͏_a)]],["iterateSet",[$h͏_a => (iterateSet = $h͏_a)]],["iterateString",[$h͏_a => (iterateString = $h͏_a)]],["matchAllRegExp",[$h͏_a => (matchAllRegExp = $h͏_a)]],["matchAllSymbol",[$h͏_a => (matchAllSymbol = $h͏_a)]],["regexpPrototype",[$h͏_a => (regexpPrototype = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["assign",[$h͏_a => (assign = $h͏_a)]],["AsyncGeneratorFunctionInstance",[$h͏_a => (AsyncGeneratorFunctionInstance = $h͏_a)]],["ArrayBuffer",[$h͏_a => (ArrayBuffer = $h͏_a)]]]],["./compartment.js", [["InertCompartment",[$h͏_a => (InertCompartment = $h͏_a)]]]]]);
 
 
@@ -12361,7 +12471,7 @@ function makeArguments() {
 };$h͏_once.getAnonymousIntrinsics(getAnonymousIntrinsics);
 })()
 ,
-// === 50. ses ./src/tame-harden.js ===
+// === 51. ses ./src/tame-harden.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let freeze;$h͏_imports([["./commons.js", [["freeze",[$h͏_a => (freeze = $h͏_a)]]]]]);
 
 
@@ -12393,7 +12503,7 @@ function makeArguments() {
 freeze(tameHarden);
 })()
 ,
-// === 51. ses ./src/tame-symbol-constructor.js ===
+// === 52. ses ./src/tame-symbol-constructor.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let Symbol,entries,fromEntries,getOwnPropertyDescriptors,defineProperties,arrayMap,functionBind;$h͏_imports([["./commons.js", [["Symbol",[$h͏_a => (Symbol = $h͏_a)]],["entries",[$h͏_a => (entries = $h͏_a)]],["fromEntries",[$h͏_a => (fromEntries = $h͏_a)]],["getOwnPropertyDescriptors",[$h͏_a => (getOwnPropertyDescriptors = $h͏_a)]],["defineProperties",[$h͏_a => (defineProperties = $h͏_a)]],["arrayMap",[$h͏_a => (arrayMap = $h͏_a)]],["functionBind",[$h͏_a => (functionBind = $h͏_a)]]]]]);
 
 
@@ -12460,7 +12570,7 @@ freeze(tameHarden);
 };$h͏_once.tameSymbolConstructor(tameSymbolConstructor);
 })()
 ,
-// === 52. ses ./src/tame-faux-data-properties.js ===
+// === 53. ses ./src/tame-faux-data-properties.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let getOwnPropertyDescriptor,apply,defineProperty,toStringTagSymbol;$h͏_imports([["./commons.js", [["getOwnPropertyDescriptor",[$h͏_a => (getOwnPropertyDescriptor = $h͏_a)]],["apply",[$h͏_a => (apply = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["toStringTagSymbol",[$h͏_a => (toStringTagSymbol = $h͏_a)]]]]]);
 
 
@@ -12673,7 +12783,7 @@ const throws = thunk => {
 };$h͏_once.tameFauxDataProperties(tameFauxDataProperties);
 })()
 ,
-// === 53. ses ./src/tame-regenerator-runtime.js ===
+// === 54. ses ./src/tame-regenerator-runtime.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let defineProperty,iteratorPrototype,iteratorSymbol,objectHasOwnProperty;$h͏_imports([["./commons.js", [["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]],["iteratorPrototype",[$h͏_a => (iteratorPrototype = $h͏_a)]],["iteratorSymbol",[$h͏_a => (iteratorSymbol = $h͏_a)]],["objectHasOwnProperty",[$h͏_a => (objectHasOwnProperty = $h͏_a)]]]]]);
 
 
@@ -12705,7 +12815,7 @@ const throws = thunk => {
 };$h͏_once.tameRegeneratorRuntime(tameRegeneratorRuntime);
 })()
 ,
-// === 54. ses ./src/shim-arraybuffer-transfer.js ===
+// === 55. ses ./src/shim-arraybuffer-transfer.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let ArrayBuffer,arrayBufferPrototype,arrayBufferSlice,arrayBufferGetByteLength,Uint8Array,typedArraySet,globalThis,TypeError,defineProperty;$h͏_imports([["./commons.js", [["ArrayBuffer",[$h͏_a => (ArrayBuffer = $h͏_a)]],["arrayBufferPrototype",[$h͏_a => (arrayBufferPrototype = $h͏_a)]],["arrayBufferSlice",[$h͏_a => (arrayBufferSlice = $h͏_a)]],["arrayBufferGetByteLength",[$h͏_a => (arrayBufferGetByteLength = $h͏_a)]],["Uint8Array",[$h͏_a => (Uint8Array = $h͏_a)]],["typedArraySet",[$h͏_a => (typedArraySet = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["defineProperty",[$h͏_a => (defineProperty = $h͏_a)]]]]]);
 
 
@@ -12793,7 +12903,7 @@ const throws = thunk => {
 };$h͏_once.shimArrayBufferTransfer(shimArrayBufferTransfer);
 })()
 ,
-// === 55. ses ./src/reporting.js ===
+// === 56. ses ./src/reporting.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let functionBind,globalThis,assert;$h͏_imports([["./commons.js", [["functionBind",[$h͏_a => (functionBind = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
@@ -12901,7 +13011,7 @@ const mute = () => {};
 };$h͏_once.reportInGroup(reportInGroup);
 })()
 ,
-// === 56. ses ./src/lockdown.js ===
+// === 57. ses ./src/lockdown.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let getenv,FERAL_FUNCTION,FERAL_EVAL,TypeError,arrayFilter,globalThis,is,ownKeys,stringSplit,noEvalEvaluate,getOwnPropertyNames,getPrototypeOf,makeHardener,makeIntrinsicsCollector,removeUnpermittedIntrinsics,tameFunctionConstructors,tameDateConstructor,tameMathObject,tameRegExpConstructor,enablePropertyOverrides,tameLocaleMethods,setGlobalObjectConstantProperties,setGlobalObjectMutableProperties,setGlobalObjectEvaluators,makeSafeEvaluator,initialGlobalPropertyNames,tameFunctionToString,tameDomains,tameModuleSource,tameConsole,tameErrorConstructor,assert,makeAssert,getAnonymousIntrinsics,makeCompartmentConstructor,tameHarden,tameSymbolConstructor,tameFauxDataProperties,tameRegeneratorRuntime,shimArrayBufferTransfer,reportInGroup,chooseReporter;$h͏_imports([["@endo/env-options", [["getEnvironmentOption",[$h͏_a => (getenv = $h͏_a)]]]],["@endo/immutable-arraybuffer/shim.js", []],["./commons.js", [["FERAL_FUNCTION",[$h͏_a => (FERAL_FUNCTION = $h͏_a)]],["FERAL_EVAL",[$h͏_a => (FERAL_EVAL = $h͏_a)]],["TypeError",[$h͏_a => (TypeError = $h͏_a)]],["arrayFilter",[$h͏_a => (arrayFilter = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]],["is",[$h͏_a => (is = $h͏_a)]],["ownKeys",[$h͏_a => (ownKeys = $h͏_a)]],["stringSplit",[$h͏_a => (stringSplit = $h͏_a)]],["noEvalEvaluate",[$h͏_a => (noEvalEvaluate = $h͏_a)]],["getOwnPropertyNames",[$h͏_a => (getOwnPropertyNames = $h͏_a)]],["getPrototypeOf",[$h͏_a => (getPrototypeOf = $h͏_a)]]]],["./make-hardener.js", [["makeHardener",[$h͏_a => (makeHardener = $h͏_a)]]]],["./intrinsics.js", [["makeIntrinsicsCollector",[$h͏_a => (makeIntrinsicsCollector = $h͏_a)]]]],["./permits-intrinsics.js", [["default",[$h͏_a => (removeUnpermittedIntrinsics = $h͏_a)]]]],["./tame-function-constructors.js", [["default",[$h͏_a => (tameFunctionConstructors = $h͏_a)]]]],["./tame-date-constructor.js", [["default",[$h͏_a => (tameDateConstructor = $h͏_a)]]]],["./tame-math-object.js", [["default",[$h͏_a => (tameMathObject = $h͏_a)]]]],["./tame-regexp-constructor.js", [["default",[$h͏_a => (tameRegExpConstructor = $h͏_a)]]]],["./enable-property-overrides.js", [["default",[$h͏_a => (enablePropertyOverrides = $h͏_a)]]]],["./tame-locale-methods.js", [["default",[$h͏_a => (tameLocaleMethods = $h͏_a)]]]],["./global-object.js", [["setGlobalObjectConstantProperties",[$h͏_a => (setGlobalObjectConstantProperties = $h͏_a)]],["setGlobalObjectMutableProperties",[$h͏_a => (setGlobalObjectMutableProperties = $h͏_a)]],["setGlobalObjectEvaluators",[$h͏_a => (setGlobalObjectEvaluators = $h͏_a)]]]],["./make-safe-evaluator.js", [["makeSafeEvaluator",[$h͏_a => (makeSafeEvaluator = $h͏_a)]]]],["./permits.js", [["initialGlobalPropertyNames",[$h͏_a => (initialGlobalPropertyNames = $h͏_a)]]]],["./tame-function-tostring.js", [["tameFunctionToString",[$h͏_a => (tameFunctionToString = $h͏_a)]]]],["./tame-domains.js", [["tameDomains",[$h͏_a => (tameDomains = $h͏_a)]]]],["./tame-module-source.js", [["tameModuleSource",[$h͏_a => (tameModuleSource = $h͏_a)]]]],["./error/tame-console.js", [["tameConsole",[$h͏_a => (tameConsole = $h͏_a)]]]],["./error/tame-error-constructor.js", [["default",[$h͏_a => (tameErrorConstructor = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]],["makeAssert",[$h͏_a => (makeAssert = $h͏_a)]]]],["./get-anonymous-intrinsics.js", [["getAnonymousIntrinsics",[$h͏_a => (getAnonymousIntrinsics = $h͏_a)]]]],["./compartment.js", [["makeCompartmentConstructor",[$h͏_a => (makeCompartmentConstructor = $h͏_a)]]]],["./tame-harden.js", [["tameHarden",[$h͏_a => (tameHarden = $h͏_a)]]]],["./tame-symbol-constructor.js", [["tameSymbolConstructor",[$h͏_a => (tameSymbolConstructor = $h͏_a)]]]],["./tame-faux-data-properties.js", [["tameFauxDataProperties",[$h͏_a => (tameFauxDataProperties = $h͏_a)]]]],["./tame-regenerator-runtime.js", [["tameRegeneratorRuntime",[$h͏_a => (tameRegeneratorRuntime = $h͏_a)]]]],["./shim-arraybuffer-transfer.js", [["shimArrayBufferTransfer",[$h͏_a => (shimArrayBufferTransfer = $h͏_a)]]]],["./reporting.js", [["reportInGroup",[$h͏_a => (reportInGroup = $h͏_a)]],["chooseReporter",[$h͏_a => (chooseReporter = $h͏_a)]]]]]);
 
 
@@ -13462,7 +13572,7 @@ const probeHostEvaluators = () => {
 };$h͏_once.repairIntrinsics(repairIntrinsics);
 })()
 ,
-// === 57. ses ./src/lockdown-shim.js ===
+// === 58. ses ./src/lockdown-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let globalThis,repairIntrinsics;$h͏_imports([["./assert-sloppy-mode.js", []],["./commons.js", [["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./lockdown.js", [["repairIntrinsics",[$h͏_a => (repairIntrinsics = $h͏_a)]]]]]);
 
 
@@ -13502,7 +13612,7 @@ globalThis.repairIntrinsics = options => {
 };
 })()
 ,
-// === 58. ses ./src/compartment-shim.js ===
+// === 59. ses ./src/compartment-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let globalThis,makeCompartmentConstructor,tameFunctionToString,getGlobalIntrinsics,chooseReporter;$h͏_imports([["./commons.js", [["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./compartment.js", [["makeCompartmentConstructor",[$h͏_a => (makeCompartmentConstructor = $h͏_a)]]]],["./tame-function-tostring.js", [["tameFunctionToString",[$h͏_a => (tameFunctionToString = $h͏_a)]]]],["./intrinsics.js", [["getGlobalIntrinsics",[$h͏_a => (getGlobalIntrinsics = $h͏_a)]]]],["./reporting.js", [["chooseReporter",[$h͏_a => (chooseReporter = $h͏_a)]]]]]);
 
 
@@ -13527,14 +13637,14 @@ globalThis.Compartment = makeCompartmentConstructor(
 );
 })()
 ,
-// === 59. ses ./src/assert-shim.js ===
+// === 60. ses ./src/assert-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let globalThis,assert;$h͏_imports([["./commons.js", [["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./error/assert.js", [["assert",[$h͏_a => (assert = $h͏_a)]]]]]);
 
 
 globalThis.assert = assert;
 })()
 ,
-// === 60. ses ./src/console-shim.js ===
+// === 61. ses ./src/console-shim.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';let symbolFor,globalThis,defineCausalConsoleFromLogger,loggedErrorHandler;$h͏_imports([["./commons.js", [["symbolFor",[$h͏_a => (symbolFor = $h͏_a)]],["globalThis",[$h͏_a => (globalThis = $h͏_a)]]]],["./error/console.js", [["defineCausalConsoleFromLogger",[$h͏_a => (defineCausalConsoleFromLogger = $h͏_a)]]]],["./error/assert.js", [["loggedErrorHandler",[$h͏_a => (loggedErrorHandler = $h͏_a)]]]]]);
 
 
@@ -13587,7 +13697,7 @@ globalThis[MAKE_CAUSAL_CONSOLE_FROM_LOGGER_KEY_FOR_SES_AVA] =
   makeCausalConsoleFromLoggerForSesAva;
 })()
 ,
-// === 61. ses ./index.js ===
+// === 62. ses ./index.js ===
 ({imports:$h͏_imports,liveVar:$h͏_live,onceVar:$h͏_once,import:$h͏_import,importMeta:$h͏____meta})=>(function(){'use strict';$h͏_imports([["./src/lockdown-shim.js", []],["./src/compartment-shim.js", []],["./src/assert-shim.js", []],["./src/console-shim.js", []]]);
 })()
 ,
