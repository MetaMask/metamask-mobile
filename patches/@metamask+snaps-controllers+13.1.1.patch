diff --git a/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.cjs b/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.cjs
index 0e8feeb..2bf546a 100644
--- a/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.cjs
+++ b/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.cjs
@@ -39,9 +39,18 @@ class CronjobController extends base_controller_1.BaseController {
         this.messagingSystem.subscribe('SnapController:snapEnabled', this.#handleSnapEnabledEvent);
         this.messagingSystem.subscribe('SnapController:snapDisabled', this.#handleSnapDisabledEvent);
         this.messagingSystem.subscribe('SnapController:snapUpdated', this.#handleSnapUpdatedEvent);
+        this.messagingSystem.registerActionHandler(`${controllerName}:init`, (...args) => this.init(...args));
         this.messagingSystem.registerActionHandler(`${controllerName}:schedule`, (...args) => this.schedule(...args));
         this.messagingSystem.registerActionHandler(`${controllerName}:cancel`, (...args) => this.cancel(...args));
         this.messagingSystem.registerActionHandler(`${controllerName}:get`, (...args) => this.get(...args));
+    }
+    /**
+     * Initialize the CronjobController.
+     *
+     * This starts the daily timer, clears out expired events
+     * and reschedules any remaining events.
+     */
+    init() {
         this.#start();
         this.#clear();
         this.#reschedule();
diff --git a/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.mjs b/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.mjs
index e3f025c..b90b08f 100644
--- a/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.mjs
+++ b/node_modules/@metamask/snaps-controllers/dist/cronjob/CronjobController.mjs
@@ -36,9 +36,18 @@ export class CronjobController extends BaseController {
         this.messagingSystem.subscribe('SnapController:snapEnabled', this.#handleSnapEnabledEvent);
         this.messagingSystem.subscribe('SnapController:snapDisabled', this.#handleSnapDisabledEvent);
         this.messagingSystem.subscribe('SnapController:snapUpdated', this.#handleSnapUpdatedEvent);
+        this.messagingSystem.registerActionHandler(`${controllerName}:init`, (...args) => this.init(...args));
         this.messagingSystem.registerActionHandler(`${controllerName}:schedule`, (...args) => this.schedule(...args));
         this.messagingSystem.registerActionHandler(`${controllerName}:cancel`, (...args) => this.cancel(...args));
         this.messagingSystem.registerActionHandler(`${controllerName}:get`, (...args) => this.get(...args));
+    }
+    /**
+     * Initialize the CronjobController.
+     *
+     * This starts the daily timer, clears out expired events
+     * and reschedules any remaining events.
+     */
+    init() {
         this.#start();
         this.#clear();
         this.#reschedule();
