diff --git a/node_modules/@metamask/eth-keyring-controller/dist/KeyringController.js b/node_modules/@metamask/eth-keyring-controller/dist/KeyringController.js
index 3f70b51..f2d99d0 100644
--- a/node_modules/@metamask/eth-keyring-controller/dist/KeyringController.js
+++ b/node_modules/@metamask/eth-keyring-controller/dist/KeyringController.js
@@ -651,6 +651,19 @@ class KeyringController extends events_1.EventEmitter {
         serializedKeyrings.push(...this.unsupportedKeyrings);
         let vault;
         let newEncryptionKey;
+
+        /**
+         * ============================== PATCH INFORMATION ==============================
+         * The HD keyring is the default keyring for all wallets if this keyring is missing
+         * for some reason we should avoid saving the keyrings
+         * 
+         * Note: The fix is still pending in the @metamask/keyring-controller package
+         */ 
+        if (!(serializedKeyrings.some((obj) => obj.type === constants_1.KeyringType.HD))) {
+            const types = serializedKeyrings.map(item => item.type);
+            throw new Error(`HD keyring missing while saving keyrings - the available types are [${types}]`);
+        }
+
         if (__classPrivateFieldGet(this, _KeyringController_cacheEncryptionKey, "f")) {
             assertIsExportableKeyEncryptor(__classPrivateFieldGet(this, _KeyringController_encryptor, "f"));
             if (encryptionKey) {
