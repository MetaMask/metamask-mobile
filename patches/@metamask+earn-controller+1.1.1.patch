diff --git a/node_modules/@metamask/earn-controller/dist/EarnController.cjs b/node_modules/@metamask/earn-controller/dist/EarnController.cjs
index 19cdbec..6214d0f 100644
--- a/node_modules/@metamask/earn-controller/dist/EarnController.cjs
+++ b/node_modules/@metamask/earn-controller/dist/EarnController.cjs
@@ -510,11 +510,14 @@ class EarnController extends base_controller_1.BaseController {
         if (!__classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f")) {
             throw new Error('Selected network client id not found');
         }
+        const gasLimit = !transactionData.gasLimit
+        ? undefined
+        : (0, controller_utils_1.toHex)(transactionData.gasLimit);
         const txHash = await __classPrivateFieldGet(this, _EarnController_addTransactionFn, "f").call(this, {
             ...transactionData,
             value: transactionData.value.toString(),
             chainId: (0, controller_utils_1.toHex)(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
-            gasLimit: String(transactionData.gasLimit),
+            gasLimit,
         }, {
             ...txOptions,
             networkClientId: __classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f"),
@@ -543,11 +546,14 @@ class EarnController extends base_controller_1.BaseController {
         if (!__classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f")) {
             throw new Error('Selected network client id not found');
         }
+        const gasLimit = !transactionData.gasLimit
+        ? undefined
+        : (0, controller_utils_1.toHex)(transactionData.gasLimit);
         const txHash = await __classPrivateFieldGet(this, _EarnController_addTransactionFn, "f").call(this, {
             ...transactionData,
             value: transactionData.value.toString(),
             chainId: (0, controller_utils_1.toHex)(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
-            gasLimit: String(transactionData.gasLimit),
+            gasLimit,
         }, {
             ...txOptions,
             networkClientId: __classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f"),
@@ -576,11 +582,14 @@ class EarnController extends base_controller_1.BaseController {
         if (!__classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f")) {
             throw new Error('Selected network client id not found');
         }
+        const gasLimit = !transactionData.gasLimit
+        ? undefined
+        : (0, controller_utils_1.toHex)(transactionData.gasLimit);
         const txHash = await __classPrivateFieldGet(this, _EarnController_addTransactionFn, "f").call(this, {
             ...transactionData,
             value: transactionData.value.toString(),
             chainId: (0, controller_utils_1.toHex)(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
-            gasLimit: String(transactionData.gasLimit),
+            gasLimit,
         }, {
             ...txOptions,
             networkClientId: __classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f"),
diff --git a/node_modules/@metamask/earn-controller/dist/EarnController.mjs b/node_modules/@metamask/earn-controller/dist/EarnController.mjs
index dccaadb..ed48bde 100644
--- a/node_modules/@metamask/earn-controller/dist/EarnController.mjs
+++ b/node_modules/@metamask/earn-controller/dist/EarnController.mjs
@@ -506,11 +506,14 @@ export class EarnController extends BaseController {
         if (!__classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f")) {
             throw new Error('Selected network client id not found');
         }
+        const gasLimit = !transactionData.gasLimit
+        ? undefined
+        : (0, controller_utils_1.toHex)(transactionData.gasLimit);
         const txHash = await __classPrivateFieldGet(this, _EarnController_addTransactionFn, "f").call(this, {
             ...transactionData,
             value: transactionData.value.toString(),
-            chainId: toHex(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
-            gasLimit: String(transactionData.gasLimit),
+            chainId: (0, controller_utils_1.toHex)(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
+            gasLimit,
         }, {
             ...txOptions,
             networkClientId: __classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f"),
@@ -539,11 +542,14 @@ export class EarnController extends BaseController {
         if (!__classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f")) {
             throw new Error('Selected network client id not found');
         }
+        const gasLimit = !transactionData.gasLimit
+        ? undefined
+        : (0, controller_utils_1.toHex)(transactionData.gasLimit);
         const txHash = await __classPrivateFieldGet(this, _EarnController_addTransactionFn, "f").call(this, {
             ...transactionData,
             value: transactionData.value.toString(),
-            chainId: toHex(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
-            gasLimit: String(transactionData.gasLimit),
+            chainId: (0, controller_utils_1.toHex)(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
+            gasLimit,
         }, {
             ...txOptions,
             networkClientId: __classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f"),
@@ -572,11 +578,14 @@ export class EarnController extends BaseController {
         if (!__classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f")) {
             throw new Error('Selected network client id not found');
         }
+        const gasLimit = !transactionData.gasLimit
+        ? undefined
+        : (0, controller_utils_1.toHex)(transactionData.gasLimit);
         const txHash = await __classPrivateFieldGet(this, _EarnController_addTransactionFn, "f").call(this, {
             ...transactionData,
             value: transactionData.value.toString(),
-            chainId: toHex(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
-            gasLimit: String(transactionData.gasLimit),
+            chainId: (0, controller_utils_1.toHex)(__classPrivateFieldGet(this, _EarnController_instances, "m", _EarnController_getCurrentChainId).call(this)),
+            gasLimit,
         }, {
             ...txOptions,
             networkClientId: __classPrivateFieldGet(this, _EarnController_selectedNetworkClientId, "f"),
