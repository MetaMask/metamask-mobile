diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs b/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs
index 83eb804..eab6a85 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.cjs
@@ -11,28 +11,144 @@ const base_controller_1 = require("@metamask/base-controller");
 const controller_utils_1 = require("@metamask/controller-utils");
 const constants_1 = require("./constants.cjs");
 const metadata = {
-    featureFlags: { persist: true, anonymous: true },
-    identities: { persist: true, anonymous: false },
-    ipfsGateway: { persist: true, anonymous: false },
-    isIpfsGatewayEnabled: { persist: true, anonymous: true },
-    isMultiAccountBalancesEnabled: { persist: true, anonymous: true },
-    lostIdentities: { persist: true, anonymous: false },
-    openSeaEnabled: { persist: true, anonymous: true },
-    securityAlertsEnabled: { persist: true, anonymous: true },
-    selectedAddress: { persist: true, anonymous: false },
-    showTestNetworks: { persist: true, anonymous: true },
-    showIncomingTransactions: { persist: true, anonymous: true },
-    useNftDetection: { persist: true, anonymous: true },
-    useTokenDetection: { persist: true, anonymous: true },
-    smartTransactionsOptInStatus: { persist: true, anonymous: false },
-    useTransactionSimulations: { persist: true, anonymous: true },
-    useMultiRpcMigration: { persist: true, anonymous: true },
-    useSafeChainsListValidation: { persist: true, anonymous: true },
-    tokenSortConfig: { persist: true, anonymous: true },
-    privacyMode: { persist: true, anonymous: true },
-    dismissSmartAccountSuggestionEnabled: { persist: true, anonymous: true },
-    smartAccountOptIn: { persist: true, anonymous: true },
-    smartAccountOptInForAccounts: { persist: true, anonymous: true },
+    featureFlags: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    identities: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: false,
+        usedInUi: true,
+    },
+    ipfsGateway: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: false,
+        usedInUi: true,
+    },
+    isIpfsGatewayEnabled: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    isMultiAccountBalancesEnabled: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    lostIdentities: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: false,
+        usedInUi: false,
+    },
+    displayNftMedia: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    securityAlertsEnabled: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    selectedAddress: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: false,
+        usedInUi: true,
+    },
+    showTestNetworks: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    showIncomingTransactions: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    useNftDetection: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    useTokenDetection: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    smartTransactionsOptInStatus: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: false,
+        usedInUi: true,
+    },
+    useTransactionSimulations: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    showMultiRpcModal: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    useSafeChainsListValidation: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    tokenSortConfig: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    privacyMode: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    dismissSmartAccountSuggestionEnabled: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    smartAccountOptIn: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    smartAccountOptInForAccounts: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: true,
+        usedInUi: true,
+    },
+    tokenNetworkFilter: {
+        includeInStateLogs: true,
+        persist: true,
+        anonymous: false,
+        usedInUi: true,
+    },
 };
 const name = 'PreferencesController';
 /**
@@ -48,7 +164,7 @@ function getDefaultPreferencesState() {
         isIpfsGatewayEnabled: true,
         isMultiAccountBalancesEnabled: true,
         lostIdentities: {},
-        openSeaEnabled: false,
+        displayNftMedia: false,
         securityAlertsEnabled: false,
         selectedAddress: '',
         showIncomingTransactions: {
@@ -77,7 +193,7 @@ function getDefaultPreferencesState() {
         showTestNetworks: false,
         useNftDetection: false,
         useTokenDetection: true,
-        useMultiRpcMigration: true,
+        showMultiRpcModal: true,
         smartTransactionsOptInStatus: true,
         useTransactionSimulations: true,
         useSafeChainsListValidation: true,
@@ -90,6 +206,7 @@ function getDefaultPreferencesState() {
         dismissSmartAccountSuggestionEnabled: false,
         smartAccountOptIn: true,
         smartAccountOptInForAccounts: [],
+        tokenNetworkFilter: {},
     };
 }
 exports.getDefaultPreferencesState = getDefaultPreferencesState;
@@ -228,22 +345,22 @@ class PreferencesController extends base_controller_1.BaseController {
      * @param useNftDetection - Boolean indicating user preference on NFT detection.
      */
     setUseNftDetection(useNftDetection) {
-        if (useNftDetection && !this.state.openSeaEnabled) {
-            throw new Error('useNftDetection cannot be enabled if openSeaEnabled is false');
+        if (useNftDetection && !this.state.displayNftMedia) {
+            throw new Error('useNftDetection cannot be enabled if displayNftMedia is false');
         }
         this.update((state) => {
             state.useNftDetection = useNftDetection;
         });
     }
     /**
-     * Toggle the opensea enabled setting.
+     * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     * @param displayNftMedia - Boolean indicating user preference on using OpenSea's API.
      */
-    setOpenSeaEnabled(openSeaEnabled) {
+    setDisplayNftMedia(displayNftMedia) {
         this.update((state) => {
-            state.openSeaEnabled = openSeaEnabled;
-            if (!openSeaEnabled) {
+            state.displayNftMedia = displayNftMedia;
+            if (!displayNftMedia) {
                 state.useNftDetection = false;
             }
         });
@@ -307,13 +424,14 @@ class PreferencesController extends base_controller_1.BaseController {
     /**
      * Toggle multi rpc migration modal.
      *
-     * @param useMultiRpcMigration - Boolean indicating if the multi rpc modal will be displayed or not.
+     * @param showMultiRpcModal - Boolean indicating if the multi rpc modal will be displayed or not.
      */
-    setUseMultiRpcMigration(useMultiRpcMigration) {
+    setShowMultiRpcModal(showMultiRpcModal) {
+        console.log('QQQQQQQQQ setShowMultiRpcModal', showMultiRpcModal);
         this.update((state) => {
-            state.useMultiRpcMigration = useMultiRpcMigration;
-            if (!useMultiRpcMigration) {
-                state.useMultiRpcMigration = false;
+            state.showMultiRpcModal = showMultiRpcModal;
+            if (!showMultiRpcModal) {
+                state.showMultiRpcModal = false;
             }
         });
     }
@@ -393,12 +511,24 @@ class PreferencesController extends base_controller_1.BaseController {
      * smart account upgrade.
      *
      * @param accounts - accounts for which user wants to optin for smart account upgrade
+     * @deprecated This method is deprecated and will be removed in the future.
      */
     setSmartAccountOptInForAccounts(accounts = []) {
         this.update((state) => {
             state.smartAccountOptInForAccounts = accounts;
         });
     }
+    /**
+     * Set the token network filter configuration setting.
+     *
+     * @param tokenNetworkFilter - Object describing token network filter configuration.
+     */
+    setTokenNetworkFilter(tokenNetworkFilter) {
+        console.log('QQQQQQQQQ setTokenNetworkFilter', tokenNetworkFilter);
+        this.update((state) => {
+            state.tokenNetworkFilter = tokenNetworkFilter;
+        });
+    }
 }
 exports.PreferencesController = PreferencesController;
 _PreferencesController_instances = new WeakSet(), _PreferencesController_syncIdentities = function _PreferencesController_syncIdentities(addresses) {
diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts
index 7c24a04..5201edd 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.cts
@@ -71,7 +71,7 @@ export type PreferencesState = {
     /**
      * Controls whether the OpenSea API is used
      */
-    openSeaEnabled: boolean;
+    displayNftMedia: boolean;
     /**
      * Controls whether "security alerts" are enabled
      */
@@ -109,7 +109,7 @@ export type PreferencesState = {
     /**
      * Controls whether Multi rpc modal is displayed or not
      */
-    useMultiRpcMigration: boolean;
+    showMultiRpcModal: boolean;
     /**
      * Controls whether to use the safe chains list validation
      */
@@ -132,8 +132,14 @@ export type PreferencesState = {
     smartAccountOptIn: boolean;
     /**
      * User to opt in for smart account upgrade for specific accounts.
+     *
+     * @deprecated This preference is deprecated and will be removed in the future.
      */
     smartAccountOptInForAccounts: Hex[];
+    /**
+     * Controls token filtering controls
+     */
+    tokenNetworkFilter: Record<string, boolean>;
 };
 declare const name = "PreferencesController";
 export type PreferencesControllerGetStateAction = ControllerGetStateAction<typeof name, PreferencesState>;
@@ -215,11 +221,11 @@ export declare class PreferencesController extends BaseController<typeof name, P
      */
     setUseNftDetection(useNftDetection: boolean): void;
     /**
-     * Toggle the opensea enabled setting.
+     * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     * @param displayNftMedia - Boolean indicating user preference on using OpenSea's API.
      */
-    setOpenSeaEnabled(openSeaEnabled: boolean): void;
+    setDisplayNftMedia(displayNftMedia: boolean): void;
     /**
      * Toggle the security alert enabled setting.
      *
@@ -254,9 +260,9 @@ export declare class PreferencesController extends BaseController<typeof name, P
     /**
      * Toggle multi rpc migration modal.
      *
-     * @param useMultiRpcMigration - Boolean indicating if the multi rpc modal will be displayed or not.
+     * @param showMultiRpcModal - Boolean indicating if the multi rpc modal will be displayed or not.
      */
-    setUseMultiRpcMigration(useMultiRpcMigration: boolean): void;
+    setShowMultiRpcModal(showMultiRpcModal: boolean): void;
     /**
      * A setter for the user to opt into smart transactions
      *
@@ -304,8 +310,15 @@ export declare class PreferencesController extends BaseController<typeof name, P
      * smart account upgrade.
      *
      * @param accounts - accounts for which user wants to optin for smart account upgrade
+     * @deprecated This method is deprecated and will be removed in the future.
      */
     setSmartAccountOptInForAccounts(accounts?: Hex[]): void;
+    /**
+     * Set the token network filter configuration setting.
+     *
+     * @param tokenNetworkFilter - Object describing token network filter configuration.
+     */
+    setTokenNetworkFilter(tokenNetworkFilter: Record<string, boolean>): void;
 }
 export default PreferencesController;
 //# sourceMappingURL=PreferencesController.d.cts.map
\ No newline at end of file
