diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts
index bfbfe66..e9c8232 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.d.ts
@@ -71,7 +71,8 @@ export declare type PreferencesState = {
     /**
      * Controls whether the OpenSea API is used
      */
-    openSeaEnabled: boolean;
+    displayNftMedia: boolean;
+    useSafeChainsListValidation: boolean,
     /**
      * Controls whether "security alerts" are enabled
      */
@@ -98,6 +99,10 @@ export declare type PreferencesState = {
      * Controls whether token detection is enabled
      */
     useTokenDetection: boolean;
+    /**
+     * Controls whether smart transactions are opted into
+     */
+    smartTransactionsOptInStatus: boolean;
 };
 declare const name = "PreferencesController";
 export declare type PreferencesControllerGetStateAction = ControllerGetStateAction<typeof name, PreferencesState>;
@@ -216,11 +221,16 @@ export declare class PreferencesController extends BaseController<typeof name, P
      */
     setUseNftDetection(useNftDetection: boolean): void;
     /**
-     * Toggle the opensea enabled setting.
+    * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     * @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
+     */
+    setDisplayNftMedia(displayNftMedia: boolean): void;
+    /**
+     * Toggle the use safe chains list validation.
+     * @param useSafeChainsListValidation - Boolean indicating user preference on using chainid.network third part to check safe networks.
      */
-    setOpenSeaEnabled(openSeaEnabled: boolean): void;
+    setUseSafeChainsListValidation(useSafeChainsListValidation: boolean): void;
     /**
      * Toggle the security alert enabled setting.
      *
@@ -259,6 +269,12 @@ export declare class PreferencesController extends BaseController<typeof name, P
      * @param isIncomingTransactionNetworkEnable - true to enable incoming transactions
      */
     setEnableNetworkIncomingTransactions(chainId: EtherscanSupportedHexChainId, isIncomingTransactionNetworkEnable: boolean): void;
+    /**
+     * A setter for the user to opt into smart transactions
+     *
+     * @param smartTransactionsOptInStatus - true to opt into smart transactions
+     */
+    setSmartTransactionsOptInStatus(smartTransactionsOptInStatus: boolean): void;
 }
 export default PreferencesController;
 //# sourceMappingURL=PreferencesController.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@metamask/preferences-controller/dist/PreferencesController.js b/node_modules/@metamask/preferences-controller/dist/PreferencesController.js
index 228cd90..ac62b59 100644
--- a/node_modules/@metamask/preferences-controller/dist/PreferencesController.js
+++ b/node_modules/@metamask/preferences-controller/dist/PreferencesController.js
@@ -18,13 +18,15 @@ const metadata = {
     isIpfsGatewayEnabled: { persist: true, anonymous: true },
     isMultiAccountBalancesEnabled: { persist: true, anonymous: true },
     lostIdentities: { persist: true, anonymous: false },
-    openSeaEnabled: { persist: true, anonymous: true },
+    displayNftMedia: { persist: true, anonymous: true },
+    useSafeChainsListValidation: { persist: true, anonymous: true },
     securityAlertsEnabled: { persist: true, anonymous: true },
     selectedAddress: { persist: true, anonymous: false },
     showTestNetworks: { persist: true, anonymous: true },
     showIncomingTransactions: { persist: true, anonymous: true },
     useNftDetection: { persist: true, anonymous: true },
     useTokenDetection: { persist: true, anonymous: true },
+    smartTransactionsOptInStatus: { persist: true, anonymous: true },
 };
 const name = 'PreferencesController';
 /**
@@ -43,7 +45,7 @@ function getDefaultPreferencesState() {
         isIpfsGatewayEnabled: true,
         isMultiAccountBalancesEnabled: true,
         lostIdentities: {},
-        openSeaEnabled: false,
+        displayNftMedia: false,
         securityAlertsEnabled: false,
         selectedAddress: '',
         showIncomingTransactions: {
@@ -61,6 +63,7 @@ function getDefaultPreferencesState() {
             [constants_1.ETHERSCAN_SUPPORTED_CHAIN_IDS.FANTOM_TESTNET]: true,
             [constants_1.ETHERSCAN_SUPPORTED_CHAIN_IDS.SEPOLIA]: true,
             [constants_1.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_GOERLI]: true,
+            [constants_1.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_SEPOLIA]: true,
             [constants_1.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_MAINNET]: true,
             [constants_1.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONBEAM]: true,
             [constants_1.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONBEAM_TESTNET]: true,
@@ -70,6 +73,8 @@ function getDefaultPreferencesState() {
         showTestNetworks: false,
         useNftDetection: false,
         useTokenDetection: true,
+        useSafeChainsListValidation: true,
+        smartTransactionsOptInStatus: false,
     };
 }
 exports.getDefaultPreferencesState = getDefaultPreferencesState;
@@ -205,26 +210,41 @@ class PreferencesController extends base_controller_1.BaseController {
      * @param useNftDetection - Boolean indicating user preference on NFT detection.
      */
     setUseNftDetection(useNftDetection) {
-        if (useNftDetection && !this.state.openSeaEnabled) {
-            throw new Error('useNftDetection cannot be enabled if openSeaEnabled is false');
+        if (useNftDetection && !this.state.displayNftMedia) {
+            throw new Error('useNftDetection cannot be enabled if displayNftMedia is false');
         }
         this.update((state) => {
             state.useNftDetection = useNftDetection;
         });
     }
     /**
-     * Toggle the opensea enabled setting.
+     * Toggle the display nft media enabled setting.
      *
-     * @param openSeaEnabled - Boolean indicating user preference on using OpenSea's API.
+     *  @param displayNftMedia - Boolean indicating user preference on using web2 third parties.
      */
-    setOpenSeaEnabled(openSeaEnabled) {
+    setDisplayNftMedia(displayNftMedia) {
         this.update((state) => {
-            state.openSeaEnabled = openSeaEnabled;
-            if (!openSeaEnabled) {
+            state.displayNftMedia = displayNftMedia;
+            if (!displayNftMedia) {
                 state.useNftDetection = false;
             }
         });
     }
+
+    /**
+     * Toggle the use safe chains list validation.
+     *
+     * @param useSafeChainsListValidation - Boolean indicating user preference on using chainid.network third part to check safe networks.
+     */
+    setUseSafeChainsListValidation(useSafeChainsListValidation) {
+        this.update((state) => {
+            state.useSafeChainsListValidation = useSafeChainsListValidation;
+            if (!useSafeChainsListValidation) {
+                state.useSafeChainsListValidation = false;
+            }
+        })    
+    }
+
     /**
      * Toggle the security alert enabled setting.
      *
@@ -291,6 +311,16 @@ class PreferencesController extends base_controller_1.BaseController {
             });
         }
     }
+    /**
+     * A setter for the user to opt into smart transactions
+     *
+     * @param smartTransactionsOptInStatus - true to opt into smart transactions
+     */
+    setSmartTransactionsOptInStatus(smartTransactionsOptInStatus) {
+        this.update((state) => {
+            state.smartTransactionsOptInStatus = smartTransactionsOptInStatus;
+        });
+    }
 }
 exports.PreferencesController = PreferencesController;
 _PreferencesController_instances = new WeakSet(), _PreferencesController_syncIdentities = function _PreferencesController_syncIdentities(addresses) {
diff --git a/node_modules/@metamask/preferences-controller/dist/constants.d.ts b/node_modules/@metamask/preferences-controller/dist/constants.d.ts
index cb9a3d4..5662d1c 100644
--- a/node_modules/@metamask/preferences-controller/dist/constants.d.ts
+++ b/node_modules/@metamask/preferences-controller/dist/constants.d.ts
@@ -13,6 +13,7 @@ export declare const ETHERSCAN_SUPPORTED_CHAIN_IDS: {
     readonly FANTOM_TESTNET: "0xfa2";
     readonly SEPOLIA: "0xaa36a7";
     readonly LINEA_GOERLI: "0xe704";
+    readonly LINEA_SEPOLIA: "0xe705";
     readonly LINEA_MAINNET: "0xe708";
     readonly MOONBEAM: "0x504";
     readonly MOONBEAM_TESTNET: "0x507";
diff --git a/node_modules/@metamask/preferences-controller/dist/constants.js b/node_modules/@metamask/preferences-controller/dist/constants.js
index f8d26cb..dade0b8 100644
--- a/node_modules/@metamask/preferences-controller/dist/constants.js
+++ b/node_modules/@metamask/preferences-controller/dist/constants.js
@@ -16,6 +16,7 @@ exports.ETHERSCAN_SUPPORTED_CHAIN_IDS = {
     FANTOM_TESTNET: '0xfa2',
     SEPOLIA: '0xaa36a7',
     LINEA_GOERLI: '0xe704',
+    LINEA_SEPOLIA: '0xe705',
     LINEA_MAINNET: '0xe708',
     MOONBEAM: '0x504',
     MOONBEAM_TESTNET: '0x507',
