name: 'Set Swap Space'
description: 'Add moar swap'
branding:
  icon: 'crop'
  color: 'orange'
inputs:
  swap-size-gb:
    description: 'Swap space to create, in Gigabytes.'
    required: false
    default: '10'
runs:
  using: "composite"
  steps:
    - name: Swap space report before modification
      shell: bash
      run: |
        echo "Memory and swap:"
        free -h
        echo
        swapon --show
        echo
    - name: Set Swap
      shell: bash
      run: |
          set -euo pipefail

          # get currently active swap file
          SWAP_FILE=$(swapon --noheadings --show=NAME | tail -n 1 || true)

          if [ -n "$SWAP_FILE" ] && [ -f "$SWAP_FILE" ]; then
            echo "Swap file: $SWAP_FILE"
            sudo swapoff "$SWAP_FILE" || echo "Failed to swapoff $SWAP_FILE (maybe not active)"
            sudo rm -f "$SWAP_FILE"
          else
            echo "No active swap, using /swapfile"
            SWAP_FILE=/swapfile
          fi

          # determine FS type to pick allocation method
          FS_TYPE=$(df --output=fstype "$(dirname "$SWAP_FILE")" | tail -n 1)

          echo "Creating swapfile at $SWAP_FILE on filesystem type: $FS_TYPE"

          if [[ "$FS_TYPE" == "xfs" || "$FS_TYPE" == "btrfs" ]]; then
            echo "Using dd for compatibility with $FS_TYPE"
            sudo dd if=/dev/zero of="$SWAP_FILE" bs=1M count=${{ inputs.swap-size-gb }}K status=progress
          else
            echo "Using fallocate for fast allocation"
            sudo fallocate -l "${{ inputs.swap-size-gb }}G" "$SWAP_FILE"
          fi

          # common swap file prep
          sudo chmod 600 "$SWAP_FILE"

          # attempt to disable CoW if on btrfs
          if [[ "$FS_TYPE" == "btrfs" ]]; then
            echo "Disabling CoW and compression on btrfs"
            sudo chattr +C "$SWAP_FILE" || echo "chattr +C failed, continuing"
            sudo btrfs property set "$SWAP_FILE" compression none || echo "compression disable failed"
          fi

          # attempt to init swap space
          if sudo mkswap "$SWAP_FILE"; then
            echo "Swap file formatted successfully"
          else
            echo "WARNING: mkswap failed. File may be sparse or invalid."
          fi

          # attempt to enable swap
          if sudo swapon "$SWAP_FILE"; then
            echo "Swap enabled at $SWAP_FILE"
          else
            echo "WARNING: swapon failed (likely due to host or kernel restrictions). Continuing without swap."
          fi
    - name: Swap space report after modification
      shell: bash
      run: |
        echo "Memory and swap:"
        free -h
        echo
        swapon --show
        echo
