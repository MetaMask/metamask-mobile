name: Android E2E Smoke Tests (Optimized)

on:
  workflow_call:

permissions:
  contents: read
  id-token: write

jobs:
  android-smoke-tests:
    name: Android Smoke Tests
    runs-on: gha-mmsdk-scale-set-ubuntu-22.04-amd64-xl
    strategy:
      matrix:
        include:
          # Confirmations tests (3 shards)
          - suite: confirmations
            tag: "SmokeConfirmations"
            split: 1
            total_splits: 3
          - suite: confirmations
            tag: "SmokeConfirmations" 
            split: 2
            total_splits: 3
          - suite: confirmations
            tag: "SmokeConfirmations"
            split: 3
            total_splits: 3
          
          # Trade tests (2 shards)
          - suite: trade
            tag: "SmokeTrade"
            split: 1
            total_splits: 2
          - suite: trade
            tag: "SmokeTrade"
            split: 2
            total_splits: 2
          
          # Wallet Platform tests (2 shards)
          - suite: wallet-platform
            tag: "SmokeWalletPlatform"
            split: 1
            total_splits: 2
          - suite: wallet-platform
            tag: "SmokeWalletPlatform"
            split: 2
            total_splits: 2
          
          # Identity tests (2 shards)
          - suite: identity
            tag: "SmokeIdentity"
            split: 1
            total_splits: 2
          - suite: identity
            tag: "SmokeIdentity"
            split: 2
            total_splits: 2
          
          # Accounts tests (2 shards)
          - suite: accounts
            tag: "SmokeAccounts"
            split: 1
            total_splits: 2
          - suite: accounts
            tag: "SmokeAccounts"
            split: 2
            total_splits: 2
          
          # Network Abstraction tests (2 shards)
          - suite: network-abstraction
            tag: "SmokeNetworkAbstractions"
            split: 1
            total_splits: 2
          - suite: network-abstraction
            tag: "SmokeNetworkAbstractions"
            split: 2
            total_splits: 2
          
          # Network Expansion tests (2 shards)
          - suite: network-expansion
            tag: "SmokeNetworkExpansion"
            split: 1
            total_splits: 2
          - suite: network-expansion
            tag: "SmokeNetworkExpansion"
            split: 2
            total_splits: 2
          
          # Performance tests (2 shards)
          - suite: performance
            tag: "SmokePerformance"
            split: 1
            total_splits: 2
          - suite: performance
            tag: "SmokePerformance"
            split: 2
            total_splits: 2
          
          # Card tests (1 shard)
          - suite: card
            tag: "SmokeCard"
            split: 1
            total_splits: 1

      fail-fast: false
      # Each shard runs on its own machine for isolation

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-android-${{ matrix.suite }}-${{ matrix.split }}
      cancel-in-progress: ${{ !(contains(github.ref, 'refs/heads/main') || contains(github.ref, 'refs/heads/stable')) }}

    env:
      METAMASK_ENVIRONMENT: 'qa'
      METAMASK_BUILD_TYPE: 'main'
      TEST_SUITE_TAG: ${{ matrix.tag }}
      GITHUB_CI: 'true'
      SPLIT_NUMBER: ${{ matrix.split }}
      TOTAL_SPLITS: ${{ matrix.total_splits }}
      MM_UNIFIED_SWAPS_ENABLED: 'true'
      RAMP_INTERNAL_BUILD: 'true'
      MM_BRIDGE_ENABLED: 'true'
      BRIDGE_USE_DEV_APIS: 'true'
      MM_SECURITY_ALERTS_API_ENABLED: 'true'
      MM_NOTIFICATIONS_UI_ENABLED: 'true'
      FEATURES_ANNOUNCEMENTS_ACCESS_TOKEN: ${{ secrets.FEATURES_ANNOUNCEMENTS_ACCESS_TOKEN }}
      FEATURES_ANNOUNCEMENTS_SPACE_ID: ${{ secrets.FEATURES_ANNOUNCEMENTS_SPACE_ID }}
      MM_TEST_WALLET_SRP: ${{ secrets.MM_TEST_WALLET_SRP }}
      SEEDLESS_ONBOARDING_ENABLED: 'true'
      SEGMENT_WRITE_KEY_QA: ${{ secrets.SEGMENT_WRITE_KEY_QA }}
      SEGMENT_PROXY_URL_QA: ${{ secrets.SEGMENT_PROXY_URL_QA }}
      SEGMENT_DELETE_API_SOURCE_ID_QA: ${{ secrets.SEGMENT_DELETE_API_SOURCE_ID_QA }}
      MAIN_IOS_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_IOS_GOOGLE_CLIENT_ID_UAT }}
      MAIN_IOS_GOOGLE_REDIRECT_URI_UAT: ${{ secrets.MAIN_IOS_GOOGLE_REDIRECT_URI_UAT }}
      MAIN_ANDROID_APPLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_APPLE_CLIENT_ID_UAT }}
      MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT }}
      MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT }}
      SEGMENT_REGULATIONS_ENDPOINT_QA: ${{ secrets.SEGMENT_REGULATIONS_ENDPOINT_QA }}
      MM_SENTRY_DSN_TEST: ${{ secrets.MM_SENTRY_DSN_TEST }}
      MM_SENTRY_AUTH_TOKEN: ${{ secrets.MM_SENTRY_AUTH_TOKEN }}
      GOOGLE_SERVICES_B64_IOS: ${{ secrets.GOOGLE_SERVICES_B64_IOS }}
      GOOGLE_SERVICES_B64_ANDROID: ${{ secrets.GOOGLE_SERVICES_B64_ANDROID }}
      MM_SOLANA_E2E_TEST_SRP: ${{ secrets.MM_SOLANA_E2E_TEST_SRP }}
      MM_INFURA_PROJECT_ID: ${{ secrets.MM_INFURA_PROJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'merge_group' && github.event.merge_group.head_sha || github.event.pull_request.head.sha || github.sha }}
          clean: true
          fetch-depth: 0

      # OPTIMIZED SETUP - Cached dependencies across separate machines
      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            node_modules
            */*/node_modules
          key: node-deps-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-deps-${{ runner.os }}-

      - name: Cache Android dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.android
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: android-deps-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'android/build.gradle', 'android/app/build.gradle') }}
          restore-keys: |
            android-deps-${{ runner.os }}-

      - name: Set up E2E environment
        uses: MetaMask/github-tools/.github/actions/setup-e2e-env@self-hosted-runners-config 
        with:
          platform: android
          setup-simulator: false
          android-avd-name: emulator
          configure-keystores: false

      # OPTIMIZED ARTIFACT DOWNLOAD - Cached across similar workflows
      - name: Download Android build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      # OPTIMIZED ARTIFACT SETUP  
      - name: Setup Android artifacts
        run: |
          echo "🏗 Setting up Android artifacts..."
          
          # Create required directories
          mkdir -p android/app/build/outputs/apk/prod/release/
          mkdir -p android/app/build/outputs/apk/androidTest/prod/release/

          # Move main APK
          if [[ -f "artifacts/app-prod-release.apk/app-prod-release.apk" ]]; then
            cp "artifacts/app-prod-release.apk/app-prod-release.apk" "android/app/build/outputs/apk/prod/release/"
            echo "✅ Android main APK ready for E2E tests"
          else
            echo "❌ Android main APK not found"
            ls -la artifacts/
            exit 1
          fi

          # Move test APK
          if [[ -f "artifacts/app-prod-release-androidTest.apk/app-prod-release-androidTest.apk" ]]; then
            cp "artifacts/app-prod-release-androidTest.apk/app-prod-release-androidTest.apk" "android/app/build/outputs/apk/androidTest/prod/release/"
            echo "✅ Android test APK ready for E2E tests"
          else
            echo "❌ Android test APK not found"
            ls -la artifacts/
            exit 1
          fi

      # SHARD-SPECIFIC TEST EXECUTION
      - name: Run E2E tests for ${{ matrix.suite }}-${{ matrix.split }}
        timeout-minutes: 30
        run: |
          echo "🚀 Running ${{ matrix.suite }} tests (shard ${{ matrix.split }}/${{ matrix.total_splits }}) on Android"

          export TEST_SUITE_TAG="${{ matrix.tag }}"
          export BITRISE_TRIGGERED_WORKFLOW_ID="android_workflow"
          
          echo "Using TEST_SUITE_TAG: $TEST_SUITE_TAG"
          echo "Running split ${{ matrix.split }} of ${{ matrix.total_splits }}"

          # Run the specific shard
          ./scripts/run-e2e-tags-gha.sh
          
          echo "✅ Test execution completed for ${{ matrix.suite }}-${{ matrix.split }}"
        env:
          JOB_NAME: ${{ matrix.suite }}-android-smoke-${{ matrix.split }}
          RUN_ID: ${{ github.run_id }}
          PR_NUMBER: ${{ github.event.pull_request.number || '' }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.suite }}-android-smoke-${{ matrix.split }}-test-results
          path: e2e/reports/
          retention-days: 7
      
      - name: Prepare screenshots
        if: failure()
        run: |
          echo "🔎 Pruning artifacts while preserving Android Detox artifacts and debug assets..."

          # Remove all artifacts except Android-related ones
          find artifacts -mindepth 1 -prune \
            ! -name "android*" \
            ! -name 'coverage-*' \
            -exec echo "Removing:" {} \; \
            -exec rm -rf {} + 2>/dev/null || true
        continue-on-error: true

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.suite }}-android-smoke-${{ matrix.split }}-screenshots
          path: artifacts/
          retention-days: 7

  report-android-smoke-tests:
    name: Report Android Smoke Tests
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs: [android-smoke-tests]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: all-test-results/
          pattern: "*-android-smoke-*-test-results"

      - name: Post Test Report
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3
        with:
          name: "Android E2E Smoke Test Results (Optimized)"
          path: "all-test-results/**/*.xml"
          reporter: "jest-junit"
          fail-on-error: false
          list-suites: "failed"
          list-tests: "failed"

      - name: Create mobile test report
        id: create-json-report
        continue-on-error: true
        run: |
          # Create a temporary directory for xml2js to avoid conflicts
          mkdir -p temp-deps && cd temp-deps
          npm init -y
          npm install xml2js@0.5.0 --no-audit --no-fund
          
          # Copy node_modules to workspace
          cp -r node_modules ${{ github.workspace }}/
          
          # Run the mobile test report generator
          cd ${{ github.workspace }}
          TEST_RESULTS_PATH=all-test-results \
          TEST_RUNS_PATH=test/test-results/test-runs-android.json \
          RUN_ID=${{ github.run_id }} \
          PR_NUMBER=${{ github.event.pull_request.number || '0' }} \
          node .github/scripts/create-e2e-test-report.mjs
          
          # Clean up temporary node_modules
          rm -rf node_modules

      - name: Upload test runs JSON
        if: steps.create-json-report.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: test-e2e-android-report-optimized
          path: test/test-results/test-runs-android.json

      - name: Upload merged XML report
        uses: actions/upload-artifact@v4
        with:
          name: android-merged-test-report-optimized
          path: all-test-results/**/*.xml