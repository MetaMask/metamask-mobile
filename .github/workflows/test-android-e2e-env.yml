name: Test Android E2E Setup

on:
  push:


permissions:
  contents: write
  id-token: write

jobs:
  android-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4


      - name: Setup E2E Android Environment
        uses: MetaMask/github-tools/.github/actions/setup-e2e-env@e2e-env-actions
        with:
          platform: android
          setup-simulator: false

        
      - name: Print Android Environment Info
        run: |
          echo "üîß Node.js Version:"
          node -v || echo "Node not found"

          echo "Android Studio Version:"
          /Applications/Android\ Studio.app/Contents/MacOS/studio --version || echo "Check manually via finder"

          echo "üß∂ Yarn Version:"
          yarn -v || echo "Yarn not found"

          echo "üì¶ SDK Manager Version:"
          sdkmanager --version || echo "sdkmanager not found"

          echo "üì± ADB Version:"
          adb version || echo "adb not found"

          echo "üñ•Ô∏è Emulator Version:"
          emulator -version || echo "emulator not found"

          echo "üß± NDK Info:"
          echo "NDK Dir: $ANDROID_SDK_ROOT/ndk/${NDK_VERSION:-unknown}"
          if [ -n "${NDK_VERSION}" ] && [ -f "$ANDROID_SDK_ROOT/ndk/${NDK_VERSION}/source.properties" ]; then
            grep "Pkg.Revision" "$ANDROID_SDK_ROOT/ndk/${NDK_VERSION}/source.properties" || echo "NDK version info not found"
          else
            echo "NDK not found or NDK_VERSION not set"
          fi

          echo "üîß Checking for ndk-build:"
          command -v ndk-build || echo "ndk-build not found in PATH"

          echo "üîß Checking for clang:"
          command -v clang || echo "clang not found in PATH"

          echo "üîß Checking for llvm-ar:"
          command -v llvm-ar || echo "llvm-ar not found in PATH"

          echo "üì± Available AVD Devices:"
          avdmanager list device || echo "avdmanager not found"

          echo "üì± Available System Images:"
          sdkmanager --list | grep "system-images;" || echo "No system images listed"

          echo "üü¢ Emulator Processes:"
          pgrep -fl emulator || echo "No running emulator processes"

          echo "üì± Connected Android Devices:"
          adb devices || echo "adb devices failed"
        shell: bash

      - name: Build Android E2E App
        run: |
          echo "Building E2E app for Android..."
          yarn patch-package --error-on-fail
          # Do we make an action for yarn ? or would this be apart of the android build steps
          # PPOM
          cd ppom
          yarn clean
          yarn
          yarn lint
          yarn build
          cd ..
          yarn test:e2e:android:build:qa-release

        
        shell: bash
        env:
          PLATFORM: android
          METAMASK_ENVIRONMENT: qa
          METAMASK_BUILD_TYPE: main
          IS_TEST: true
          IGNORE_BOXLOGS_DEVELOPMENT: true

          SEGMENT_WRITE_KEY_QA: ${{ secrets.SEGMENT_WRITE_KEY_QA }}
          SEGMENT_PROXY_URL_QA: ${{ secrets.SEGMENT_PROXY_URL_QA }}
          SEGMENT_DELETE_API_SOURCE_ID_QA: ${{ secrets.SEGMENT_DELETE_API_SOURCE_ID_QA }}
          SEGMENT_REGULATIONS_ENDPOINT_QA: ${{ secrets.SEGMENT_REGULATIONS_ENDPOINT_QA }}

          MM_SENTRY_DSN_TEST: ${{ secrets.MM_SENTRY_DSN_TEST }}
          MM_SENTRY_AUTH_TOKEN: ${{ secrets.MM_SENTRY_AUTH_TOKEN }}

          MAIN_IOS_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_IOS_GOOGLE_CLIENT_ID_UAT }}
          MAIN_IOS_GOOGLE_REDIRECT_URI_UAT: ${{ secrets.MAIN_IOS_GOOGLE_REDIRECT_URI_UAT }}
          MAIN_ANDROID_APPLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_APPLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT }}
          GOOGLE_SERVICES_B64_IOS: ${{ secrets.GOOGLE_SERVICES_B64_IOS }}
          GOOGLE_SERVICES_B64_ANDROID: ${{ secrets.GOOGLE_SERVICES_B64_ANDROID }}





