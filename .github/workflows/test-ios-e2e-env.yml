name: Test iOS E2E Setup

on:
  push:


jobs:
  ios-e2e:
    #runs-on: macos-14


    runs-on: macos-14-large
    env:
      GITHUB_CI: "true"  # ‚úÖ This ensures it's available during pod install
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Detect CPU architecture
        run: |
          echo "Arch: $(uname -m)"
          if [[ "$(uname -m)" == "x86_64" ]]; then
            echo "Detected Intel runner"
          else
            echo "Detected Apple Silicon runner"
          fi

      - name: Print system resources
        run: |
            echo "üß† Memory info:"
            vm_stat

            echo ""
            echo "üíª CPU info:"
            sysctl -n hw.ncpu
            sysctl -n hw.memsize | awk '{ byte =$1 /1024/1024/1024; print byte " GB" }'
        shell: bash


      - name: Setup E2E iOS Environment
        uses: MetaMask/github-tools/.github/actions/setup-e2e-env@e2e-env-actions-keystore
        with:
          platform: ios
          setup-simulator: true

      - name: Print iOS tool versions
        run: |
            echo "üîß Node.js Version:"
            node -v || echo "Node not found"

            echo "üß∂ Yarn Version:"
            yarn -v || echo "Yarn not found"

            echo "üì¶ CocoaPods Version:"
            pod --version || echo "CocoaPods not found"

            echo "üõ†Ô∏è Xcode Path:"
            xcode-select -p || echo "Xcode not found"

            echo "üì± Booted iOS Simulators:"
            xcrun simctl list | grep Booted || echo "No booted simulators found"
        shell: bash

      - name: Build iOS E2E App
        run: |
          echo "Building E2E app for iOS..."
          yarn test:e2e:ios:build:qa-release
        shell: bash
        env:
          PLATFORM: ios
          METAMASK_ENVIRONMENT: qa
          METAMASK_BUILD_TYPE: main
          IS_TEST: true
          IGNORE_BOXLOGS_DEVELOPMENT: true

          SEGMENT_WRITE_KEY_QA: ${{ secrets.SEGMENT_WRITE_KEY_QA }}
          SEGMENT_PROXY_URL_QA: ${{ secrets.SEGMENT_PROXY_URL_QA }}
          SEGMENT_DELETE_API_SOURCE_ID_QA: ${{ secrets.SEGMENT_DELETE_API_SOURCE_ID_QA }}
          SEGMENT_REGULATIONS_ENDPOINT_QA: ${{ secrets.SEGMENT_REGULATIONS_ENDPOINT_QA }}

          MM_SENTRY_DSN_TEST: ${{ secrets.MM_SENTRY_DSN_TEST }}
          MM_SENTRY_AUTH_TOKEN: ${{ secrets.MM_SENTRY_AUTH_TOKEN }}

          MAIN_IOS_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_IOS_GOOGLE_CLIENT_ID_UAT }}
          MAIN_IOS_GOOGLE_REDIRECT_URI_UAT: ${{ secrets.MAIN_IOS_GOOGLE_REDIRECT_URI_UAT }}
          MAIN_ANDROID_APPLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_APPLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT }}
          GOOGLE_SERVICES_B64_IOS: ${{ secrets.GOOGLE_SERVICES_B64_IOS }}
          GOOGLE_SERVICES_B64_ANDROID: ${{ secrets.GOOGLE_SERVICES_B64_ANDROID }}





