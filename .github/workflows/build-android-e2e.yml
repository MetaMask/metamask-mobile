# Pure Android E2E build workflow - just builds APKs and uploads artifacts
# No testing, no unnecessary setup - optimized for speed and efficiency

name: Build Android E2E APKs

on:
  workflow_call:
    inputs:
      build_action:
        description: 'Build action: full, repack, or check_fingerprint'
        required: false
        type: string
        default: 'full'
    outputs:
      apk-uploaded:
        description: 'Whether the APK was successfully uploaded'
        value: ${{ jobs.build-android-apks.outputs.apk-uploaded }}
      aab-uploaded:
        description: 'Whether the AAB was successfully uploaded'
        value: ${{ jobs.build-android-apks.outputs.aab-uploaded }}
      sourcemap-uploaded:
        description: 'Whether the sourcemap was successfully uploaded'
        value: ${{ jobs.build-android-apks.outputs.sourcemap-uploaded }}
      build-method:
        description: 'The build method used: full, repack, or skipped'
        value: ${{ jobs.build-android-apks.outputs.build-method }}

jobs:
  build-android-apks:
    name: Build Android E2E APKs
    runs-on: gha-mmsdk-scale-set-ubuntu-22.04-amd64-xl
    env:
      GRADLE_USER_HOME: /home/runner/_work/.gradle
    outputs:
      apk-uploaded: ${{ steps.upload-apk.outcome == 'success' }}
      aab-uploaded: ${{ steps.upload-aab.outcome == 'success' }}
      sourcemap-uploaded: ${{ steps.upload-sourcemap.outcome == 'success' }}
      build-method: ${{ inputs.build_action == 'check_fingerprint' && steps.fingerprint-check.outputs.can_repack == 'true' && 'repack' || 'full' }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Android Build Environment
        uses: MetaMask/github-tools/.github/actions/setup-e2e-env@self-hosted-runners-config
        with:
          platform: android
          setup-simulator: false
          configure-keystores: true
          target: qa

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/_work/.gradle/caches
            /home/runner/_work/.gradle/wrapper
            android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Setup project dependencies with retry
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 #v3.0.2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            echo "🚀 Setting up project..."
            yarn setup:github-ci --no-build-ios

      # Fingerprint-based build decision
      - name: Restore fingerprint cache
        if: ${{ inputs.build_action == 'check_fingerprint' }}
        uses: actions/cache@v4
        with:
          path: .app-native-fingerprint
          key: fingerprint-android-${{ github.event.pull_request.number || 'main' }}
          restore-keys: |
            fingerprint-android-${{ github.event.pull_request.number || 'main' }}-
            fingerprint-android-main

      - name: Check fingerprints and decide build method
        if: ${{ inputs.build_action == 'check_fingerprint' }}
        id: fingerprint-check
        shell: bash
        run: |
          echo "🔍 Checking fingerprints..."
          if yarn fingerprint:check; then
            echo "✅ Can repack - fingerprints match"
            echo "can_repack=true" >> "$GITHUB_OUTPUT"
          elif [[ $? -eq 2 ]]; then
            echo "🆕 First build - no saved fingerprint"
            echo "can_repack=false" >> "$GITHUB_OUTPUT"
          else
            echo "🔄 Native code changed - full build required"
            echo "can_repack=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Restore cached APK for repacking
        if: ${{ inputs.build_action == 'check_fingerprint' && steps.fingerprint-check.outputs.can_repack == 'true' }}
        uses: actions/cache@v4
        with:
          path: android/app/build/outputs/apk/prod/release/app-prod-release.apk
          key: android-apk-${{ github.event.pull_request.number || 'main' }}
          restore-keys: |
            android-apk-${{ github.event.pull_request.number || 'main' }}-

      - name: Build Android E2E APKs
        if: ${{ inputs.build_action != 'check_fingerprint' || steps.fingerprint-check.outputs.can_repack == 'false' }}
        run: |
          echo "🏗 Building Android E2E APKs..."
          export NODE_OPTIONS="--max-old-space-size=8192"
          cp android/gradle.properties.github android/gradle.properties
          # to be replaced by expo prebuild
          yarn build:android:main:e2e
        shell: bash
        env:
          PLATFORM: android
          METAMASK_ENVIRONMENT: qa
          METAMASK_BUILD_TYPE: main
          IS_TEST: true
          E2E: "true"
          IGNORE_BOXLOGS_DEVELOPMENT: true
          GITHUB_CI: "true"
          CI: "true"
          NODE_OPTIONS: "--max-old-space-size=8192"
          MM_UNIFIED_SWAPS_ENABLED: "true"
          MM_BRIDGE_ENABLED: "true"
          BRIDGE_USE_DEV_APIS: "true"
          RAMP_INTERNAL_BUILD: "true"
          SEEDLESS_ONBOARDING_ENABLED: "true"
          MM_NOTIFICATIONS_UI_ENABLED: "true"
          MM_SECURITY_ALERTS_API_ENABLED: "true"
          MM_REMOVE_GLOBAL_NETWORK_SELECTOR: "true"
          BLOCKAID_FILE_CDN: "static.cx.metamask.io/api/v1/confirmations/ppom"
          FEATURES_ANNOUNCEMENTS_ACCESS_TOKEN: ${{ secrets.FEATURES_ANNOUNCEMENTS_ACCESS_TOKEN }}
          FEATURES_ANNOUNCEMENTS_SPACE_ID: ${{ secrets.FEATURES_ANNOUNCEMENTS_SPACE_ID }}
          SEGMENT_WRITE_KEY_QA: ${{ secrets.SEGMENT_WRITE_KEY_QA }}
          SEGMENT_PROXY_URL_QA: ${{ secrets.SEGMENT_PROXY_URL_QA }}
          SEGMENT_DELETE_API_SOURCE_ID_QA: ${{ secrets.SEGMENT_DELETE_API_SOURCE_ID_QA }}
          SEGMENT_REGULATIONS_ENDPOINT_QA: ${{ secrets.SEGMENT_REGULATIONS_ENDPOINT_QA }}
          MM_SENTRY_DSN_TEST: ${{ secrets.MM_SENTRY_DSN_TEST }}
          MM_SENTRY_AUTH_TOKEN: ${{ secrets.MM_SENTRY_AUTH_TOKEN }}
          MAIN_IOS_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_IOS_GOOGLE_CLIENT_ID_UAT }}
          MAIN_IOS_GOOGLE_REDIRECT_URI_UAT: ${{ secrets.MAIN_IOS_GOOGLE_REDIRECT_URI_UAT }}
          MAIN_ANDROID_APPLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_APPLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT }}
          GOOGLE_SERVICES_B64_IOS: ${{ secrets.GOOGLE_SERVICES_B64_IOS }}
          GOOGLE_SERVICES_B64_ANDROID: ${{ secrets.GOOGLE_SERVICES_B64_ANDROID }}
          MM_INFURA_PROJECT_ID: ${{ secrets.MM_INFURA_PROJECT_ID }}

      - name: Update JS and Assets
        if: ${{ inputs.build_action == 'check_fingerprint' && steps.fingerprint-check.outputs.can_repack == 'true' }}
        id: update-js
        run: |
          yarn setup:github-ci --no-build-ios --no-build-android
          yarn build:js --platform android
          # Find the generated bundle (could be .js or .hbc with hash)
          BUNDLE=$(find dist/_expo/static/js/android -name "*.hbc" -o -name "*.js" | head -1)
          if [ -z "$BUNDLE" ]; then
            echo "Bundle not found in dist/_expo/static/js/android/"
            exit 1
          fi
          echo "Found bundle: $BUNDLE"
          echo "bundle_path=$BUNDLE" >> "$GITHUB_OUTPUT"

      - name: Repackage APK
        if: ${{ inputs.build_action == 'check_fingerprint' && steps.fingerprint-check.outputs.can_repack == 'true' }}
        run: |
          APK="android/app/build/outputs/apk/prod/release/app-prod-release.apk"
          BUNDLE="${{ steps.update-js.outputs.bundle_path }}"
          [ -f "$APK" ] || { echo "APK not found"; exit 1; }
          [ -f "$BUNDLE" ] || { echo "Bundle not found: $BUNDLE"; exit 1; }
          echo "📦 Repackaging APK with updated bundle..."
          npx --yes @expo/repack-app --input "$APK" --output "$APK" --bundle "$BUNDLE"

      # Save fingerprint after successful builds
      - name: Save build fingerprint
        if: ${{ inputs.build_action != 'check_fingerprint' || steps.fingerprint-check.outputs.can_repack == 'false' }}
        run: |
          FINGERPRINT=$(yarn -s fingerprint:generate)
          echo "$FINGERPRINT" > .app-native-fingerprint
          echo "Fingerprint saved: $FINGERPRINT"

      # Cache build artifacts
      - name: Cache build artifacts
        if: ${{ inputs.build_action != 'check_fingerprint' || steps.fingerprint-check.outputs.can_repack == 'false' }}
        uses: actions/cache@v4
        with:
          path: android/app/build/outputs/apk/prod/release/app-prod-release.apk
          key: android-apk-${{ github.event.pull_request.number || 'main' }}

      # Cache fingerprint for future comparisons
      - name: Cache fingerprint
        if: ${{ inputs.build_action != 'check_fingerprint' || steps.fingerprint-check.outputs.can_repack == 'false' }}
        uses: actions/cache@v4
        with:
          path: .app-native-fingerprint
          key: fingerprint-android-${{ github.event.pull_request.number || 'main' }}
      
      - name: Log Build Metrics
        if: always()
        run: |
          METHOD=$([[ "${{ inputs.build_action }}" == "check_fingerprint" && "${{ steps.fingerprint-check.outputs.can_repack }}" == "true" ]] && echo "repack" || echo "full")
          echo "Build method: $METHOD"
          echo "Action: ${{ inputs.build_action }}"

      - name: Upload Android APK
        id: upload-apk
        uses: actions/upload-artifact@v4
        with:
          name: app-prod-release.apk
          path: android/app/build/outputs/apk/prod/release/app-prod-release.apk
          retention-days: 7
          if-no-files-found: error

      - name: Upload Android Test APK
        id: upload-test-apk
        uses: actions/upload-artifact@v4
        with:
          name: app-prod-release-androidTest.apk
          path: android/app/build/outputs/apk/androidTest/prod/release/app-prod-release-androidTest.apk
          retention-days: 7
          if-no-files-found: error

      - name: Upload Android AAB
        id: upload-aab
        uses: actions/upload-artifact@v4
        with:
          name: app-prod-release.aab
          path: android/app/build/outputs/bundle/prodRelease/app-prod-release.aab
          retention-days: 7
          if-no-files-found: warn
        continue-on-error: true

      - name: Upload Android Source Map
        id: upload-sourcemap
        uses: actions/upload-artifact@v4
        with:
          name: index.android.bundle.map
          path: sourcemaps/android/index.android.bundle.map
          retention-days: 7
          if-no-files-found: warn
        continue-on-error: true
