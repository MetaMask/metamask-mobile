name: Create release bug report issue when release branch gets created

on: create

jobs:
  create-bug-report:
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from branch name if release branch
        id: extract_version
        run: |
          if [[ "$GITHUB_REF" == "refs/heads/release/"* ]]; then
            version="${GITHUB_REF#refs/heads/release/}"
            echo "New release branch($version), continue next steps"
            echo "version=$version" >> "$GITHUB_ENV"
          else
            echo "Not a release branch, skip next steps"
          fi

      - name: Create bug report issue on planning repo
        if: env.version
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/MetaMask/mobile-planning/issues
          owner: MetaMask
          title: v${{ env.version }} Bug Report
          body: |
            This bug report was automatically created by a GitHub action upon the creation of release branch `release/${{ env.version }}` (release cut).


            **Expected actions for release engineers:**

            1. Convert this issue into a Zenhub epic and link all bugs identified during the release regression testing phase to this epic.

            2. After completing the first regression run, move this epic to "Regression Completed" on the [Mobile Release Regression board](https://app.zenhub.com/workspaces/mobile-release-regression-6249e5242464b70013315a98/board?filterLogic=any&labels=release-${{ env.version }},release-task).


            Note that once the release is prepared for store submission, meaning the `release/${{ env.version }}` branch merges into `main`, another GitHub action will automatically close this epic.

          labels: |
            [
              "type-bug",
              "regression-RC",
              "release-${{ env.version }}"
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.BUG_REPORT_TOKEN }}
