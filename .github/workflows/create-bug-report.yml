name: Create release bug report issue when release branch gets created

on: create

jobs:
  create-bug-report:
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from branch name if release branch
        id: extract_version
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/heads/release/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            version="${GITHUB_REF#refs/heads/release/}"
            echo "New release branch($version), continue next steps"
            echo "version=$version" >> "$GITHUB_ENV"
          else
            echo "Not a release branch, skip next steps"
          fi

      - name: Create bug report issue on planning repo
        if: env.version
        run: |
          payload=$(cat <<EOF
          {
            "title": "v${{ env.version }} Bug Report",
            "body": "This bug report was automatically created by a GitHub action upon the creation of release branch \`release/${{ env.version }}\` (release cut).\n\n**Expected actions for release engineers:**\n\n1. Convert this issue into a Zenhub epic and link all bugs identified during the release regression testing phase to this epic.\n\n2. After completing the first regression run, move this epic to \"Regression Completed\" on the [Mobile Release Regression board](https://app.zenhub.com/workspaces/mobile-release-regression-6249e5242464b70013315a98/board?filterLogic=any&labels=release-${{ env.version }},release-task).\n\nNote that once the release is prepared for store submission, meaning the \`release/${{ env.version }}\` branch merges into \`main\`, another GitHub action will automatically close this epic.",
            "labels": ["type-bug", "regression-RC", "release-${{ env.version }}"]
          }
          EOF
          )
          curl -X POST \
            -H "Authorization: token ${{ secrets.BUG_REPORT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/MetaMask/mobile-planning/issues \
            -d "$payload"
