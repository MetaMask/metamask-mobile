# This workflow runs mobile E2E tests for a specific test category.
# It passes matrix sharding info to the test framework via environment variables.

name: Run E2E

on:
  workflow_call:
    inputs:
      test-suite-name:
        description: 'Name of the test suite'
        required: true
        type: string
      platform:
        description: 'Platform to test (ios or android)'
        required: true
        type: string
      test_suite_tag:
        description: 'The tests tag expression to use for filtering tests'
        required: true
        type: string
      split_number:
        description: 'Which split number to run (1-based index)'
        required: false
        type: number
        default: 1
      total_splits:
        description: 'Total number of splits to divide tests into'
        required: false
        type: number
        default: 1
      test-timeout-minutes:
        description: 'The timeout in minutes for the test command'
        required: false
        type: number
        default: 30
      build_type:
        description: 'The type of build to perform'
        required: false
        type: string
        default: 'main'
      metamask_environment:
        description: 'The environment to build for'
        required: false
        type: string
        default: 'e2e'
      changed_files:
        description: 'Changed files'
        required: false
        type: string
        default: ''

jobs:
  test-e2e-mobile:
    name: ${{ inputs.test-suite-name }}
    runs-on: ${{ inputs.platform == 'ios' && 'ghcr.io/cirruslabs/macos-runner:sequoia' || 'ghcr.io/cirruslabs/ubuntu-runner-amd64:24.04-lg' }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.platform }}-${{ inputs.test-suite-name }}-${{ inputs.split_number }}
      cancel-in-progress: ${{ !(contains(github.ref, 'refs/heads/main') || contains(github.ref, 'refs/heads/stable')) }}
    outputs:
      apk-target-path: ${{ steps.determine-target-paths.outputs.apk-target-path }}
      test-apk-target-path: ${{ steps.determine-target-paths.outputs.test-apk-target-path }}
      aab-target-path: ${{ steps.determine-target-paths.outputs.aab-target-path }}

    env:
      PREBUILT_IOS_APP_PATH: artifacts/MetaMask.app
      METAMASK_ENVIRONMENT: ${{ inputs.metamask_environment }}
      METAMASK_BUILD_TYPE: ${{ inputs.build_type }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PLATFORM: ${{ inputs.platform }}
      TEST_SUITE_TAG: ${{ inputs.test_suite_tag }}
      CHANGED_FILES: ${{ inputs.changed_files }}
      GITHUB_CI: 'true'
      SPLIT_NUMBER: ${{ inputs.split_number }}
      TOTAL_SPLITS: ${{ inputs.total_splits }}
      RAMP_INTERNAL_BUILD: 'true'
      BRIDGE_USE_DEV_APIS: 'true'
      MM_SECURITY_ALERTS_API_ENABLED: 'true'
      MM_NOTIFICATIONS_UI_ENABLED: 'true'
      FEATURES_ANNOUNCEMENTS_ACCESS_TOKEN: ${{ secrets.FEATURES_ANNOUNCEMENTS_ACCESS_TOKEN }}
      FEATURES_ANNOUNCEMENTS_SPACE_ID: ${{ secrets.FEATURES_ANNOUNCEMENTS_SPACE_ID }}
      MM_TEST_WALLET_SRP: ${{ secrets.MM_TEST_WALLET_SRP }}
      SEEDLESS_ONBOARDING_ENABLED: 'true'
      MM_REMOVE_GLOBAL_NETWORK_SELECTOR: 'true'
      SEGMENT_WRITE_KEY_QA: ${{ secrets.SEGMENT_WRITE_KEY_QA }}
      SEGMENT_PROXY_URL_QA: ${{ secrets.SEGMENT_PROXY_URL_QA }}
      SEGMENT_DELETE_API_SOURCE_ID_QA: ${{ secrets.SEGMENT_DELETE_API_SOURCE_ID_QA }}
      MAIN_IOS_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_IOS_GOOGLE_CLIENT_ID_UAT }}
      MAIN_IOS_GOOGLE_REDIRECT_URI_UAT: ${{ secrets.MAIN_IOS_GOOGLE_REDIRECT_URI_UAT }}
      MAIN_ANDROID_APPLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_APPLE_CLIENT_ID_UAT }}
      MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT }}
      MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT }}
      SEGMENT_REGULATIONS_ENDPOINT_QA: ${{ secrets.SEGMENT_REGULATIONS_ENDPOINT_QA }}
      MM_SENTRY_DSN_TEST: ${{ secrets.MM_SENTRY_DSN_TEST }}
      MM_SENTRY_AUTH_TOKEN: ${{ secrets.MM_SENTRY_AUTH_TOKEN }}
      GOOGLE_SERVICES_B64_IOS: ${{ secrets.GOOGLE_SERVICES_B64_IOS }}
      GOOGLE_SERVICES_B64_ANDROID: ${{ secrets.GOOGLE_SERVICES_B64_ANDROID }}
      MM_SOLANA_E2E_TEST_SRP: ${{ secrets.MM_SOLANA_E2E_TEST_SRP }}
      MM_INFURA_PROJECT_ID: ${{ secrets.MM_INFURA_PROJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'merge_group' && github.event.merge_group.head_sha || github.event.pull_request.head.sha || github.sha }}
          clean: true
          fetch-depth: 0

      - name: Install Android System Images
        if: ${{ inputs.platform == 'android' }}
        run: |
          echo "📱 Installing Android system images for E2E tests..."
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager "system-images;android-34;google_apis;x86_64"
          echo "✅ System images installed"

      - name: Set up E2E environment
        uses: MetaMask/github-tools/.github/actions/setup-e2e-env@b25992680136206307712003794b9fd73cce7502
        with:
          platform: ${{ inputs.platform }}
          setup-simulator: ${{ inputs.platform == 'ios' }}
          android-avd-name: emulator
          configure-keystores: false

      - name: Build Detox framework cache (iOS)
        if: ${{ inputs.platform == 'ios' }}
        run: |
          echo "Building Detox framework cache for iOS..."
          yarn detox clean-framework-cache
          yarn detox build-framework-cache

      - name: Determine android target paths and Artifact Names
        id: determine-target-paths
        if: ${{ inputs.platform == 'android' }}
        run: |
          if [[ "${{ inputs.build_type }}" == "flask" ]]; then
            {
              echo "apk-target-path=android/app/build/outputs/apk/flask/release"
              echo "test-apk-target-path=android/app/build/outputs/apk/androidTest/flask/release"
              echo "aab-target-path=android/app/build/outputs/bundle/flaskRelease"
              echo "artifact_name=app-flask-release"
            } >> "$GITHUB_OUTPUT"
          elif [[ "${{ inputs.build_type }}" == "main" ]]; then
            {
              echo "apk-target-path=android/app/build/outputs/apk/prod/release"
              echo "test-apk-target-path=android/app/build/outputs/apk/androidTest/prod/release"
              echo "aab-target-path=android/app/build/outputs/bundle/prodRelease"
              echo "artifact_name=app-prod-release"
            } >> "$GITHUB_OUTPUT"
          else
            echo "❌ Error: build_type ${{ inputs.build_type }} is not valid"
            exit 1
          fi

      - name: Setup Android artifacts from build job
        if: ${{ inputs.platform == 'android' }}
        run: |
          echo "🏗 Setting up Android artifacts from build job..."
          mkdir -p ${{ steps.determine-target-paths.outputs.apk-target-path }}
          mkdir -p ${{ steps.determine-target-paths.outputs.test-apk-target-path }}
          mkdir -p ${{ steps.determine-target-paths.outputs.aab-target-path }}

      - name: Download Android build artifacts
        if: ${{ inputs.platform == 'android' }}
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Move Android artifacts to expected locations
        if: ${{ inputs.platform == 'android' }}
        run: |
          # Copy from artifacts to expected locations
          # Each artifact is uploaded as a folder so we need to cp from inside the folder
          cp artifacts/${{ inputs.build_type }}-${{ inputs.metamask_environment }}-release.apk/${{ steps.determine-target-paths.outputs.artifact_name }}.apk ${{ steps.determine-target-paths.outputs.apk-target-path }}/${{ steps.determine-target-paths.outputs.artifact_name }}.apk
          cp artifacts/${{ inputs.build_type }}-${{ inputs.metamask_environment }}-release-androidTest.apk/${{ steps.determine-target-paths.outputs.artifact_name }}-androidTest.apk ${{ steps.determine-target-paths.outputs.test-apk-target-path }}/${{ steps.determine-target-paths.outputs.artifact_name }}-androidTest.apk
          echo "✅ Android artifacts ready for E2E tests"

      - name: Setup iOS artifacts from build job
        if: ${{ inputs.platform == 'ios' }}
        run: |
          echo "🏗 Setting up iOS artifacts from build job..."

          # Create required directories
          mkdir -p ios/build/Build/Products/Release-iphonesimulator/

      - name: Download iOS build artifacts
        if: ${{ inputs.platform == 'ios' }}
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: 🧪 Run E2E tests
        timeout-minutes: ${{ inputs.test-timeout-minutes }}
        run: |
          echo "Running ${{ inputs.test-suite-name }} tests on ${{ inputs.platform }}"
          echo "Running split ${{ inputs.split_number }} of ${{ inputs.total_splits }}"
          echo "Using TEST_SUITE_TAG: ${{ inputs.test_suite_tag }}"

          # Always use the splitting script (handles both split and non-split cases)
          node .github/scripts/e2e-split-tags-shards.mjs
        env:
          JOB_NAME: ${{ inputs.test-suite-name }}
          RUN_ID: ${{ github.run_id }}
          PR_NUMBER: ${{ github.event.pull_request.number || '' }}

      - name: Merge Detox JUnit reports
        if: always()
        continue-on-error: true
        run: |
          echo "📊 Merging Detox JUnit XML reports..."

          # Install xml2js for XML parsing (lightweight, no full yarn install needed)
          mkdir -p temp-deps && cd temp-deps
          npm init -y > /dev/null 2>&1
          npm install xml2js@0.6.2 --no-audit --no-fund --silent

          # Copy node_modules to workspace for script usage
          cp -r node_modules ${{ github.workspace }}/
          cd ${{ github.workspace }}

          # Run merge script
          node .github/scripts/e2e-merge-detox-junit-reports.mjs

          # Clean up temporary node_modules
          rm -rf node_modules temp-deps

      - name: Upload JUnit XML results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-e2e-${{ inputs.test-suite-name }}-junit-results
          path: e2e/reports/
          retention-days: 7

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-e2e-${{ inputs.test-suite-name }}-screenshots
          path: e2e/artifacts/
          retention-days: 7
