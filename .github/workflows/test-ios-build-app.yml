name: Test iOS Build QA App

on:
  push:

permissions:
  contents: write
  id-token: write

jobs:
  ios-build:
    name: Test iOS QA Build App
    runs-on: macos-15
    outputs:
      artifacts-url: ${{ steps.set-artifacts-url.outputs.artifacts-url }}
      ipa-uploaded: ${{ steps.upload-ipa.outcome == 'success' }}
      archive-uploaded: ${{ steps.upload-archive.outcome == 'success' }}
      sourcemap-uploaded: ${{ steps.upload-sourcemap.outcome == 'success' }}
    env:
      GITHUB_CI: "true"  # ✅ This ensures it's available during pod install
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Detect CPU architecture
        run: |
          echo "Arch: $(uname -m)"
          if [[ "$(uname -m)" == "x86_64" ]]; then
            echo "Detected Intel runner"
          else
            echo "Detected Apple Silicon runner"
          fi

      - name: Print system resources
        run: |
            echo "🧠 Memory info:"
            vm_stat
            echo ""
            echo "💻 CPU info:"
            sysctl -n hw.ncpu
            sysctl -n hw.memsize | awk '{ byte =$1 /1024/1024/1024; print byte " GB" }'
        shell: bash

      - name: Setup E2E iOS Environment
        uses: MetaMask/github-tools/.github/actions/setup-e2e-env@e2e-env-actions
        with:
          platform: ios
          setup-simulator: false

      - name: Print iOS tool versions
        run: |
            echo "🔧 Node.js Version:"
            node -v || echo "Node not found"
            echo "🧶 Yarn Version:"
            yarn -v || echo "Yarn not found"
            echo "📦 CocoaPods Version:"
            pod --version || echo "CocoaPods not found"
            echo "🛠️ Xcode Path:"
            xcode-select -p || echo "Xcode not found"
            echo "📱 Booted iOS Simulators:"
            xcrun simctl list | grep Booted || echo "No booted simulators found"
        shell: bash

      - name: Setup iOS Environment
        run: |
          echo "🚀 Building iOS APP..."
          yarn setup --build-on-github-ci --build-ios --no-build-android
          yarn build:ios:qa
        shell: bash
        env:
          PLATFORM: ios
          METAMASK_ENVIRONMENT: qa
          METAMASK_BUILD_TYPE: main
          IS_TEST: true
          IGNORE_BOXLOGS_DEVELOPMENT: true
          GITHUB_CI: "true"
          CI: "true"

          NODE_OPTIONS: "--max_old_space_size=4096"

          SEGMENT_WRITE_KEY_QA: ${{ secrets.SEGMENT_WRITE_KEY_QA }}
          SEGMENT_PROXY_URL_QA: ${{ secrets.SEGMENT_PROXY_URL_QA }}
          SEGMENT_DELETE_API_SOURCE_ID_QA: ${{ secrets.SEGMENT_DELETE_API_SOURCE_ID_QA }}
          SEGMENT_REGULATIONS_ENDPOINT_QA: ${{ secrets.SEGMENT_REGULATIONS_ENDPOINT_QA }}

          MM_SENTRY_DSN_TEST: ${{ secrets.MM_SENTRY_DSN_TEST }}
          MM_SENTRY_AUTH_TOKEN: ${{ secrets.MM_SENTRY_AUTH_TOKEN }}

          MAIN_IOS_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_IOS_GOOGLE_CLIENT_ID_UAT }}
          MAIN_IOS_GOOGLE_REDIRECT_URI_UAT: ${{ secrets.MAIN_IOS_GOOGLE_REDIRECT_URI_UAT }}
          MAIN_ANDROID_APPLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_APPLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_CLIENT_ID_UAT }}
          MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT: ${{ secrets.MAIN_ANDROID_GOOGLE_SERVER_CLIENT_ID_UAT }}
          GOOGLE_SERVICES_B64_IOS: ${{ secrets.GOOGLE_SERVICES_B64_IOS }}
          GOOGLE_SERVICES_B64_ANDROID: ${{ secrets.GOOGLE_SERVICES_B64_ANDROID }}

      - name: Upload iOS IPA Artifact
        id: upload-ipa
        uses: actions/upload-artifact@v4
        with:
          name: ios-app-qa
          path: ios/build/output/MetaMask-QA.ipa
          retention-days: 7
          if-no-files-found: error
        continue-on-error: true

      - name: Set Artifacts URL and Status
        id: set-artifacts-url
        run: |
          ARTIFACTS_URL="https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          echo "artifacts-url=${ARTIFACTS_URL}" >> $GITHUB_OUTPUT
          echo "📦 Artifacts available at: ${ARTIFACTS_URL}"
          echo ""
          echo "Upload Status Summary:"
          echo "-  IPA: ${{ steps.upload-ipa.outcome }}"

        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }} 