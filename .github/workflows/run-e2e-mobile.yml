# This workflow runs mobile E2E tests for a specific smoke test category.
# It passes matrix sharding info to the test framework via environment variables.

name: Test Mobile E2E Category

on:
  workflow_call:
    inputs:
      test-suite-name:
        description: 'Name of the test suite'
        required: true
        type: string
      smoke-category:
        description: 'Smoke test category (confirmations, trade, wallet-platform, etc.)'
        required: true
        type: string
      matrix-index:
        description: 'Matrix index for this test run'
        required: true
        type: number
      matrix-total:
        description: 'Total number of matrix entries'
        required: true
        type: number
      platform:
        description: 'Platform to test (ios or android)'
        required: true
        type: string

jobs:
  test-e2e-mobile:
    name: ${{ inputs.test-suite-name }}${{ inputs.matrix-total > 1 && format(' ({0})', inputs.matrix-index) || '' }}
    runs-on: macos-14-large
    env:
      METAMASK_ENVIRONMENT: 'local'
      METAMASK_BUILD_TYPE: 'main'
      MATRIX_INDEX: ${{ inputs.matrix-index }}
      MATRIX_TOTAL: ${{ inputs.matrix-total }}
      SMOKE_CATEGORY: ${{ inputs.smoke-category }}
      PLATFORM: ${{ inputs.platform }}
      JOB_NAME: ${{ inputs.test-suite-name }}${{ inputs.matrix-total > 1 && format(' ({0})', inputs.matrix-index) || '' }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up E2E environment
        uses: ./.github/actions/setup-e2e-env
        with:
          platform: ${{ inputs.platform }}
          setup-simulator: ${{ inputs.platform == 'ios' && 'true' || 'false' }}
          cache-unique-id: ${{ github.repository }}-${{ inputs.platform }}

      - name: Build E2E app
        run: |
          platform="${{ inputs.platform }}"
          
          # Set environment variables for build
          export METAMASK_ENVIRONMENT='local'
          export METAMASK_BUILD_TYPE='main'
          export IS_TEST='true'
          export IGNORE_BOXLOGS_DEVELOPMENT="true"
          
          echo "Building E2E app for $platform..."
          
          if [[ "$platform" == "ios" ]]; then
            yarn test:e2e:ios:build:qa-release
          else
            yarn test:e2e:android:build:qa-release
          fi

      - name: Run E2E tests
        run: |
          category="${{ inputs.smoke-category }}"
          platform="${{ inputs.platform }}"
          
          echo "Running $category smoke tests on $platform (shard ${{ inputs.matrix-index }}/${{ inputs.matrix-total }})"
          
          # Set TEST_SUITE_TAG based on category (matching Bitrise configuration)
          case "$category" in
            "confirmations")
              export TEST_SUITE_TAG="SmokeConfirmations "
              ;;
            "confirmations-redesigned")
              export TEST_SUITE_TAG="SmokeConfirmationsRedesigned"
              ;;
            "trade")
              export TEST_SUITE_TAG=".*SmokeTrade.*"
              ;;
            "network-expansion")
              export TEST_SUITE_TAG=".*NetworkExpansion.*"
              ;;
            "network-abstraction")
              export TEST_SUITE_TAG=".*SmokeNetworkAbstraction.*"
              ;;
            "wallet-platform")
              export TEST_SUITE_TAG=".*SmokeWalletPlatform.*"
              ;;
            "api-specs")
              if [[ "$platform" != "ios" ]]; then
                echo "API specs are iOS-only, skipping Android"
                exit 0
              fi
              yarn test:api-specs --retries 1
              exit 0
              ;;
            *)
              echo "Unknown smoke category: $category"
              exit 1
              ;;
          esac
          
          echo "Using TEST_SUITE_TAG: $TEST_SUITE_TAG"
          
          # Set environment variables needed for the script
          export METAMASK_ENVIRONMENT='local'
          export METAMASK_BUILD_TYPE='main'
          export IGNORE_BOXLOGS_DEVELOPMENT="true"
          
          # Use the same approach as Bitrise: run the tag script which calls the appropriate yarn command
          if [[ "$platform" == "ios" ]]; then
            export BITRISE_TRIGGERED_WORKFLOW_ID="ios_workflow"
            ./scripts/run-e2e-tags.sh
          else
            export BITRISE_TRIGGERED_WORKFLOW_ID="android_workflow"
            ./scripts/run-e2e-tags.sh
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.test-suite-name }}
          path: e2e/reports/
          retention-days: 7
