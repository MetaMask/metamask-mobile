name: iOS E2E Regression Tests

on:
  # schedule: # Currently disabled to fine-tune test suites
  #   - cron: '0 */3 * * *'  # Every 3 hours
  workflow_dispatch:
    inputs:
      notify_on_pass:
        description: 'Send Slack notification even when all tests pass'
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  build-ios-apps:
    name: 'Build iOS Apps'
    if: ${{ github.event_name != 'merge_group' }}
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/build-ios-e2e.yml
    secrets: inherit

  regression-confirmations-ios:
    name: 'Confirmations Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1, 2, 3, 4]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-confirmations-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionConfirmations'
      split_number: ${{ matrix.split }}
      total_splits: 4
    secrets: inherit

  regression-trade-ios:
    name: 'Trade Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1, 2, 3, 4]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-trade-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionTrade'
      split_number: ${{ matrix.split }}
      total_splits: 4
    secrets: inherit

  regression-wallet-platform-ios:
    name: 'Wallet Platform Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1, 2, 3, 4]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-wallet-platform-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionWalletPlatform'
      split_number: ${{ matrix.split }}
      total_splits: 4
    secrets: inherit

  regression-accounts-ios:
    name: 'Accounts Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1, 2, 3, 4]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-accounts-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionAccounts'
      split_number: ${{ matrix.split }}
      total_splits: 4
    secrets: inherit

  regression-network-abstraction-ios:
    name: 'Network Abstraction Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1, 2, 3, 4]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-network-abstraction-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionNetworkAbstractions'
      split_number: ${{ matrix.split }}
      total_splits: 4
    secrets: inherit

  regression-network-expansion-ios:
    name: 'Network Expansion Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1, 2, 3, 4]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-network-expansion-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionNetworkExpansion'
      split_number: ${{ matrix.split }}
      total_splits: 4
    secrets: inherit

  regression-assets-ios:
    name: 'Assets Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1, 2]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-assets-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionAssets'
      split_number: ${{ matrix.split }}
      total_splits: 2
    secrets: inherit

  regression-ux-ios:
    name: 'UX Regression (iOS) - ${{ matrix.split }}'
    needs: [build-ios-apps]
    strategy:
      matrix:
        split: [1]
      fail-fast: false
    uses: ./.github/workflows/run-e2e-workflow.yml
    with:
      test-suite-name: regression-ux-ios-${{ matrix.split }}
      platform: ios
      test_suite_tag: 'RegressionWalletUX'
      split_number: ${{ matrix.split }}
      total_splits: 1
    secrets: inherit

  report-ios-regression-tests:
    name: Report iOS Regression Tests
    runs-on: ubuntu-latest
    if: always()
    needs:
      - regression-confirmations-ios
      - regression-trade-ios
      - regression-wallet-platform-ios
      - regression-accounts-ios
      - regression-network-abstraction-ios
      - regression-network-expansion-ios
      - regression-assets-ios
      - regression-ux-ios

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all test results
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          path: all-test-results/
          pattern: '*-ios-*-test-results'

      - name: Post Test Report
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3
        with:
          name: 'iOS E2E Regression Test Results'
          path: 'all-test-results/**/*.xml'
          reporter: 'jest-junit'
          fail-on-error: false
          list-suites: 'failed'
          list-tests: 'failed'

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ios-merged-test-report
          path: all-test-results/**/*.xml

      - name: Generate Test Summary
        id: summary
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          EXIT_CODE=0
          {
            echo "summary<<EOF"
            node .github/scripts/generate-regression-slack-summary.mjs iOS || EXIT_CODE=$?
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
          exit $EXIT_CODE

      - name: Prepare Slack Payload
        if: always() && (steps.summary.outcome == 'failure' || inputs.notify_on_pass == true)
        run: |
          node -e "
          const fs = require('fs');
          const message = \`${{ steps.summary.outputs.summary }}\`;
          const payload = {
            text: 'iOS E2E Regression Test Results',
            blocks: [
              {
                type: 'section',
                text: {
                  type: 'mrkdwn',
                  text: message
                }
              }
            ]
          };
          fs.writeFileSync('/tmp/slack-payload.json', JSON.stringify(payload, null, 2));
          "

      - name: Send Slack Notification
        if: always() && (steps.summary.outcome == 'failure' || inputs.notify_on_pass == true)
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a
        with:
          webhook: ${{ secrets.REGRESSION_E2E_SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload-file-path: /tmp/slack-payload.json
