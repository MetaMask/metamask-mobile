/**
 * Mock response data for Polymarket RPC calls
 * Contains mock responses for blockchain interactions
 */

import {
  PROXY_WALLET_ADDRESS,
  USER_WALLET_ADDRESS,
  MOCK_USDC_BALANCE_WEI,
  POST_CLAIM_USDC_BALANCE_WEI,
  SAFE_FACTORY_ADDRESS,
  USDC_CONTRACT_ADDRESS,
  MULTICALL_CONTRACT_ADDRESS,
  CONDITIONAL_TOKENS_CONTRACT_ADDRESS,
} from './polymarket-constants';

export const MOCK_RPC_RESPONSES = {
  // Safe Factory call - return proxy wallet address (should be PROXY_WALLET_ADDRESS, not USER_WALLET_ADDRESS)
  SAFE_FACTORY_RESULT:
    '0x000000000000000000000000' + PROXY_WALLET_ADDRESS.slice(2).toLowerCase(),

  // USDC contract call - return mock balance
  USDC_BALANCE_RESULT: MOCK_USDC_BALANCE_WEI,

  // Post-claim USDC balance (48.16 USDC = 48,160,000 = 0x2de0300)
  POST_CLAIM_USDC_BALANCE_RESULT: POST_CLAIM_USDC_BALANCE_WEI,

  EMPTY_RESULT: '0x',

  // Mock approval result (true)
  APPROVAL_RESULT:
    '0x0000000000000000000000000000000000000000000000000000000000000001',

  BLOCK_NUMBER_RESULT: '0x1234567',

  ETH_BALANCE_RESULT: '0xde0b6b3a7640000',

  // Mock contract code for deployed contracts
  CONTRACT_CODE_RESULT: '0x608060405234801561001057600080fd5b50',
};

// Re-export for backward compatibility
export {
  USER_WALLET_ADDRESS,
  MOCK_USDC_BALANCE_WEI,
  POST_CLAIM_USDC_BALANCE_WEI,
  SAFE_FACTORY_ADDRESS,
  USDC_CONTRACT_ADDRESS,
  MULTICALL_CONTRACT_ADDRESS,
  CONDITIONAL_TOKENS_CONTRACT_ADDRESS,
};
