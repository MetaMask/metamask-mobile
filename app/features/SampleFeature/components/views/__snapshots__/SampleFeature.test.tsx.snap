// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SampleFeature matches rendered snapshot when feature flag is disabled 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentInset={
    {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardShouldPersistTaps="always"
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  resetScrollToCoords={
    {
      "x": 0,
      "y": 0,
    }
  }
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
        "padding": 24,
        "paddingBottom": 48,
      },
    ]
  }
  testID="sample-feature-container"
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <Text
      accessibilityRole="text"
      style={
        {
          "color": "#121314",
          "fontFamily": "Geist Bold",
          "fontSize": 24,
          "letterSpacing": 0,
          "lineHeight": 32,
          "marginTop": 16,
        }
      }
    >
      Sample Feature
    </Text>
    <Text
      accessibilityRole="text"
      style={
        {
          "color": "#686e7d",
          "fontFamily": "Geist Regular",
          "fontSize": 16,
          "letterSpacing": 0,
          "lineHeight": 24,
          "marginTop": 8,
        }
      }
    >
      This is a screen demonstrating how to build a sample feature end-to-end in MetaMask.
    </Text>
    <View
      testID="mocked-sample-network-display"
    />
    <View
      testID="mocked-sample-pet-names"
    />
  </View>
</RCTScrollView>
`;

exports[`SampleFeature matches rendered snapshot when feature flag is enabled 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentInset={
    {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardShouldPersistTaps="always"
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  resetScrollToCoords={
    {
      "x": 0,
      "y": 0,
    }
  }
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
        "padding": 24,
        "paddingBottom": 48,
      },
    ]
  }
  testID="sample-feature-container"
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <Text
      accessibilityRole="text"
      style={
        {
          "color": "#121314",
          "fontFamily": "Geist Bold",
          "fontSize": 24,
          "letterSpacing": 0,
          "lineHeight": 32,
          "marginTop": 16,
        }
      }
    >
      Sample Feature
    </Text>
    <Text
      accessibilityRole="text"
      style={
        {
          "color": "#686e7d",
          "fontFamily": "Geist Regular",
          "fontSize": 16,
          "letterSpacing": 0,
          "lineHeight": 24,
          "marginTop": 8,
        }
      }
    >
      This is a screen demonstrating how to build a sample feature end-to-end in MetaMask.
    </Text>
    <View
      testID="mocked-sample-network-display"
    />
    <View
      testID="mocked-sample-counter-pane"
    />
    <View
      testID="mocked-sample-pet-names"
    />
  </View>
</RCTScrollView>
`;
