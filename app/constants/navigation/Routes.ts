const Routes = {
  WALLET_VIEW: 'WalletView',
  BROWSER_TAB_HOME: 'BrowserTabHome',
  BROWSER_VIEW: 'BrowserView',
  SETTINGS_VIEW: 'SettingsView',
  DEPRECATED_NETWORK_DETAILS: 'DeprecatedNetworkDetails',
  RAMP: {
    ID: 'Ramp',
    BUY: 'RampBuy',
    SELL: 'RampSell',
    GET_STARTED: 'GetStarted',
    BUILD_QUOTE: 'BuildQuote',
    BUILD_QUOTE_HAS_STARTED: 'BuildQuoteHasStarted',
    QUOTES: 'Quotes',
    CHECKOUT: 'Checkout',
    REGION: 'Region',
    REGION_HAS_STARTED: 'RegionHasStarted',
    NETWORK_SWITCHER: 'BuyNetworkSwitcher',
    ORDER_DETAILS: 'OrderDetails',
    SEND_TRANSACTION: 'SendTransaction',
    SETTINGS: 'RampSettings',
    ACTIVATION_KEY_FORM: 'RampActivationKeyForm',
  },
  HW: {
    CONNECT: 'ConnectHardwareWalletFlow',
    SELECT_DEVICE: 'SelectHardwareWallet',
    CONNECT_QR_DEVICE: 'ConnectQRHardwareFlow',
    CONNECT_LEDGER: 'ConnectLedgerFlow',
    LEDGER_CONNECT: 'LedgerConnect',
  },
  LEDGER_MESSAGE_SIGN_MODAL: 'LedgerMessageSignModal',
  LEDGER_TRANSACTION_MODAL: 'LedgerTransactionModal',
  QR_TAB_SWITCHER: 'QRTabSwitcher',
  OPTIONS_SHEET: 'OptionsSheet',
  QR_SCANNER: 'QRScanner',
  TRANSACTIONS_VIEW: 'TransactionsView',
  MODAL: {
    DELETE_WALLET: 'DeleteWalletModal',
    ROOT_MODAL_FLOW: 'RootModalFlow',
    MODAL_CONFIRMATION: 'ModalConfirmation',
    MODAL_MANDATORY: 'ModalMandatory',
    WHATS_NEW: 'WhatsNewModal',
    TURN_OFF_REMEMBER_ME: 'TurnOffRememberMeModal',
    UPDATE_NEEDED: 'UpdateNeededModal',
    ENABLE_AUTOMATIC_SECURITY_CHECKS: 'EnableAutomaticSecurityChecksModal',
    DETECTED_TOKENS: 'DetectedTokens',
    SRP_REVEAL_QUIZ: 'SRPRevealQuiz',
    WALLET_ACTIONS: 'WalletActions',
    NFT_AUTO_DETECTION_MODAL: 'NFTAutoDetectionModal',
    MULTI_RPC_MIGRATION_MODAL: 'MultiRPcMigrationModal',
    MAX_BROWSER_TABS_MODAL: 'MaxBrowserTabsModal',
  },
  ONBOARDING: {
    ROOT_NAV: 'OnboardingRootNav',
    SUCCESS_FLOW: 'OnboardingSuccessFlow',
    SUCCESS: 'OnboardingSuccess',
    DEFAULT_SETTINGS: 'DefaultSettings',
    GENERAL_SETTINGS: 'GeneralSettings',
    ASSETS_SETTINGS: 'AssetsSettings',
    SECURITY_SETTINGS: 'SecuritySettings',
    HOME_NAV: 'HomeNav',
    ONBOARDING: 'Onboarding',
    LOGIN: 'Login',
    NAV: 'OnboardingNav',
    MANUAL_BACKUP: {
      STEP_1: 'ManualBackupStep1',
      STEP_2: 'ManualBackupStep2',
      STEP_3: 'ManualBackupStep3',
    },
    IMPORT_FROM_SECRET_RECOVERY_PHRASE: 'ImportFromSecretRecoveryPhrase',
    CHOOSE_PASSWORD: 'ChoosePassword',
  },
  SEND_FLOW: {
    SEND_TO: 'SendTo',
    AMOUNT: 'Amount',
    CONFIRM: 'Confirm',
  },
  ACCOUNT_BACKUP: {
    STEP_1_B: 'AccountBackupStep1B',
  },
  SETTINGS: {
    ADVANCED_SETTINGS: 'AdvancedSettings',
    CHANGE_PASSWORD: 'ResetPassword',
    CONTACT_FORM: 'ContactForm',
    DEVELOPER_OPTIONS: 'DeveloperOptions',
    EXPERIMENTAL_SETTINGS: 'ExperimentalSettings',
    NOTIFICATIONS: 'NotificationsSettings',
    REVEAL_PRIVATE_CREDENTIAL: 'RevealPrivateCredentialView',
    SDK_SESSIONS_MANAGER: 'SDKSessionsManager',
    PASSWORD_HINT: 'PasswordHint',
    BACKUP_AND_SYNC: 'BackupAndSyncSettings',
  },
  SHEET: {
    ACCOUNT_SELECTOR: 'AccountSelector',
    ADD_ACCOUNT: 'AddAccount',
    AMBIGUOUS_ADDRESS: 'AmbiguousAddress',
    BASIC_FUNCTIONALITY: 'BasicFunctionality',
    CONFIRM_TURN_ON_BACKUP_AND_SYNC: 'ConfirmTurnOnBackupAndSync',
    RESET_NOTIFICATIONS: 'ResetNotifications',
    SDK_LOADING: 'SDKLoading',
    SDK_FEEDBACK: 'SDKFeedback',
    DATA_COLLECTION: 'DataCollection',
    EXPERIENCE_ENHANCER: 'ExperienceEnhancer',
    SDK_MANAGE_CONNECTIONS: 'SDKManageConnections',
    SDK_DISCONNECT: 'SDKDisconnect',
    ACCOUNT_CONNECT: 'AccountConnect',
    ACCOUNT_PERMISSIONS: 'AccountPermissions',
    REVOKE_ALL_ACCOUNT_PERMISSIONS: 'RevokeAllAccountPermissions',
    CONNECTION_DETAILS: 'ConnectionDetails',
    PERMITTED_NETWORKS_INFO_SHEET: 'PermittedNetworksInfoSheet',
    NETWORK_SELECTOR: 'NetworkSelector',
    RETURN_TO_DAPP_MODAL: 'ReturnToDappModal',
    ACCOUNT_ACTIONS: 'AccountActions',
    FIAT_ON_TESTNETS_FRICTION: 'SettingsAdvancedFiatOnTestnetsFriction',
    SHOW_IPFS: 'ShowIpfs',
    SHOW_NFT_DISPLAY_MEDIA: 'ShowNftDisplayMedia',
    SHOW_TOKEN_ID: 'ShowTokenId',
    ORIGIN_SPAM_MODAL: 'OriginSpamModal',
    TOOLTIP_MODAL: 'tooltipModal',
    TOKEN_SORT: 'TokenSort',
    TOKEN_FILTER: 'TokenFilter',
    CHANGE_IN_SIMULATION_MODAL: 'ChangeInSimulationModal',
    ///: BEGIN:ONLY_INCLUDE_IF(multi-srp)
    SELECT_SRP: 'SelectSRP',
    ///: END:ONLY_INCLUDE_IF
    SEEDPHRASE_MODAL: 'SeedphraseModal',
    SKIP_ACCOUNT_SECURITY_MODAL: 'SkipAccountSecurityModal',
    SUCCESS_ERROR_SHEET: 'SuccessErrorSheet',
  },
  BROWSER: {
    HOME: 'BrowserTabHome',
    VIEW: 'BrowserView',
    ASSET_LOADER: 'AssetLoader',
    ASSET_VIEW: 'AssetView',
  },
  WEBVIEW: {
    MAIN: 'Webview',
    SIMPLE: 'SimpleWebview',
  },
  WALLET: {
    HOME: 'WalletTabHome',
    TAB_STACK_FLOW: 'WalletTabStackFlow',
    WALLET_CONNECT_SESSIONS_VIEW: 'WalletConnectSessionsView',
  },
  VAULT_RECOVERY: {
    RESTORE_WALLET: 'RestoreWallet',
    WALLET_RESTORED: 'WalletRestored',
    WALLET_RESET_NEEDED: 'WalletResetNeeded',
  },
  ADD_NETWORK: 'AddNetwork',
  EDIT_NETWORK: 'EditNetwork',
  SWAPS: 'Swaps',
  SWAPS_AMOUNT_VIEW: 'SwapsAmountView',
  BRIDGE: {
    ROOT: 'Bridge',
    MODALS: {
      ROOT: 'BridgeModals',
      SOURCE_TOKEN_SELECTOR: 'BridgeSourceTokenSelector',
      SOURCE_NETWORK_SELECTOR: 'BridgeSourceNetworkSelector',
      SLIPPAGE_MODAL: 'SlippageModal',
      DEST_TOKEN_SELECTOR: 'BridgeDestTokenSelector',
      DEST_NETWORK_SELECTOR: 'BridgeDestNetworkSelector',
      QUOTE_INFO_MODAL: 'QuoteInfoModal',
      TRANSACTION_DETAILS_BLOCK_EXPLORER: 'TransactionDetailsBlockExplorer',
      QUOTE_EXPIRED_MODAL: 'QuoteExpiredModal',
    },
    BRIDGE_TRANSACTION_DETAILS: 'BridgeTransactionDetails',
  },
  LOCK_SCREEN: 'LockScreen',
  CONFIRMATION_REQUEST_FLAT: 'ConfirmationRequestFlat',
  CONFIRMATION_REQUEST_MODAL: 'ConfirmationRequestModal',
  CONFIRMATION_SWITCH_ACCOUNT_TYPE: 'ConfirmationSwitchAccountType',
  NOTIFICATIONS: {
    VIEW: 'NotificationsView',
    OPT_IN: 'OptIn',
    OPT_IN_STACK: 'OptInStack',
    DETAILS: 'NotificationsDetails',
  },
  STAKING: {
    STAKE: 'Stake',
    STAKE_CONFIRMATION: 'StakeConfirmation',
    UNSTAKE: 'Unstake',
    UNSTAKE_CONFIRMATION: 'UnstakeConfirmation',
    EARNINGS_HISTORY: 'EarningsHistory',
    CLAIM: 'Claim',
    MODALS: {
      LEARN_MORE: 'LearnMore',
      MAX_INPUT: 'MaxInput',
      GAS_IMPACT: 'GasImpact',
      EARN_TOKEN_LIST: 'EarnTokenList',
    },
  },
  STANDALONE_CONFIRMATIONS: {
    STAKE_DEPOSIT: 'RedesignedStakeDeposit',
    STAKE_WITHDRAWAL: 'RedesignedStakeWithdrawal',
    STAKE_CLAIM: 'RedesignedStakeClaim',
    TRANSFER: 'RedesignedTransfer',
  },
  IDENTITY: {
    TURN_ON_BACKUP_AND_SYNC: 'TurnOnBackupAndSync',
  },
  ///: BEGIN:ONLY_INCLUDE_IF(multi-srp)
  MULTI_SRP: {
    IMPORT: 'ImportSRPView',
  },
  ///: END:ONLY_INCLUDE_IF
  ///: BEGIN:ONLY_INCLUDE_IF(external-snaps)
  SNAPS: {
    SNAPS_SETTINGS_LIST: 'SnapsSettingsList',
    SNAP_SETTINGS: 'SnapSettings',
  },
  ///: END:ONLY_INCLUDE_IF
  FOX_LOADER: 'FoxLoader',
  SEEDPHRASE_MODAL: 'SeedphraseModal',
  SET_PASSWORD_FLOW: 'SetPasswordFlow',
  EDIT_ACCOUNT_NAME: 'EditAccountName',
};

export default Routes;
