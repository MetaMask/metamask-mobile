// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BridgeDestNetworkSelector renders with initial state and displays networks 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                BridgeDestNetworkSelector
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        pointerEvents="box-none"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      onLayout={[Function]}
                      style={
                        [
                          {
                            "bottom": 0,
                            "justifyContent": "flex-end",
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          {
                            "paddingBottom": 0,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "backgroundColor": "#00000066",
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            {
                              "opacity": 0,
                            },
                          ]
                        }
                      >
                        <TouchableOpacity
                          onPress={[Function]}
                          style={
                            {
                              "flex": 1,
                            }
                          }
                        />
                      </View>
                      <View
                        onLayout={[Function]}
                        style={
                          [
                            {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                            },
                            {
                              "paddingBottom": 0,
                            },
                          ]
                        }
                      >
                        <View
                          collapsable={false}
                          onGestureHandlerEvent={[Function]}
                          onGestureHandlerStateChange={[Function]}
                          onLayout={[Function]}
                          style={
                            [
                              {
                                "backgroundColor": "#ffffff",
                                "borderColor": "#b7bbc866",
                                "borderTopLeftRadius": 8,
                                "borderTopRightRadius": 8,
                                "borderWidth": 1,
                                "height": 1334,
                                "maxHeight": 1334,
                                "overflow": "hidden",
                                "paddingBottom": 0,
                                "shadowColor": "#0000001a",
                                "shadowOffset": {
                                  "height": 2,
                                  "width": 0,
                                },
                                "shadowOpacity": 1,
                                "shadowRadius": 40,
                              },
                              {
                                "transform": [
                                  {
                                    "translateY": 1334,
                                  },
                                ],
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "padding": 4,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "backgroundColor": "#b7bbc866",
                                  "borderRadius": 2,
                                  "height": 4,
                                  "width": 40,
                                }
                              }
                            />
                          </View>
                          <View
                            style={
                              [
                                {},
                                {
                                  "backgroundColor": "#ffffff",
                                  "flex": 1,
                                },
                              ]
                            }
                          >
                            <View
                              gap={4}
                              style={
                                [
                                  {
                                    "gap": 4,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "backgroundColor": "#ffffff",
                                      "flexDirection": "row",
                                      "padding": 16,
                                    },
                                    false,
                                  ]
                                }
                                testID="header"
                              >
                                <View
                                  style={
                                    {
                                      "width": undefined,
                                    }
                                  }
                                >
                                  <View
                                    onLayout={[Function]}
                                  />
                                </View>
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flex": 1,
                                      "marginHorizontal": 16,
                                    }
                                  }
                                >
                                  <View
                                    alignItems="center"
                                    flexDirection="row"
                                    justifyContent="center"
                                    style={
                                      [
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                          "justifyContent": "center",
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    <Text
                                      accessibilityRole="text"
                                      style={
                                        {
                                          "color": "#121314",
                                          "flex": 1,
                                          "fontFamily": "CentraNo1-Bold",
                                          "fontSize": 18,
                                          "fontWeight": "700",
                                          "letterSpacing": 0,
                                          "lineHeight": 24,
                                          "textAlign": "center",
                                        }
                                      }
                                    >
                                      Select network
                                    </Text>
                                    <View
                                      style={
                                        [
                                          {},
                                          [
                                            {
                                              "position": "absolute",
                                              "right": 0,
                                            },
                                            {
                                              "padding": 8,
                                            },
                                          ],
                                        ]
                                      }
                                    >
                                      <TouchableOpacity
                                        onPress={[Function]}
                                        testID="bridge-network-selector-close-button"
                                      >
                                        <SvgMock
                                          color="#121314"
                                          height={16}
                                          name="Close"
                                          style={
                                            {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                          width={16}
                                        />
                                      </TouchableOpacity>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  style={
                                    {
                                      "width": undefined,
                                    }
                                  }
                                >
                                  <View
                                    onLayout={[Function]}
                                  />
                                </View>
                              </View>
                            </View>
                            <View
                              style={
                                [
                                  {},
                                  {
                                    "backgroundColor": "#ffffff",
                                    "flex": 1,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  [
                                    {},
                                    {
                                      "padding": 8,
                                    },
                                  ]
                                }
                              >
                                <TouchableOpacity
                                  onPress={[Function]}
                                >
                                  <View
                                    accessibilityRole="none"
                                    accessible={true}
                                    style={
                                      {
                                        "padding": 16,
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        }
                                      }
                                    >
                                      <View
                                        alignItems="center"
                                        flexDirection="row"
                                        style={
                                          [
                                            {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                            {
                                              "flex": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <View
                                          alignItems="center"
                                          flexDirection="row"
                                          gap={8}
                                          style={
                                            [
                                              {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                                "gap": 8,
                                              },
                                              {
                                                "flex": 1,
                                              },
                                            ]
                                          }
                                        >
                                          <View
                                            style={
                                              {
                                                "alignItems": "center",
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 8,
                                                "height": 32,
                                                "justifyContent": "center",
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={1}
                                              style={
                                                {
                                                  "height": 32,
                                                  "width": 32,
                                                }
                                              }
                                              testID="network-avatar-image"
                                            />
                                          </View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#121314",
                                                "fontFamily": "CentraNo1-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Ethereum Mainnet
                                          </Text>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </TouchableOpacity>
                                <TouchableOpacity
                                  onPress={[Function]}
                                >
                                  <View
                                    accessibilityRole="none"
                                    accessible={true}
                                    style={
                                      {
                                        "padding": 16,
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        }
                                      }
                                    >
                                      <View
                                        alignItems="center"
                                        flexDirection="row"
                                        style={
                                          [
                                            {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                            {
                                              "flex": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <View
                                          alignItems="center"
                                          flexDirection="row"
                                          gap={8}
                                          style={
                                            [
                                              {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                                "gap": 8,
                                              },
                                              {
                                                "flex": 1,
                                              },
                                            ]
                                          }
                                        >
                                          <View
                                            style={
                                              {
                                                "alignItems": "center",
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 8,
                                                "height": 32,
                                                "justifyContent": "center",
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={1}
                                              style={
                                                {
                                                  "height": 32,
                                                  "width": 32,
                                                }
                                              }
                                              testID="network-avatar-image"
                                            />
                                          </View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#121314",
                                                "fontFamily": "CentraNo1-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Optimism
                                          </Text>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </TouchableOpacity>
                                <TouchableOpacity
                                  onPress={[Function]}
                                >
                                  <View
                                    accessibilityRole="none"
                                    accessible={true}
                                    style={
                                      {
                                        "padding": 16,
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        }
                                      }
                                    >
                                      <View
                                        alignItems="center"
                                        flexDirection="row"
                                        style={
                                          [
                                            {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                            },
                                            {
                                              "flex": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <View
                                          alignItems="center"
                                          flexDirection="row"
                                          gap={8}
                                          style={
                                            [
                                              {
                                                "alignItems": "center",
                                                "flexDirection": "row",
                                                "gap": 8,
                                              },
                                              {
                                                "flex": 1,
                                              },
                                            ]
                                          }
                                        >
                                          <View
                                            style={
                                              {
                                                "alignItems": "center",
                                                "backgroundColor": "#ffffff",
                                                "borderRadius": 8,
                                                "height": 32,
                                                "justifyContent": "center",
                                                "overflow": "hidden",
                                                "width": 32,
                                              }
                                            }
                                          >
                                            <Image
                                              onError={[Function]}
                                              resizeMode="contain"
                                              source={1}
                                              style={
                                                {
                                                  "height": 32,
                                                  "width": 32,
                                                }
                                              }
                                              testID="network-avatar-image"
                                            />
                                          </View>
                                          <Text
                                            accessibilityRole="text"
                                            style={
                                              {
                                                "color": "#121314",
                                                "fontFamily": "CentraNo1-Medium",
                                                "fontSize": 16,
                                                "fontWeight": "500",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                              }
                                            }
                                          >
                                            Base
                                          </Text>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </TouchableOpacity>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
