// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TransactionEdit should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <ActionView
    cancelTestID=""
    cancelText="Cancel"
    confirmButtonMode="normal"
    confirmTestID=""
    confirmText="Next"
    confirmed={false}
    onConfirmPress={[Function]}
    showCancelButton={true}
    showConfirmButton={true}
  >
    <View
      style={
        Object {
          "flex": 1,
          "flexDirection": "column",
          "padding": 16,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "left": 15,
              "marginRight": 0,
              "marginTop": 30,
              "position": "absolute",
              "right": 15,
              "zIndex": 5,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 0,
              "paddingRight": 18,
              "width": 106,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7e84",
                "fontFamily": "Roboto",
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          >
            From
            :
          </Text>
        </View>
        <Connect(AccountSelect)
          enabled={false}
          onChange={[Function]}
          value="0x1"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "marginTop": 18,
              "zIndex": 3,
            },
            Object {
              "left": 15,
              "marginTop": 190,
              "position": "absolute",
              "right": 15,
              "zIndex": 4,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 0,
              "paddingRight": 18,
              "width": 106,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7e84",
                "fontFamily": "Roboto",
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          >
            Amount
            :
          </Text>
          <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
          >
            <Text
              style={
                Object {
                  "color": "#008edf",
                  "fontFamily": "Roboto",
                  "fontSize": 12,
                  "fontWeight": "600",
                  "paddingTop": 6,
                }
              }
            >
              Max
            </Text>
          </TouchableOpacity>
        </View>
        <Connect(EthInput)
          fillMax={false}
          onChange={[Function]}
          updateFillMax={[Function]}
          value=""
        />
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "left": 15,
              "marginTop": 120,
              "position": "absolute",
              "right": 15,
              "zIndex": 4,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 0,
              "paddingRight": 18,
              "width": 106,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7e84",
                "fontFamily": "Roboto",
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          >
            To
            :
          </Text>
        </View>
        <Connect(AccountInput)
          address="0x2"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Recipient Address"
          showQRScanner={[Function]}
          updateToAddressError={[Function]}
        />
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "marginTop": 18,
              "zIndex": 3,
            },
            Object {
              "marginTop": 240,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 0,
              "paddingRight": 18,
              "width": 106,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7e84",
                "fontFamily": "Roboto",
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          >
            Transaction Fee
            :
          </Text>
        </View>
        <Connect(CustomGas)
          gas=""
          gasPrice=""
          handleGasFeeSelection={[Function]}
          totalGas={"14a"}
        />
      </View>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "marginTop": 18,
              "zIndex": 3,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 0,
              "paddingRight": 18,
              "width": 106,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#7c7e84",
                "fontFamily": "Roboto",
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          >
            Hex Data
            :
          </Text>
        </View>
        <TextInput
          allowFontScaling={true}
          multiline={true}
          onChangeText={[Function]}
          placeholder="Optional"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#dedede",
              "borderRadius": 4,
              "borderWidth": 1,
              "flex": 1,
              "fontFamily": "Roboto",
              "fontSize": 16,
              "fontWeight": "600",
              "minHeight": 64,
              "paddingLeft": 10,
              "paddingVertical": 6,
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
  </ActionView>
</View>
`;
