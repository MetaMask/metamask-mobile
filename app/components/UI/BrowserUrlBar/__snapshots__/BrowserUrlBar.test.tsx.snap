// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BrowserUrlBar render matches snapshot when focused 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#f3f5f9",
        "borderRadius": 999,
        "flex": 1,
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
    testID="url-input"
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        keyboardAppearance="light"
        keyboardType="web-search"
        numberOfLines={1}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search by token, site or address"
        placeholderTextColor="#b7bbc8"
        returnKeyType="go"
        selectTextOnFocus={true}
        style={
          [
            {
              "color": "#121314",
              "flex": 1,
              "fontFamily": "Geist Regular",
              "fontSize": 14,
              "height": 44,
              "margin": 0,
              "paddingLeft": 16,
              "paddingVertical": 0,
            },
            false,
          ]
        }
        testID="browser-modal-url-input"
      />
      <Text
        accessibilityRole="text"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        ellipsizeMode="head"
        focusable={true}
        numberOfLines={1}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "color": "#121314",
            "fontFamily": "Geist Regular",
            "fontSize": 14,
            "letterSpacing": 0,
            "lineHeight": 24,
            "opacity": 0,
            "position": "absolute",
          }
        }
      >
        https://example.com
      </Text>
    </View>
    <TouchableOpacity
      accessible={true}
      activeOpacity={1}
      disabled={false}
      hitSlop={
        {
          "bottom": 8,
          "left": 8,
          "right": 8,
          "top": 8,
        }
      }
      onPress={[Function]}
      onPressIn={[Function]}
      onPressOut={[Function]}
      style={
        {
          "alignItems": "center",
          "borderRadius": 8,
          "height": 28,
          "justifyContent": "center",
          "marginLeft": 4,
          "marginRight": 8,
          "opacity": 1,
          "width": 28,
        }
      }
      testID="url-clear-icon"
    >
      <SvgMock
        color="#686e7d"
        fill="currentColor"
        height={20}
        name="CircleX"
        style={
          {
            "height": 20,
            "width": 20,
          }
        }
        width={20}
      />
    </TouchableOpacity>
  </View>
  <View
    style={
      {
        "height": 50,
        "justifyContent": "center",
      }
    }
  >
    <TouchableOpacity
      hitSlop={
        {
          "bottom": 12,
          "left": 12,
          "right": 12,
          "top": 12,
        }
      }
      onPress={[Function]}
      style={
        {
          "justifyContent": "center",
          "marginRight": 16,
        }
      }
      testID="cancel-url-button"
    >
      <Text
        accessibilityRole="text"
        style={
          {
            "color": "#4459ff",
            "fontFamily": "Geist Regular",
            "fontSize": 14,
            "letterSpacing": 0,
            "lineHeight": 24,
          }
        }
      >
        Cancel
      </Text>
    </TouchableOpacity>
  </View>
</View>
`;

exports[`BrowserUrlBar render matches snapshot when not focused 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderRadius": 999,
        "flex": 1,
        "flexDirection": "row",
        "marginHorizontal": 16,
      }
    }
    testID="url-input"
  >
    <SvgMock
      color="#686e7d"
      fill="currentColor"
      height={16}
      name="Lock"
      style={
        {
          "height": 16,
          "marginRight": 8,
          "width": 16,
        }
      }
      width={16}
    />
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        keyboardAppearance="light"
        keyboardType="web-search"
        numberOfLines={1}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search by token, site or address"
        placeholderTextColor="#b7bbc8"
        returnKeyType="go"
        selectTextOnFocus={true}
        style={
          [
            {
              "color": "#121314",
              "flex": 1,
              "fontFamily": "Geist Regular",
              "fontSize": 14,
              "height": 44,
              "margin": 0,
              "paddingLeft": 0,
              "paddingVertical": 0,
            },
            {
              "opacity": 0,
              "position": "absolute",
            },
          ]
        }
        testID="browser-modal-url-input"
      />
      <Text
        accessibilityRole="text"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        ellipsizeMode="head"
        focusable={true}
        numberOfLines={1}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "color": "#121314",
            "fontFamily": "Geist Regular",
            "fontSize": 14,
            "letterSpacing": 0,
            "lineHeight": 24,
            "opacity": 1,
            "position": "relative",
          }
        }
      >
        https://example.com
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "height": 50,
        "justifyContent": "center",
      }
    }
  >
    <TouchableOpacity
      onPress={[Function]}
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "marginBottom": 12,
          "marginLeft": 0,
          "marginRight": 16,
          "marginTop": 12,
        }
      }
      testID="navbar-account-button"
    >
      <TextInput
        style={
          {
            "height": 0,
            "paddingVertical": 0,
            "width": 0,
          }
        }
      />
      <View
        style={
          {
            "backgroundColor": "#ffffff",
            "borderRadius": 8,
            "height": 32,
            "overflow": "hidden",
            "width": 32,
          }
        }
      />
    </TouchableOpacity>
  </View>
</View>
`;
