// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EvmAccountSelectorList renders all accounts with balances 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      applyWindowCorrection={[Function]}
      canChangeSize={true}
      collapsable={false}
      contentContainerStyle={
        {
          "backgroundColor": undefined,
          "minHeight": 1,
          "minWidth": 1,
          "paddingLeft": 0,
          "paddingRight": 0,
        }
      }
      contentHeight={160}
      contentWidth={400}
      data={
        [
          {
            "accountIndex": 0,
            "data": {
              "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "assets": {
                "fiatBalance": "$3200.00
1 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "id": "30786334-3935-4563-b064-363339643939",
              "isLoadingAccount": false,
              "isSelected": true,
              "name": "Account 1",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 0,
            },
            "sectionIndex": 0,
            "type": "account",
          },
          {
            "accountIndex": 1,
            "data": {
              "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
              "assets": {
                "fiatBalance": "$6400.00
2 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
              "id": "30786430-3138-4533-b863-383732333266",
              "isLoadingAccount": false,
              "isSelected": false,
              "name": "Account 2",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 78,
            },
            "sectionIndex": 0,
            "type": "account",
          },
        ]
      }
      dataProvider={
        DataProvider {
          "_data": [
            {
              "accountIndex": 0,
              "data": {
                "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "assets": {
                  "fiatBalance": "$3200.00
1 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "id": "30786334-3935-4563-b064-363339643939",
                "isLoadingAccount": false,
                "isSelected": true,
                "name": "Account 1",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 0,
              },
              "sectionIndex": 0,
              "type": "account",
            },
            {
              "accountIndex": 1,
              "data": {
                "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                "assets": {
                  "fiatBalance": "$6400.00
2 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                "id": "30786430-3138-4533-b863-383732333266",
                "isLoadingAccount": false,
                "isSelected": false,
                "name": "Account 2",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 78,
              },
              "sectionIndex": 0,
              "type": "account",
            },
          ],
          "_firstIndexToProcess": 0,
          "_hasStableIds": true,
          "_requiresDataChangeHandling": false,
          "_size": 2,
          "getStableId": [Function],
          "rowHasChanged": [Function],
        }
      }
      disableAutoLayout={true}
      disableRecycling={false}
      estimatedItemSize={80}
      extendedState={{}}
      externalScrollView={
        {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      finalRenderAheadOffset={250}
      forceNonDeterministicRendering={true}
      getItemType={[Function]}
      handlerTag={2}
      handlerType="NativeViewGestureHandler"
      horizontal={false}
      initialOffset={0}
      initialRenderIndex={0}
      isHorizontal={false}
      keyExtractor={[Function]}
      layoutProvider={
        GridLayoutProviderWithProps {
          "_acceptableRelayoutDelta": 1,
          "_getHeightOrWidth": [Function],
          "_getLayoutTypeForIndex": [Function],
          "_getSpan": [Function],
          "_hasExpired": false,
          "_isHorizontal": false,
          "_lastLayoutManager": GridLayoutManager {
            "_acceptableRelayoutDelta": 1,
            "_getSpan": [Function],
            "_isGridHorizontal": false,
            "_isHorizontal": false,
            "_layoutProvider": [Circular],
            "_layouts": [
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 0,
              },
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 80,
              },
            ],
            "_maxSpan": 1,
            "_renderWindowSize": {
              "height": 900,
              "width": 400,
            },
            "_totalHeight": 160,
            "_totalWidth": 400,
            "_window": {
              "height": 900,
              "width": 400,
            },
          },
          "_maxSpan": 1,
          "_renderWindowSize": {
            "height": 900,
            "width": 400,
          },
          "_setLayoutForType": [Function],
          "_tempDim": {
            "height": 0,
            "width": 0,
          },
          "averageWindow": AverageWindow {
            "currentAverage": 80,
            "currentCount": 1,
            "inputValues": [
              80,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
            ],
            "nextIndex": 1,
          },
          "defaultEstimatedItemSize": 100,
          "layoutObject": {
            "size": undefined,
            "span": undefined,
          },
          "props": {
            "data": [
              {
                "accountIndex": 0,
                "data": {
                  "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "assets": {
                    "fiatBalance": "$3200.00
1 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "id": "30786334-3935-4563-b064-363339643939",
                  "isLoadingAccount": false,
                  "isSelected": true,
                  "name": "Account 1",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 0,
                },
                "sectionIndex": 0,
                "type": "account",
              },
              {
                "accountIndex": 1,
                "data": {
                  "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "assets": {
                    "fiatBalance": "$6400.00
2 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "id": "30786430-3138-4533-b863-383732333266",
                  "isLoadingAccount": false,
                  "isSelected": false,
                  "name": "Account 2",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 78,
                },
                "sectionIndex": 0,
                "type": "account",
              },
            ],
            "disableAutoLayout": true,
            "estimatedItemSize": 80,
            "getItemType": [Function],
            "keyExtractor": [Function],
            "numColumns": 1,
            "onContentSizeChange": [Function],
            "renderItem": [Function],
            "renderScrollComponent": {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "testID": "account-selector-list",
          },
          "renderWindowInsets": {
            "height": 0,
            "width": 0,
          },
          "shouldRefreshWithAnchoring": true,
        }
      }
      maxRenderAhead={750}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onEndReachedThresholdRelative={0}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onItemLayout={[Function]}
      onLayout={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onSizeChanged={[Function]}
      onVisibleIndicesChanged={[Function]}
      removeClippedSubviews={false}
      renderAheadOffset={0}
      renderAheadStep={250}
      renderContentContainer={[Function]}
      renderItem={[Function]}
      renderItemContainer={[Function]}
      rowRenderer={[Function]}
      scrollEventThrottle={16}
      scrollThrottle={16}
      scrollViewProps={
        {
          "contentContainerStyle": {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          "onLayout": [Function],
          "onScrollBeginDrag": [Function],
          "refreshControl": undefined,
          "style": {
            "minHeight": 1,
            "minWidth": 1,
          },
        }
      }
      style={
        {
          "minHeight": 1,
          "minWidth": 1,
        }
      }
      suppressBoundedSizeException={true}
      testID="account-selector-list"
      windowCorrectionConfig={
        {
          "applyToInitialOffset": true,
          "applyToItemScroll": true,
          "value": {
            "endCorrection": 0,
            "startCorrection": 0,
            "windowShift": -0,
          },
        }
      }
    >
      <View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 0,
                "paddingTop": 0,
              }
            }
          />
          <View
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <AutoLayoutView
            disableAutoLayout={true}
            enableInstrumentation={false}
            horizontal={false}
            onBlankAreaEvent={[Function]}
            onLayout={[Function]}
            renderAheadOffset={0}
            scrollOffset={0}
            style={
              {
                "height": 160,
                "width": 400,
              }
            }
            windowSize={900}
          >
            <CellContainer
              index={0}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#4459ff1a",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#C7144F",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711651,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.46329603511986217,
                                        0.8862035792312145,
                                        -0.8862035792312145,
                                        0.46329603511986217,
                                        29.06767649409735,
                                        -8.290603334655817,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4280576225,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.5778576243835052,
                                        0.8161375900801603,
                                        -0.8161375900801603,
                                        -0.5778576243835052,
                                        51.62016714634118,
                                        17.239003094412087,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278407261,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.7046342099635947,
                                        -0.7095707365365209,
                                        0.7095707365365209,
                                        0.7046342099635947,
                                        -25.225718686778755,
                                        -4.611026307883787,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 1
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xC4955...4D272
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                }
                              }
                              testID="account-balance-by-address-0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272"
                            >
                              <Text
                                accessibilityRole="text"
                                style={
                                  {
                                    "color": "#121314",
                                    "fontFamily": "Geist Medium",
                                    "fontSize": 16,
                                    "fontWeight": "500",
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                $3200.00
                              </Text>
                              <View
                                style={
                                  {
                                    "marginTop": 4,
                                  }
                                }
                                testID="network-container"
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="avatar-group-container"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      accessibilityRole="checkbox"
                      accessible={true}
                      style={
                        {
                          "backgroundColor": "#4459ff1a",
                          "bottom": 0,
                          "flexDirection": "row",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "width": 4,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "backgroundColor": "#4459ff",
                            "borderRadius": 2,
                            "marginLeft": 4,
                            "marginVertical": 4,
                            "width": 4,
                          }
                        }
                      />
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
            <CellContainer
              index={1}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 80,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#ffffff",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#2461E1",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711643,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.4210358133674908,
                                        -0.9070440142914651,
                                        0.9070440142914651,
                                        -0.4210358133674908,
                                        8.266156821330682,
                                        42.79486424435327,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278289804,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.8241261886220156,
                                        -0.5664062369248329,
                                        0.5664062369248329,
                                        -0.8241261886220156,
                                        29.655077569991498,
                                        50.077446101884746,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294394881,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.6704266189587993,
                                        -0.7419758409756162,
                                        0.7419758409756162,
                                        0.6704266189587993,
                                        8.152366664413217,
                                        -0.7899246956676649,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 2
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xd0185...a78E7
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                }
                              }
                              testID="account-balance-by-address-0xd018538C87232FF95acbCe4870629b75640a78E7"
                            >
                              <Text
                                accessibilityRole="text"
                                style={
                                  {
                                    "color": "#121314",
                                    "fontFamily": "Geist Medium",
                                    "fontSize": 16,
                                    "fontWeight": "500",
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                $6400.00
                              </Text>
                              <View
                                style={
                                  {
                                    "marginTop": 4,
                                  }
                                }
                                testID="network-container"
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="avatar-group-container"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
          </AutoLayoutView>
          <CellContainer
            index={-1}
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "paddingBottom": 0,
                "paddingRight": 0,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`EvmAccountSelectorList renders all accounts with right accessory 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      applyWindowCorrection={[Function]}
      canChangeSize={true}
      collapsable={false}
      contentContainerStyle={
        {
          "backgroundColor": undefined,
          "minHeight": 1,
          "minWidth": 1,
          "paddingLeft": 0,
          "paddingRight": 0,
        }
      }
      contentHeight={160}
      contentWidth={400}
      data={
        [
          {
            "accountIndex": 0,
            "data": {
              "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "assets": {
                "fiatBalance": "$3200.00
1 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "id": "30786334-3935-4563-b064-363339643939",
              "isLoadingAccount": false,
              "isSelected": true,
              "name": "Account 1",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 0,
            },
            "sectionIndex": 0,
            "type": "account",
          },
          {
            "accountIndex": 1,
            "data": {
              "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
              "assets": {
                "fiatBalance": "$6400.00
2 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
              "id": "30786430-3138-4533-b863-383732333266",
              "isLoadingAccount": false,
              "isSelected": false,
              "name": "Account 2",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 78,
            },
            "sectionIndex": 0,
            "type": "account",
          },
        ]
      }
      dataProvider={
        DataProvider {
          "_data": [
            {
              "accountIndex": 0,
              "data": {
                "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "assets": {
                  "fiatBalance": "$3200.00
1 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "id": "30786334-3935-4563-b064-363339643939",
                "isLoadingAccount": false,
                "isSelected": true,
                "name": "Account 1",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 0,
              },
              "sectionIndex": 0,
              "type": "account",
            },
            {
              "accountIndex": 1,
              "data": {
                "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                "assets": {
                  "fiatBalance": "$6400.00
2 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                "id": "30786430-3138-4533-b863-383732333266",
                "isLoadingAccount": false,
                "isSelected": false,
                "name": "Account 2",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 78,
              },
              "sectionIndex": 0,
              "type": "account",
            },
          ],
          "_firstIndexToProcess": 0,
          "_hasStableIds": true,
          "_requiresDataChangeHandling": false,
          "_size": 2,
          "getStableId": [Function],
          "rowHasChanged": [Function],
        }
      }
      disableAutoLayout={true}
      disableRecycling={false}
      estimatedItemSize={80}
      extendedState={{}}
      externalScrollView={
        {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      finalRenderAheadOffset={250}
      forceNonDeterministicRendering={true}
      getItemType={[Function]}
      handlerTag={3}
      handlerType="NativeViewGestureHandler"
      horizontal={false}
      initialOffset={0}
      initialRenderIndex={0}
      isHorizontal={false}
      keyExtractor={[Function]}
      layoutProvider={
        GridLayoutProviderWithProps {
          "_acceptableRelayoutDelta": 1,
          "_getHeightOrWidth": [Function],
          "_getLayoutTypeForIndex": [Function],
          "_getSpan": [Function],
          "_hasExpired": false,
          "_isHorizontal": false,
          "_lastLayoutManager": GridLayoutManager {
            "_acceptableRelayoutDelta": 1,
            "_getSpan": [Function],
            "_isGridHorizontal": false,
            "_isHorizontal": false,
            "_layoutProvider": [Circular],
            "_layouts": [
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 0,
              },
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 80,
              },
            ],
            "_maxSpan": 1,
            "_renderWindowSize": {
              "height": 900,
              "width": 400,
            },
            "_totalHeight": 160,
            "_totalWidth": 400,
            "_window": {
              "height": 900,
              "width": 400,
            },
          },
          "_maxSpan": 1,
          "_renderWindowSize": {
            "height": 900,
            "width": 400,
          },
          "_setLayoutForType": [Function],
          "_tempDim": {
            "height": 0,
            "width": 0,
          },
          "averageWindow": AverageWindow {
            "currentAverage": 80,
            "currentCount": 1,
            "inputValues": [
              80,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
            ],
            "nextIndex": 1,
          },
          "defaultEstimatedItemSize": 100,
          "layoutObject": {
            "size": undefined,
            "span": undefined,
          },
          "props": {
            "data": [
              {
                "accountIndex": 0,
                "data": {
                  "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "assets": {
                    "fiatBalance": "$3200.00
1 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "id": "30786334-3935-4563-b064-363339643939",
                  "isLoadingAccount": false,
                  "isSelected": true,
                  "name": "Account 1",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 0,
                },
                "sectionIndex": 0,
                "type": "account",
              },
              {
                "accountIndex": 1,
                "data": {
                  "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "assets": {
                    "fiatBalance": "$6400.00
2 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "id": "30786430-3138-4533-b863-383732333266",
                  "isLoadingAccount": false,
                  "isSelected": false,
                  "name": "Account 2",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 78,
                },
                "sectionIndex": 0,
                "type": "account",
              },
            ],
            "disableAutoLayout": true,
            "estimatedItemSize": 80,
            "getItemType": [Function],
            "keyExtractor": [Function],
            "numColumns": 1,
            "onContentSizeChange": [Function],
            "renderItem": [Function],
            "renderScrollComponent": {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "testID": "account-selector-list",
          },
          "renderWindowInsets": {
            "height": 0,
            "width": 0,
          },
          "shouldRefreshWithAnchoring": true,
        }
      }
      maxRenderAhead={750}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onEndReachedThresholdRelative={0}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onItemLayout={[Function]}
      onLayout={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onSizeChanged={[Function]}
      onVisibleIndicesChanged={[Function]}
      removeClippedSubviews={false}
      renderAheadOffset={0}
      renderAheadStep={250}
      renderContentContainer={[Function]}
      renderItem={[Function]}
      renderItemContainer={[Function]}
      rowRenderer={[Function]}
      scrollEventThrottle={16}
      scrollThrottle={16}
      scrollViewProps={
        {
          "contentContainerStyle": {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          "onLayout": [Function],
          "onScrollBeginDrag": [Function],
          "refreshControl": undefined,
          "style": {
            "minHeight": 1,
            "minWidth": 1,
          },
        }
      }
      style={
        {
          "minHeight": 1,
          "minWidth": 1,
        }
      }
      suppressBoundedSizeException={true}
      testID="account-selector-list"
      windowCorrectionConfig={
        {
          "applyToInitialOffset": true,
          "applyToItemScroll": true,
          "value": {
            "endCorrection": 0,
            "startCorrection": 0,
            "windowShift": -0,
          },
        }
      }
    >
      <View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 0,
                "paddingTop": 0,
              }
            }
          />
          <View
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <AutoLayoutView
            disableAutoLayout={true}
            enableInstrumentation={false}
            horizontal={false}
            onBlankAreaEvent={[Function]}
            onLayout={[Function]}
            renderAheadOffset={0}
            scrollOffset={0}
            style={
              {
                "height": 160,
                "width": 400,
              }
            }
            windowSize={900}
          >
            <CellContainer
              index={0}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#4459ff1a",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    disabled={true}
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#C7144F",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711651,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.46329603511986217,
                                        0.8862035792312145,
                                        -0.8862035792312145,
                                        0.46329603511986217,
                                        29.06767649409735,
                                        -8.290603334655817,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4280576225,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.5778576243835052,
                                        0.8161375900801603,
                                        -0.8161375900801603,
                                        -0.5778576243835052,
                                        51.62016714634118,
                                        17.239003094412087,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278407261,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.7046342099635947,
                                        -0.7095707365365209,
                                        0.7095707365365209,
                                        0.7046342099635947,
                                        -25.225718686778755,
                                        -4.611026307883787,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 1
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xC4955...4D272
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              testID="right-accessory"
                            >
                              0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272 - Account 1
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      accessibilityRole="checkbox"
                      accessible={true}
                      style={
                        {
                          "backgroundColor": "#4459ff1a",
                          "bottom": 0,
                          "flexDirection": "row",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "width": 4,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "backgroundColor": "#4459ff",
                            "borderRadius": 2,
                            "marginLeft": 4,
                            "marginVertical": 4,
                            "width": 4,
                          }
                        }
                      />
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
            <CellContainer
              index={1}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 80,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#ffffff",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    disabled={true}
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#2461E1",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711643,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.4210358133674908,
                                        -0.9070440142914651,
                                        0.9070440142914651,
                                        -0.4210358133674908,
                                        8.266156821330682,
                                        42.79486424435327,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278289804,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.8241261886220156,
                                        -0.5664062369248329,
                                        0.5664062369248329,
                                        -0.8241261886220156,
                                        29.655077569991498,
                                        50.077446101884746,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294394881,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.6704266189587993,
                                        -0.7419758409756162,
                                        0.7419758409756162,
                                        0.6704266189587993,
                                        8.152366664413217,
                                        -0.7899246956676649,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 2
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xd0185...a78E7
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              testID="right-accessory"
                            >
                              0xd018538C87232FF95acbCe4870629b75640a78E7 - Account 2
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
          </AutoLayoutView>
          <CellContainer
            index={-1}
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "paddingBottom": 0,
                "paddingRight": 0,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`EvmAccountSelectorList renders correctly 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      applyWindowCorrection={[Function]}
      canChangeSize={true}
      collapsable={false}
      contentContainerStyle={
        {
          "backgroundColor": undefined,
          "minHeight": 1,
          "minWidth": 1,
          "paddingLeft": 0,
          "paddingRight": 0,
        }
      }
      contentHeight={160}
      contentWidth={400}
      data={
        [
          {
            "accountIndex": 0,
            "data": {
              "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "assets": {
                "fiatBalance": "$3200.00
1 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "id": "30786334-3935-4563-b064-363339643939",
              "isLoadingAccount": false,
              "isSelected": true,
              "name": "Account 1",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 0,
            },
            "sectionIndex": 0,
            "type": "account",
          },
          {
            "accountIndex": 1,
            "data": {
              "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
              "assets": {
                "fiatBalance": "$6400.00
2 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
              "id": "30786430-3138-4533-b863-383732333266",
              "isLoadingAccount": false,
              "isSelected": false,
              "name": "Account 2",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 78,
            },
            "sectionIndex": 0,
            "type": "account",
          },
        ]
      }
      dataProvider={
        DataProvider {
          "_data": [
            {
              "accountIndex": 0,
              "data": {
                "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "assets": {
                  "fiatBalance": "$3200.00
1 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "id": "30786334-3935-4563-b064-363339643939",
                "isLoadingAccount": false,
                "isSelected": true,
                "name": "Account 1",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 0,
              },
              "sectionIndex": 0,
              "type": "account",
            },
            {
              "accountIndex": 1,
              "data": {
                "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                "assets": {
                  "fiatBalance": "$6400.00
2 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                "id": "30786430-3138-4533-b863-383732333266",
                "isLoadingAccount": false,
                "isSelected": false,
                "name": "Account 2",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 78,
              },
              "sectionIndex": 0,
              "type": "account",
            },
          ],
          "_firstIndexToProcess": 0,
          "_hasStableIds": true,
          "_requiresDataChangeHandling": false,
          "_size": 2,
          "getStableId": [Function],
          "rowHasChanged": [Function],
        }
      }
      disableAutoLayout={true}
      disableRecycling={false}
      estimatedItemSize={80}
      extendedState={{}}
      externalScrollView={
        {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      finalRenderAheadOffset={250}
      forceNonDeterministicRendering={true}
      getItemType={[Function]}
      handlerTag={1}
      handlerType="NativeViewGestureHandler"
      horizontal={false}
      initialOffset={0}
      initialRenderIndex={0}
      isHorizontal={false}
      keyExtractor={[Function]}
      layoutProvider={
        GridLayoutProviderWithProps {
          "_acceptableRelayoutDelta": 1,
          "_getHeightOrWidth": [Function],
          "_getLayoutTypeForIndex": [Function],
          "_getSpan": [Function],
          "_hasExpired": false,
          "_isHorizontal": false,
          "_lastLayoutManager": GridLayoutManager {
            "_acceptableRelayoutDelta": 1,
            "_getSpan": [Function],
            "_isGridHorizontal": false,
            "_isHorizontal": false,
            "_layoutProvider": [Circular],
            "_layouts": [
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 0,
              },
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 80,
              },
            ],
            "_maxSpan": 1,
            "_renderWindowSize": {
              "height": 900,
              "width": 400,
            },
            "_totalHeight": 160,
            "_totalWidth": 400,
            "_window": {
              "height": 900,
              "width": 400,
            },
          },
          "_maxSpan": 1,
          "_renderWindowSize": {
            "height": 900,
            "width": 400,
          },
          "_setLayoutForType": [Function],
          "_tempDim": {
            "height": 0,
            "width": 0,
          },
          "averageWindow": AverageWindow {
            "currentAverage": 80,
            "currentCount": 1,
            "inputValues": [
              80,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
            ],
            "nextIndex": 1,
          },
          "defaultEstimatedItemSize": 100,
          "layoutObject": {
            "size": undefined,
            "span": undefined,
          },
          "props": {
            "data": [
              {
                "accountIndex": 0,
                "data": {
                  "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "assets": {
                    "fiatBalance": "$3200.00
1 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "id": "30786334-3935-4563-b064-363339643939",
                  "isLoadingAccount": false,
                  "isSelected": true,
                  "name": "Account 1",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 0,
                },
                "sectionIndex": 0,
                "type": "account",
              },
              {
                "accountIndex": 1,
                "data": {
                  "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "assets": {
                    "fiatBalance": "$6400.00
2 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "id": "30786430-3138-4533-b863-383732333266",
                  "isLoadingAccount": false,
                  "isSelected": false,
                  "name": "Account 2",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 78,
                },
                "sectionIndex": 0,
                "type": "account",
              },
            ],
            "disableAutoLayout": true,
            "estimatedItemSize": 80,
            "getItemType": [Function],
            "keyExtractor": [Function],
            "numColumns": 1,
            "onContentSizeChange": [Function],
            "renderItem": [Function],
            "renderScrollComponent": {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "testID": "account-selector-list",
          },
          "renderWindowInsets": {
            "height": 0,
            "width": 0,
          },
          "shouldRefreshWithAnchoring": true,
        }
      }
      maxRenderAhead={750}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onEndReachedThresholdRelative={0}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onItemLayout={[Function]}
      onLayout={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onSizeChanged={[Function]}
      onVisibleIndicesChanged={[Function]}
      removeClippedSubviews={false}
      renderAheadOffset={0}
      renderAheadStep={250}
      renderContentContainer={[Function]}
      renderItem={[Function]}
      renderItemContainer={[Function]}
      rowRenderer={[Function]}
      scrollEventThrottle={16}
      scrollThrottle={16}
      scrollViewProps={
        {
          "contentContainerStyle": {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          "onLayout": [Function],
          "onScrollBeginDrag": [Function],
          "refreshControl": undefined,
          "style": {
            "minHeight": 1,
            "minWidth": 1,
          },
        }
      }
      style={
        {
          "minHeight": 1,
          "minWidth": 1,
        }
      }
      suppressBoundedSizeException={true}
      testID="account-selector-list"
      windowCorrectionConfig={
        {
          "applyToInitialOffset": true,
          "applyToItemScroll": true,
          "value": {
            "endCorrection": 0,
            "startCorrection": 0,
            "windowShift": -0,
          },
        }
      }
    >
      <View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 0,
                "paddingTop": 0,
              }
            }
          />
          <View
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <AutoLayoutView
            disableAutoLayout={true}
            enableInstrumentation={false}
            horizontal={false}
            onBlankAreaEvent={[Function]}
            onLayout={[Function]}
            renderAheadOffset={0}
            scrollOffset={0}
            style={
              {
                "height": 160,
                "width": 400,
              }
            }
            windowSize={900}
          >
            <CellContainer
              index={0}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#4459ff1a",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#C7144F",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711651,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.46329603511986217,
                                        0.8862035792312145,
                                        -0.8862035792312145,
                                        0.46329603511986217,
                                        29.06767649409735,
                                        -8.290603334655817,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4280576225,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.5778576243835052,
                                        0.8161375900801603,
                                        -0.8161375900801603,
                                        -0.5778576243835052,
                                        51.62016714634118,
                                        17.239003094412087,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278407261,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.7046342099635947,
                                        -0.7095707365365209,
                                        0.7095707365365209,
                                        0.7046342099635947,
                                        -25.225718686778755,
                                        -4.611026307883787,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 1
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xC4955...4D272
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                }
                              }
                              testID="account-balance-by-address-0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272"
                            >
                              <Text
                                accessibilityRole="text"
                                style={
                                  {
                                    "color": "#121314",
                                    "fontFamily": "Geist Medium",
                                    "fontSize": 16,
                                    "fontWeight": "500",
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                $3200.00
                              </Text>
                              <View
                                style={
                                  {
                                    "marginTop": 4,
                                  }
                                }
                                testID="network-container"
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="avatar-group-container"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      accessibilityRole="checkbox"
                      accessible={true}
                      style={
                        {
                          "backgroundColor": "#4459ff1a",
                          "bottom": 0,
                          "flexDirection": "row",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "width": 4,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "backgroundColor": "#4459ff",
                            "borderRadius": 2,
                            "marginLeft": 4,
                            "marginVertical": 4,
                            "width": 4,
                          }
                        }
                      />
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
            <CellContainer
              index={1}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 80,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#ffffff",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#2461E1",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711643,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.4210358133674908,
                                        -0.9070440142914651,
                                        0.9070440142914651,
                                        -0.4210358133674908,
                                        8.266156821330682,
                                        42.79486424435327,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278289804,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.8241261886220156,
                                        -0.5664062369248329,
                                        0.5664062369248329,
                                        -0.8241261886220156,
                                        29.655077569991498,
                                        50.077446101884746,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294394881,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.6704266189587993,
                                        -0.7419758409756162,
                                        0.7419758409756162,
                                        0.6704266189587993,
                                        8.152366664413217,
                                        -0.7899246956676649,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 2
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xd0185...a78E7
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                }
                              }
                              testID="account-balance-by-address-0xd018538C87232FF95acbCe4870629b75640a78E7"
                            >
                              <Text
                                accessibilityRole="text"
                                style={
                                  {
                                    "color": "#121314",
                                    "fontFamily": "Geist Medium",
                                    "fontSize": 16,
                                    "fontWeight": "500",
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                $6400.00
                              </Text>
                              <View
                                style={
                                  {
                                    "marginTop": 4,
                                  }
                                }
                                testID="network-container"
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="avatar-group-container"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
          </AutoLayoutView>
          <CellContainer
            index={-1}
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "paddingBottom": 0,
                "paddingRight": 0,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`EvmAccountSelectorList renders network icons for accounts with transaction activity 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      applyWindowCorrection={[Function]}
      canChangeSize={true}
      collapsable={false}
      contentContainerStyle={
        {
          "backgroundColor": undefined,
          "minHeight": 1,
          "minWidth": 1,
          "paddingLeft": 0,
          "paddingRight": 0,
        }
      }
      contentHeight={160}
      contentWidth={400}
      data={
        [
          {
            "accountIndex": 0,
            "data": {
              "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "assets": {
                "fiatBalance": "$3200.00
1 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
              "id": "30786334-3935-4563-b064-363339643939",
              "isLoadingAccount": false,
              "isSelected": true,
              "name": "Account 1",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 0,
            },
            "sectionIndex": 0,
            "type": "account",
          },
          {
            "accountIndex": 1,
            "data": {
              "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
              "assets": {
                "fiatBalance": "$6400.00
2 ETH",
                "tokens": [],
              },
              "balanceError": undefined,
              "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
              "id": "30786430-3138-4533-b863-383732333266",
              "isLoadingAccount": false,
              "isSelected": false,
              "name": "Account 2",
              "scopes": [],
              "type": "HD Key Tree",
              "yOffset": 78,
            },
            "sectionIndex": 0,
            "type": "account",
          },
        ]
      }
      dataProvider={
        DataProvider {
          "_data": [
            {
              "accountIndex": 0,
              "data": {
                "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "assets": {
                  "fiatBalance": "$3200.00
1 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                "id": "30786334-3935-4563-b064-363339643939",
                "isLoadingAccount": false,
                "isSelected": true,
                "name": "Account 1",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 0,
              },
              "sectionIndex": 0,
              "type": "account",
            },
            {
              "accountIndex": 1,
              "data": {
                "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                "assets": {
                  "fiatBalance": "$6400.00
2 ETH",
                  "tokens": [],
                },
                "balanceError": undefined,
                "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                "id": "30786430-3138-4533-b863-383732333266",
                "isLoadingAccount": false,
                "isSelected": false,
                "name": "Account 2",
                "scopes": [],
                "type": "HD Key Tree",
                "yOffset": 78,
              },
              "sectionIndex": 0,
              "type": "account",
            },
          ],
          "_firstIndexToProcess": 0,
          "_hasStableIds": true,
          "_requiresDataChangeHandling": false,
          "_size": 2,
          "getStableId": [Function],
          "rowHasChanged": [Function],
        }
      }
      disableAutoLayout={true}
      disableRecycling={false}
      estimatedItemSize={80}
      extendedState={{}}
      externalScrollView={
        {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        }
      }
      finalRenderAheadOffset={250}
      forceNonDeterministicRendering={true}
      getItemType={[Function]}
      handlerTag={24}
      handlerType="NativeViewGestureHandler"
      horizontal={false}
      initialOffset={0}
      initialRenderIndex={0}
      isHorizontal={false}
      keyExtractor={[Function]}
      layoutProvider={
        GridLayoutProviderWithProps {
          "_acceptableRelayoutDelta": 1,
          "_getHeightOrWidth": [Function],
          "_getLayoutTypeForIndex": [Function],
          "_getSpan": [Function],
          "_hasExpired": false,
          "_isHorizontal": false,
          "_lastLayoutManager": GridLayoutManager {
            "_acceptableRelayoutDelta": 1,
            "_getSpan": [Function],
            "_isGridHorizontal": false,
            "_isHorizontal": false,
            "_layoutProvider": [Circular],
            "_layouts": [
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 0,
              },
              {
                "height": 80,
                "type": "account",
                "width": 400,
                "x": 0,
                "y": 80,
              },
            ],
            "_maxSpan": 1,
            "_renderWindowSize": {
              "height": 900,
              "width": 400,
            },
            "_totalHeight": 160,
            "_totalWidth": 400,
            "_window": {
              "height": 900,
              "width": 400,
            },
          },
          "_maxSpan": 1,
          "_renderWindowSize": {
            "height": 900,
            "width": 400,
          },
          "_setLayoutForType": [Function],
          "_tempDim": {
            "height": 0,
            "width": 0,
          },
          "averageWindow": AverageWindow {
            "currentAverage": 80,
            "currentCount": 1,
            "inputValues": [
              80,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
              ,
            ],
            "nextIndex": 1,
          },
          "defaultEstimatedItemSize": 100,
          "layoutObject": {
            "size": undefined,
            "span": undefined,
          },
          "props": {
            "data": [
              {
                "accountIndex": 0,
                "data": {
                  "address": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "assets": {
                    "fiatBalance": "$3200.00
1 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
                  "id": "30786334-3935-4563-b064-363339643939",
                  "isLoadingAccount": false,
                  "isSelected": true,
                  "name": "Account 1",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 0,
                },
                "sectionIndex": 0,
                "type": "account",
              },
              {
                "accountIndex": 1,
                "data": {
                  "address": "0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "assets": {
                    "fiatBalance": "$6400.00
2 ETH",
                    "tokens": [],
                  },
                  "balanceError": undefined,
                  "caipAccountId": "eip155:0:0xd018538C87232FF95acbCe4870629b75640a78E7",
                  "id": "30786430-3138-4533-b863-383732333266",
                  "isLoadingAccount": false,
                  "isSelected": false,
                  "name": "Account 2",
                  "scopes": [],
                  "type": "HD Key Tree",
                  "yOffset": 78,
                },
                "sectionIndex": 0,
                "type": "account",
              },
            ],
            "disableAutoLayout": true,
            "estimatedItemSize": 80,
            "getItemType": [Function],
            "keyExtractor": [Function],
            "numColumns": 1,
            "onContentSizeChange": [Function],
            "renderItem": [Function],
            "renderScrollComponent": {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "testID": "account-selector-list",
          },
          "renderWindowInsets": {
            "height": 0,
            "width": 0,
          },
          "shouldRefreshWithAnchoring": true,
        }
      }
      maxRenderAhead={750}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={0}
      onEndReachedThresholdRelative={0}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onItemLayout={[Function]}
      onLayout={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onSizeChanged={[Function]}
      onVisibleIndicesChanged={[Function]}
      removeClippedSubviews={false}
      renderAheadOffset={0}
      renderAheadStep={250}
      renderContentContainer={[Function]}
      renderItem={[Function]}
      renderItemContainer={[Function]}
      rowRenderer={[Function]}
      scrollEventThrottle={16}
      scrollThrottle={16}
      scrollViewProps={
        {
          "contentContainerStyle": {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingLeft": 0,
            "paddingRight": 0,
          },
          "onLayout": [Function],
          "onScrollBeginDrag": [Function],
          "refreshControl": undefined,
          "style": {
            "minHeight": 1,
            "minWidth": 1,
          },
        }
      }
      style={
        {
          "minHeight": 1,
          "minWidth": 1,
        }
      }
      suppressBoundedSizeException={true}
      testID="account-selector-list"
      windowCorrectionConfig={
        {
          "applyToInitialOffset": true,
          "applyToItemScroll": true,
          "value": {
            "endCorrection": 0,
            "startCorrection": 0,
            "windowShift": -0,
          },
        }
      }
    >
      <View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            style={
              {
                "paddingLeft": 0,
                "paddingTop": 0,
              }
            }
          />
          <View
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <AutoLayoutView
            disableAutoLayout={true}
            enableInstrumentation={false}
            horizontal={false}
            onBlankAreaEvent={[Function]}
            onLayout={[Function]}
            renderAheadOffset={0}
            scrollOffset={0}
            style={
              {
                "height": 160,
                "width": 400,
              }
            }
            windowSize={900}
          >
            <CellContainer
              index={0}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#4459ff1a",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#C7144F",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711651,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.46329603511986217,
                                        0.8862035792312145,
                                        -0.8862035792312145,
                                        0.46329603511986217,
                                        29.06767649409735,
                                        -8.290603334655817,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4280576225,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.5778576243835052,
                                        0.8161375900801603,
                                        -0.8161375900801603,
                                        -0.5778576243835052,
                                        51.62016714634118,
                                        17.239003094412087,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278407261,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.7046342099635947,
                                        -0.7095707365365209,
                                        0.7095707365365209,
                                        0.7046342099635947,
                                        -25.225718686778755,
                                        -4.611026307883787,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 1
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xC4955...4D272
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                }
                              }
                              testID="account-balance-by-address-0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272"
                            >
                              <Text
                                accessibilityRole="text"
                                style={
                                  {
                                    "color": "#121314",
                                    "fontFamily": "Geist Medium",
                                    "fontSize": 16,
                                    "fontWeight": "500",
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                $3200.00
                              </Text>
                              <View
                                style={
                                  {
                                    "marginTop": 4,
                                  }
                                }
                                testID="network-container"
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="avatar-group-container"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      accessibilityRole="checkbox"
                      accessible={true}
                      style={
                        {
                          "backgroundColor": "#4459ff1a",
                          "bottom": 0,
                          "flexDirection": "row",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "width": 4,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "backgroundColor": "#4459ff",
                            "borderRadius": 2,
                            "marginLeft": 4,
                            "marginVertical": 4,
                            "width": 4,
                          }
                        }
                      />
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
            <CellContainer
              index={1}
              onLayout={[Function]}
              style={
                {
                  "alignItems": "stretch",
                  "flexDirection": "column",
                  "left": 0,
                  "position": "absolute",
                  "top": 80,
                  "width": 400,
                }
              }
            >
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "#ffffff",
                      "flexDirection": "row",
                    }
                  }
                >
                  <TouchableOpacity
                    onLongPress={[Function]}
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flex": 1,
                        "opacity": 1,
                        "padding": 16,
                        "position": "relative",
                        "zIndex": 1,
                      }
                    }
                    testID="select-with-menu"
                  >
                    <View
                      accessibilityRole="none"
                      accessible={true}
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexDirection": "column",
                          "padding": 16,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 0,
                          "zIndex": 2,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 32,
                                "marginRight": 16,
                                "overflow": "hidden",
                                "width": 32,
                              }
                            }
                            testID="cellbase-avatar"
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#2461E1",
                                    "borderRadius": 16,
                                    "height": 32,
                                    "width": 32,
                                  },
                                  {
                                    "borderRadius": 8,
                                  },
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={32}
                                bbWidth={32}
                                focusable={false}
                                height={32}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 32,
                                      "width": 32,
                                    },
                                  ]
                                }
                                width={32}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294711643,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.4210358133674908,
                                        -0.9070440142914651,
                                        0.9070440142914651,
                                        -0.4210358133674908,
                                        8.266156821330682,
                                        42.79486424435327,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278289804,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        -0.8241261886220156,
                                        -0.5664062369248329,
                                        0.5664062369248329,
                                        -0.8241261886220156,
                                        29.655077569991498,
                                        50.077446101884746,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294394881,
                                        "type": 0,
                                      }
                                    }
                                    height={32}
                                    matrix={
                                      [
                                        0.6704266189587993,
                                        -0.7419758409756162,
                                        0.7419758409756162,
                                        0.6704266189587993,
                                        8.152366664413217,
                                        -0.7899246956676649,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={32}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <View
                            style={
                              {
                                "alignItems": "flex-start",
                                "flex": 1,
                              }
                            }
                          >
                            <Text
                              accessibilityRole="text"
                              numberOfLines={1}
                              style={
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                              testID="cellbase-avatar-title"
                            >
                              Account 2
                            </Text>
                            <TouchableOpacity
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": undefined,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessible={true}
                              focusable={false}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "alignItems": "flex-start",
                                  "flexDirection": "row",
                                  "marginBottom": 0,
                                  "zIndex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                numberOfLines={1}
                                style={
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                0xd0185...a78E7
                              </Text>
                            </TouchableOpacity>
                          </View>
                          <View
                            style={
                              {
                                "marginLeft": 16,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "alignItems": "flex-end",
                                  "flexDirection": "column",
                                }
                              }
                              testID="account-balance-by-address-0xd018538C87232FF95acbCe4870629b75640a78E7"
                            >
                              <Text
                                accessibilityRole="text"
                                style={
                                  {
                                    "color": "#121314",
                                    "fontFamily": "Geist Medium",
                                    "fontSize": 16,
                                    "fontWeight": "500",
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                    "textAlign": "right",
                                  }
                                }
                              >
                                $6400.00
                              </Text>
                              <View
                                style={
                                  {
                                    "marginTop": 4,
                                  }
                                }
                                testID="network-container"
                              >
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "flexDirection": "row",
                                    }
                                  }
                                  testID="avatar-group-container"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </TouchableOpacity>
                  <View
                    style={
                      {
                        "paddingRight": 20,
                      }
                    }
                  >
                    <TouchableOpacity
                      accessibilityRole="button"
                      accessible={true}
                      activeOpacity={1}
                      disabled={false}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      style={
                        {
                          "alignItems": "center",
                          "borderRadius": 8,
                          "height": 24,
                          "justifyContent": "center",
                          "opacity": 1,
                          "width": 24,
                        }
                      }
                      testID="main-wallet-account-actions"
                    >
                      <SvgMock
                        color="#121314"
                        fill="currentColor"
                        height={16}
                        name="MoreVertical"
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        width={16}
                      />
                    </TouchableOpacity>
                  </View>
                </View>
              </View>
            </CellContainer>
          </AutoLayoutView>
          <CellContainer
            index={-1}
            style={
              [
                undefined,
                undefined,
              ]
            }
          />
          <View
            style={
              {
                "paddingBottom": 0,
                "paddingRight": 0,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
