// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddCustomToken should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
  testID="add-custom-token-screen"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <View
          accessibilityState={
            Object {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 8,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "paddingHorizontal": 12,
                  "paddingVertical": 8,
                },
                undefined,
                Object {
                  "backgroundColor": "#0376C919",
                  "borderColor": "#0376C9",
                },
                Object {
                  "marginHorizontal": 20,
                  "marginTop": 20,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#0376C9",
                      "fontSize": 18,
                    },
                    Object {
                      "paddingRight": 8,
                      "paddingTop": 4,
                    },
                    Object {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                ÔÅ™
              </Text>
            </View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#24272A",
                    "fontFamily": "EuclidCircularB-Regular",
                    "fontSize": 30,
                    "fontWeight": "400",
                    "marginVertical": 2,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "#24272A",
                      "flex": 1,
                      "fontSize": 14,
                      "lineHeight": 17,
                    },
                    Object {
                      "marginRight": 12,
                    },
                  ],
                ]
              }
            >
              <Text
                style={
                  Object {
                    "color": "#24272A",
                  }
                }
              >
                Token detection is not available on this network yet. Please import token manually and make sure you trust it. Learn about 
              </Text>
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "color": "#0376C9",
                  }
                }
                suppressHighlighting={true}
              >
                token scams and security risks.
              </Text>
            </Text>
          </View>
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#24272A",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                }
              }
            >
              Token Address
            </Text>
            <TextInput
              keyboardAppearance="light"
              onChangeText={[Function]}
              onSubmitEditing={[Function]}
              placeholder="0x..."
              placeholderTextColor="#BBC0C5"
              returnKeyType="next"
              style={
                Object {
                  "borderColor": "#BBC0C5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#24272A",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                  "padding": 16,
                }
              }
              testID="input-token-address"
              value=""
            />
            <Text
              style={
                Object {
                  "color": "#D73847",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                  "marginTop": 15,
                }
              }
              testID="token-address-warning"
            />
          </View>
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#24272A",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                }
              }
            >
              Token Symbol
            </Text>
            <TextInput
              editable={true}
              keyboardAppearance="light"
              onBlur={[Function]}
              onChangeText={[Function]}
              onSubmitEditing={[Function]}
              placeholder="GNO"
              placeholderTextColor="#BBC0C5"
              returnKeyType="next"
              style={
                Object {
                  "borderColor": "#BBC0C5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#24272A",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                  "padding": 16,
                }
              }
              testID="input-token-symbol"
              value=""
            />
            <Text
              style={
                Object {
                  "color": "#D73847",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                  "marginTop": 15,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#24272A",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                }
              }
            >
              Token Decimal
            </Text>
            <TextInput
              editable={true}
              keyboardAppearance="light"
              keyboardType="numeric"
              maxLength={2}
              onBlur={[Function]}
              onChangeText={[Function]}
              onSubmitEditing={[Function]}
              placeholder="18"
              placeholderTextColor="#BBC0C5"
              returnKeyType="done"
              style={
                Object {
                  "borderColor": "#BBC0C5",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#24272A",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                  "padding": 16,
                }
              }
              testID="input-token-decimals"
              value=""
            />
            <Text
              style={
                Object {
                  "color": "#D73847",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontWeight": "400",
                  "marginTop": 15,
                }
              }
              testID="token-decimals-warning"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 0,
              "flexDirection": "row",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            }
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={0.2}
            disabled={false}
            onPress={[Function]}
            style={
              Array [
                Array [
                  Object {
                    "borderRadius": 100,
                    "justifyContent": "center",
                    "padding": 15,
                  },
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#535A61",
                    "borderWidth": 1,
                  },
                  Array [
                    Object {
                      "flex": 1,
                    },
                    Object {
                      "marginRight": 8,
                    },
                  ],
                ],
                null,
              ]
            }
            testID="add-custom-asset-cancel-button"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007aff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "textAlign": "center",
                  },
                  null,
                  Array [
                    Object {
                      "fontFamily": "EuclidCircularB-Bold",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#535A61",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              CANCEL
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            disabled={true}
            style={
              Array [
                Array [
                  Object {
                    "borderRadius": 100,
                    "justifyContent": "center",
                    "padding": 15,
                  },
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#0376C9",
                    "borderWidth": 1,
                  },
                  Array [
                    Object {
                      "flex": 1,
                    },
                    Object {
                      "marginLeft": 8,
                    },
                    Object {},
                    Object {},
                  ],
                ],
                Object {
                  "opacity": 0.6,
                },
              ]
            }
            testID="add-custom-asset-confirm-button"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007aff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#dcdcdc",
                  },
                  Array [
                    Object {
                      "fontFamily": "EuclidCircularB-Bold",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#0376C9",
                    },
                    undefined,
                  ],
                  Object {
                    "opacity": 0.6,
                  },
                ]
              }
            >
              IMPORT
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
