// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecuritySettings should render correctly 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
  testID="app-settings-screen"
>
  <ScrollView
    contentContainerStyle={
      Object {
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingVertical": 20,
      }
    }
  >
    <ActionModal
      cancelButtonMode="neutral"
      cancelTestID=""
      cancelText="NEVERMIND"
      confirmButtonMode="warning"
      confirmTestID=""
      confirmText="RESET"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Roboto",
              "fontSize": 22,
              "fontWeight": "600",
              "textAlign": "center",
            }
          }
        >
          Reset Account?
        </Text>
        <Text
          style={
            Object {
              "fontFamily": "Roboto",
              "fontSize": 18,
              "fontWeight": "400",
              "textAlign": "center",
            }
          }
        >
          Resetting your account will clear your transaction history.
        </Text>
      </View>
    </ActionModal>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Auto-lock
      </Text>
      <View>
        <SelectComponent
          label="Auto-lock"
          onValueChange={[Function]}
          options={
            Array [
              Object {
                "key": "0",
                "label": "Immediately",
                "value": "0",
              },
              Object {
                "key": "5000",
                "label": "After 5 seconds",
                "value": "5000",
              },
              Object {
                "key": "15000",
                "label": "After 15 seconds",
                "value": "15000",
              },
              Object {
                "key": "30000",
                "label": "After 30 seconds",
                "value": "30000",
              },
              Object {
                "key": "60000",
                "label": "After 60 seconds",
                "value": "60000",
              },
              Object {
                "key": "300000",
                "label": "After 300 seconds",
                "value": "300000",
              },
              Object {
                "key": "600000",
                "label": "After 600 seconds",
                "value": "600000",
              },
              Object {
                "key": "-1",
                "label": "Never",
                "value": "-1",
              },
            ]
          }
          selectedValue="0"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Reveal Seed Words
      </Text>
      <StyledButton
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="warning"
      >
        REVEAL SEED WORDS
      </StyledButton>
    </View>
  </ScrollView>
</SafeAreaView>
`;
