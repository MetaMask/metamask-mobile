/* eslint-disable @typescript-eslint/no-unused-vars */
import { IOnRampSdk, Location } from './IOnRampSdk';

class MockedOnRampSdk implements IOnRampSdk {
	init(): Promise<void> {
		return Promise.resolve();
	}

	async getCountry(id: string): Promise<any> {
		return (await this.getCountries()).filter((c) => c.id === id)[0];
	}

	getCountries(): Promise<any[]> {
		return Promise.resolve([
			{
				id: '/countries/us',
				name: 'United States of America',
				currency: '/currencies/fiat/usd',
				regions: [
					{ id: '/countries/us/regions/alabama', name: 'Alabama' },
					{ id: '/countries/us/regions/alaska', name: 'Alaska' },
					{ id: '/countries/us/regions/arizona', name: 'Arizona' },
					{ id: '/countries/us/regions/arkansas', name: 'Arkansas' },
					{ id: '/countries/us/regions/california', name: 'California' },
					{
						id: '/countries/us/regions/new-york',
						name: 'New York',
						unsupported: true,
					},
				],
			},
			{
				id: '/countries/france',
				name: 'France',
				currency: 'currencies/fiat/eur',
			},
		]);
	}

	async getRegions(countryId: string): Promise<any[]> {
		return (await this.getCountry(countryId))?.regions;
	}

	getPaymentMethods(location: Location): Promise<any[]> {
		return Promise.resolve([
			{
				id: '/payments/apple-pay',
				name: 'Apple Pay',
				logo: '',
				delay: 'mediumDeposit',
				amountTier: 1,
			},
			{
				id: '/payments/debit-credit-card',
				name: 'Debit or Credit',
				logo: '',
				delay: 'mediumDeposit',
				amountTier: 1,
			},
			{
				id: '/payments/bank-account',
				name: 'Bank Account',
				logo: '',
				delay: 'mediumDeposit',
				amountTier: 1,
			},
		]);
	}

	async getPaymentMethod(location: Location, id: string): Promise<any[]> {
		return (await this.getPaymentMethods(location)).find((p) => p.id === id);
	}

	getCryptoCurrencies(location: Location, paymentMethodId: string): Promise<any[]> {
		return Promise.resolve([
			{
				address: '',
				aggregators: ['aave'],
				decimals: 18,
				iconUrl: 'https://crypto.com/price/coin-data/icon/ETH/color_icon.png',
				name: 'Ethereum',
				occurrences: 11,
				symbol: 'ETH',
				network: 'ethereum',
			},
			{
				address: '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f',
				aggregators: [
					'aave',
					'bancor',
					'cmc',
					'cryptocom',
					'coinGecko',
					'oneInch',
					'paraswap',
					'pmm',
					'synthetix',
					'zapper',
					'zerion',
					'zeroEx',
				],
				decimals: 18,
				iconUrl: 'https://assets.coingecko.com/coins/images/3406/large/SNX.png',
				name: 'Synthetix Network Token',
				occurrences: 12,
				symbol: 'SNX',
				network: 'ethereum',
			},
			{
				address: '0x6b175474e89094c44da98b954eedeac495271d0f',
				aggregators: [
					'aave',
					'bancor',
					'cmc',
					'cryptocom',
					'coinGecko',
					'oneInch',
					'paraswap',
					'pmm',
					'zapper',
					'zerion',
					'zeroEx',
				],
				decimals: 18,
				iconUrl: 'https://crypto.com/price/coin-data/icon/DAI/color_icon.png',
				name: 'Dai Stablecoin',
				occurrences: 11,
				symbol: 'DAI',
				network: 'ethereum',
			},
			{
				address: '0x514910771af9ca656af840dff83e8264ecf986ca',
				aggregators: [
					'aave',
					'bancor',
					'cmc',
					'cryptocom',
					'coinGecko',
					'oneInch',
					'paraswap',
					'pmm',
					'zapper',
					'zerion',
					'zeroEx',
				],
				decimals: 18,
				iconUrl: 'https://crypto.com/price/coin-data/icon/LINK/color_icon.png',
				name: 'Chainlink Token',
				occurrences: 11,
				symbol: 'LINK',
				network: 'ethereum',
			},
			{
				address: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2',
				aggregators: [
					'aave',
					'bancor',
					'cmc',
					'cryptocom',
					'coinGecko',
					'oneInch',
					'paraswap',
					'pmm',
					'zapper',
					'zerion',
					'zeroEx',
				],
				decimals: 18,
				iconUrl: 'https://crypto.com/price/coin-data/icon/MKR/color_icon.png',
				name: 'Maker',
				occurrences: 11,
				symbol: 'MKR',
				network: 'ethereum',
			},
			{
				address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',
				aggregators: [
					'aave',
					'bancor',
					'cmc',
					'cryptocom',
					'coinGecko',
					'oneInch',
					'paraswap',
					'pmm',
					'zapper',
					'zerion',
					'zeroEx',
				],
				decimals: 8,
				iconUrl:
					'https://images.prismic.io/token-price-prod/c27778b1-f402-45f0-9225-f24f24b0518a_WBTC-xxxhdpi.png',
				name: 'Wrapped BTC',
				occurrences: 11,
				symbol: 'WBTC',
				network: 'ethereum',
			},
		]);
	}

	getFiatCurrencies(location: Location, paymentMethodId: string): Promise<any[]> {
		return Promise.resolve([
			{ id: '/currencies/fiat/usd', symbol: 'USD' },
			{ id: '/currencies/fiat/eur', symbol: 'EUR' },
			{ id: '/currencies/fiat/gbp', symbol: 'GBP' },
			{ id: '/currencies/fiat/aud', symbol: 'AUD' },
			{ id: '/currencies/fiat/cad', symbol: 'CAD' },
			{ id: '/currencies/fiat/nzd', symbol: 'NZD' },
			{ id: '/currencies/fiat/ars', symbol: 'ARS' },
			{ id: '/currencies/fiat/brl', symbol: 'BRL' },
			{ id: '/currencies/fiat/chf', symbol: 'CHF' },
			{ id: '/currencies/fiat/clp', symbol: 'CLP' },
			{ id: '/currencies/fiat/cny', symbol: 'CNY' },
			{ id: '/currencies/fiat/cop', symbol: 'COP' },
			{ id: '/currencies/fiat/czk', symbol: 'CZK' },
			{ id: '/currencies/fiat/dkk', symbol: 'DKK' },
			{ id: '/currencies/fiat/hkd', symbol: 'HKD' },
			{ id: '/currencies/fiat/ils', symbol: 'ILS' },
			{ id: '/currencies/fiat/inr', symbol: 'INR' },
			{ id: '/currencies/fiat/isk', symbol: 'ISK' },
			{ id: '/currencies/fiat/jpy', symbol: 'JPY' },
			{ id: '/currencies/fiat/krw', symbol: 'KRW' },
			{ id: '/currencies/fiat/mxn', symbol: 'MXN' },
			{ id: '/currencies/fiat/myr', symbol: 'MYR' },
			{ id: '/currencies/fiat/nok', symbol: 'NOK' },
			{ id: '/currencies/fiat/php', symbol: 'PHP' },
			{ id: '/currencies/fiat/pln', symbol: 'PLN' },
			{ id: '/currencies/fiat/sek', symbol: 'SEK' },
			{ id: '/currencies/fiat/thb', symbol: 'THB' },
			{ id: '/currencies/fiat/vnd', symbol: 'VND' },
			{ id: '/currencies/fiat/zar', symbol: 'ZAR' },
		]);
	}

	getProviders(location: Location, paymentMethod: string, crypto: string, fiat: string, amount: number) {
		return Promise.resolve([
			{
				id: '/providers/wyre',
				name: 'Wyre',
				quote: 'https://api.testwyre.com/v3/orders/quote/partner?sourceAmount={fiatAmount}&amountIncludeFees=true&sourceCurrency={fiatCurrency}&destCurrency={cryptoCurrency}&dest={reciever}&accountId={accountId}&country={location}&walletType={paymentMethod}',
				quoteTransformation: {
					crypto: 'destCurrency',
					fiat: 'sourceCurrency',
					amountIn: 'sourceAmount',
					amountOut: 'destAmount',
				},
				data: '',
				supportedCryptoCurrencies: [
					'/currencies/crypto/ethereum/aave',
					'/currencies/crypto/ethereum/bat',
					'/currencies/crypto/ethereum/busd',
					'/currencies/crypto/ethereum/comp',
					'/currencies/crypto/ethereum/crv',
					'/currencies/crypto/ethereum/dai',
					'/currencies/crypto/ethereum/eth',
					'/currencies/crypto/ethereum/gusd',
					'/currencies/crypto/ethereum/link',
					'/currencies/crypto/ethereum/mkr',
					'/currencies/crypto/ethereum/pax',
					'/currencies/crypto/ethereum/snx',
					'/currencies/crypto/ethereum/uma',
					'/currencies/crypto/ethereum/uni',
					'/currencies/crypto/ethereum/usdc',
					'/currencies/crypto/ethereum/rai',
					'/currencies/crypto/ethereum/usds',
					'/currencies/crypto/ethereum/usdt',
					'/currencies/crypto/ethereum/wbtc',
					'/currencies/crypto/ethereum/yfi',
					'/currencies/crypto/ethereum/zusd',
					'/currencies/crypto/avalanche/avax',
					'/currencies/crypto/polygon/musdc',
					'/currencies/crypto/algorand/ausdt',
					'/currencies/crypto/algorand/ausdc',
				],
				supportedFiatCurrencies: [
					'/currencies/fiat/usd',
					'/currencies/fiat/eur',
					'/currencies/fiat/gbp',
					'/currencies/fiat/aud',
					'/currencies/fiat/cad',
					'/currencies/fiat/nzd',
					'/currencies/fiat/ars',
					'/currencies/fiat/brl',
					'/currencies/fiat/chf',
					'/currencies/fiat/clp',
					'/currencies/fiat/cny',
					'/currencies/fiat/cop',
					'/currencies/fiat/czk',
					'/currencies/fiat/dkk',
					'/currencies/fiat/hkd',
					'/currencies/fiat/ils',
					'/currencies/fiat/inr',
					'/currencies/fiat/isk',
					'/currencies/fiat/jpy',
					'/currencies/fiat/krw',
					'/currencies/fiat/mxn',
					'/currencies/fiat/myr',
					'/currencies/fiat/nok',
					'/currencies/fiat/php',
					'/currencies/fiat/pln',
					'/currencies/fiat/sek',
					'/currencies/fiat/thb',
					'/currencies/fiat/vnd',
					'/currencies/fiat/zar',
				],
				supportedCountries: [
					{ id: '/countries/cl', regions: [] },
					{ id: '/countries/fr', regions: [] },
					{ id: '/countries/gb', regions: [] },
					{
						id: '/countries/us',
						regions: [
							{ id: '/countries/us/regions/alabama' },
							{ id: '/countries/us/regions/alaska' },
							{ id: '/countries/us/regions/arizona' },
							{ id: '/countries/us/regions/arkansas' },
							{ id: '/countries/us/regions/california' },
							{ id: '/countries/us/regions/new-york' },
						],
					},
					{ id: '/countries/dz', regions: [] },
					{ id: '/countries/ar', regions: [] },
					{ id: '/countries/au', regions: [] },
					{ id: '/countries/at', regions: [] },
					{ id: '/countries/be', regions: [] },
					{ id: '/countries/bo', regions: [] },
					{ id: '/countries/br', regions: [] },
					{ id: '/countries/ca', regions: [] },
					{ id: '/countries/co', regions: [] },
					{ id: '/countries/cr', regions: [] },
					{ id: '/countries/cy', regions: [] },
					{ id: '/countries/cz', regions: [] },
					{ id: '/countries/dk', regions: [] },
					{ id: '/countries/do', regions: [] },
					{ id: '/countries/ee', regions: [] },
					{ id: '/countries/fi', regions: [] },
					{ id: '/countries/de', regions: [] },
					{ id: '/countries/gr', regions: [] },
					{ id: '/countries/hk', regions: [] },
					{ id: '/countries/is', regions: [] },
					{ id: '/countries/in', regions: [] },
					{ id: '/countries/id', regions: [] },
					{ id: '/countries/ie', regions: [] },
					{ id: '/countries/il', regions: [] },
					{ id: '/countries/it', regions: [] },
					{ id: '/countries/jp', regions: [] },
					{ id: '/countries/kr', regions: [] },
					{ id: '/countries/lv', regions: [] },
					{ id: '/countries/lt', regions: [] },
					{ id: '/countries/lu', regions: [] },
					{ id: '/countries/my', regions: [] },
					{ id: '/countries/mx', regions: [] },
					{ id: '/countries/np', regions: [] },
					{ id: '/countries/nl', regions: [] },
					{ id: '/countries/nz', regions: [] },
					{ id: '/countries/no', regions: [] },
					{ id: '/countries/py', regions: [] },
					{ id: '/countries/pe', regions: [] },
					{ id: '/countries/ph', regions: [] },
					{ id: '/countries/pl', regions: [] },
					{ id: '/countries/pt', regions: [] },
					{ id: '/countries/sg', regions: [] },
					{ id: '/countries/sk', regions: [] },
					{ id: '/countries/si', regions: [] },
					{ id: '/countries/za', regions: [] },
					{ id: '/countries/es', regions: [] },
					{ id: '/countries/se', regions: [] },
					{ id: '/countries/ch', regions: [] },
					{ id: '/countries/tz', regions: [] },
					{ id: '/countries/th', regions: [] },
					{ id: '/countries/tr', regions: [] },
					{ id: '/countries/vn', regions: [] },
				],
				supportedPaymentMethods: ['/payments/apple-pay', '/payments/debit-credit-card'],
			},
			{
				id: '/providers/transak',
				name: 'Transak',
				quote: 'https://api.transak.com/api/v2/currencies/price?fiatCurrency={fiatCurrency}&cryptoCurrency={cryptoCurrency}&isBuyOrSell={isBuyOrSell}&paymentMethod={paymentMethod}&network={network}&fiatAmount={fiatAmount}',
				quoteTransformation: {
					crypto: 'response.cryptoCurrency',
					fiat: 'response.fiatCurrency',
					amountIn: 'response.fiatAmount',
					amountOut: 'response.cryptoAmount',
				},
				data: '',
				supportedCryptoCurrencies: [
					'/currencies/crypto/ethereum/dai',
					'/currencies/crypto/ethereum/eth',
					'/currencies/crypto/ethereum/uni',
					'/currencies/crypto/ethereum/usdc',
					'/currencies/crypto/ethereum/usdt',
					'/currencies/crypto/avalanche/avax',
				],
				supportedFiatCurrencies: [
					'/currencies/fiat/usd',
					'/currencies/fiat/eur',
					'/currencies/fiat/gbp',
					'/currencies/fiat/aud',
					'/currencies/fiat/cad',
					'/currencies/fiat/nzd',
					'/currencies/fiat/ars',
					'/currencies/fiat/brl',
					'/currencies/fiat/chf',
					'/currencies/fiat/clp',
					'/currencies/fiat/czk',
					'/currencies/fiat/dkk',
					'/currencies/fiat/ils',
					'/currencies/fiat/inr',
					'/currencies/fiat/isk',
					'/currencies/fiat/jpy',
					'/currencies/fiat/krw',
					'/currencies/fiat/mxn',
					'/currencies/fiat/myr',
					'/currencies/fiat/nok',
					'/currencies/fiat/php',
					'/currencies/fiat/pln',
					'/currencies/fiat/sek',
					'/currencies/fiat/thb',
					'/currencies/fiat/zar',
				],
				supportedCountries: [
					{ id: '/countries/cl', regions: [] },
					{ id: '/countries/fr', regions: [] },
					{ id: '/countries/gb', regions: [] },
					{
						id: '/countries/us',
						regions: [
							{ id: '/countries/us/regions/alabama' },
							{ id: '/countries/us/regions/alaska' },
							{ id: '/countries/us/regions/arizona' },
							{ id: '/countries/us/regions/arkansas' },
							{ id: '/countries/us/regions/california' },
							{ id: '/countries/us/regions/new-york' },
						],
					},
					{ id: '/countries/dz', regions: [] },
					{ id: '/countries/ar', regions: [] },
					{ id: '/countries/au', regions: [] },
					{ id: '/countries/at', regions: [] },
					{ id: '/countries/bb', regions: [] },
					{ id: '/countries/be', regions: [] },
					{ id: '/countries/bm', regions: [] },
					{ id: '/countries/br', regions: [] },
					{ id: '/countries/bg', regions: [] },
					{ id: '/countries/ca', regions: [] },
					{ id: '/countries/cr', regions: [] },
					{ id: '/countries/hr', regions: [] },
					{ id: '/countries/cy', regions: [] },
					{ id: '/countries/cz', regions: [] },
					{ id: '/countries/dk', regions: [] },
					{ id: '/countries/do', regions: [] },
					{ id: '/countries/ee', regions: [] },
					{ id: '/countries/fk', regions: [] },
					{ id: '/countries/fj', regions: [] },
					{ id: '/countries/fi', regions: [] },
					{ id: '/countries/de', regions: [] },
					{ id: '/countries/gi', regions: [] },
					{ id: '/countries/gr', regions: [] },
					{ id: '/countries/hu', regions: [] },
					{ id: '/countries/is', regions: [] },
					{ id: '/countries/in', regions: [] },
					{ id: '/countries/id', regions: [] },
					{ id: '/countries/ie', regions: [] },
					{ id: '/countries/il', regions: [] },
					{ id: '/countries/it', regions: [] },
					{ id: '/countries/jm', regions: [] },
					{ id: '/countries/jp', regions: [] },
					{ id: '/countries/ke', regions: [] },
					{ id: '/countries/kr', regions: [] },
					{ id: '/countries/la', regions: [] },
					{ id: '/countries/lv', regions: [] },
					{ id: '/countries/lt', regions: [] },
					{ id: '/countries/lu', regions: [] },
					{ id: '/countries/my', regions: [] },
					{ id: '/countries/mt', regions: [] },
					{ id: '/countries/mx', regions: [] },
					{ id: '/countries/md', regions: [] },
					{ id: '/countries/nl', regions: [] },
					{ id: '/countries/nz', regions: [] },
					{ id: '/countries/no', regions: [] },
					{ id: '/countries/py', regions: [] },
					{ id: '/countries/pe', regions: [] },
					{ id: '/countries/ph', regions: [] },
					{ id: '/countries/pl', regions: [] },
					{ id: '/countries/pt', regions: [] },
					{ id: '/countries/ro', regions: [] },
					{ id: '/countries/sg', regions: [] },
					{ id: '/countries/sk', regions: [] },
					{ id: '/countries/si', regions: [] },
					{ id: '/countries/za', regions: [] },
					{ id: '/countries/es', regions: [] },
					{ id: '/countries/se', regions: [] },
					{ id: '/countries/ch', regions: [] },
					{ id: '/countries/tz', regions: [] },
					{ id: '/countries/th', regions: [] },
					{ id: '/countries/tr', regions: [] },
				],
				supportedPaymentMethods: ['/payments/debit-credit-card', '/payments/bank-account'],
			},
		]);
	}

	getQuote(
		providerId: string,
		location: Location,
		paymentMethod: string,
		crypto: string,
		network: string,
		fiat: string,
		amount: number
	): Promise<any> {
		return Promise.resolve({
			providerId: '/providers/transak',
			providerName: 'Transak',
			cryptoOut: {
				currency: '/currencies/crypto/usdt',
				amount: 279.34,
			},
			fiatOut: {
				currency: '/currencies/fiat/usd',
				amount: 279.71,
			},
			fees: {
				total: {
					currency: '/currencies/fiat/usd',
					amount: 20.29,
				},
			},
			total: {
				currency: '/currencies/fiat/usd',
				amount: 300,
			},
		});
	}

	getQuotes(
		location: Location,
		paymentMethod: string,
		crypto: string,
		network: string,
		fiat: string,
		amount: number
	): Promise<any> {
		return Promise.resolve([
			{
				crypto: 'ETH',
				fiat: 'USD',
				amountIn: 500,
				amountOut: 0.1490435173820591,
				netwrokFee: 0.000063,
				providerFee: 19.05,
				buyURL: 'https://pay.testwyre.com/purchase?accountId=AC_A3QW2Q4V3AN&amount=500&utm_campaign=AC_A3QW2Q4V3AN&destCurrency=ETH&utm_medium=widget&paymentMethod=debit-card&reservation=P3MG7FVBRZQTM6Y7GUNX&sourceCurrency=USD&dest=ethereum%3A0x9E01E0E60dF079136a7a1d4ed97d709D5Fe3e341&utm_source=checkout',
				providerId: '/providers/wyre',
				providerName: 'Wyre',
			},
			{
				crypto: 'ETH',
				fiat: 'USD',
				amountIn: 500,
				amountOut: 0.15375712,
				netwrokFee: 3.12,
				providerFee: 19.95,
				buyURL: 'https://staging-global.transak.com?apiKey=ebbeabce-0dc7-4aed-90b0-dec30f717264&fiatCurrency=USD&cryptoCurrencyCode=ETH&fiatAmount=500&paymentMethod=credit_debit_card&network=ethereum&walletAddress=0x9E01E0E60dF079136a7a1d4ed97d709D5Fe3e341',
				providerId: '/providers/transak',
				providerName: 'Transak',
			},
		]);
	}

	buildTransakSdkParameters(
		location: Location,
		paymentMethod: string,
		crypto: string,
		network: string,
		fiat: string,
		amount: number
	): Promise<any> {
		return Promise.resolve({
			apiKey: 'MOCK_API_KEY', // Your API Key
			environment: 'STAGING', // STAGING/PRODUCTION
			defaultCryptoCurrency: crypto,
			walletAddress: '', // Your customer's wallet address
			themeColor: '000000', // App theme color
			fiatCurrency: fiat, // INR/GBP
			email: '', // Your customer's email address
			redirectURL: '',
			// hostURL: window.location.origin,
			widgetHeight: '550px',
			widgetWidth: '450px',
		});
	}
}

export default MockedOnRampSdk;
