// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RevealPrivateCredential handles keyring ID parameter correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
      },
    ]
  }
  testID="reveal-private-credential-screen"
>
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        {
          "flex": 1,
        }
      }
      contentInset={
        {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
      testID="reveal-credential-scroll"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <RCTScrollView
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                  }
                }
              >
                Your
                 
                <Text
                  accessibilityRole="text"
                  onPress={[Function]}
                  style={
                    {
                      "color": "#4459ff",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  Secret Recovery Phrase
                </Text>
                 
                gives
                 
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  full access to your wallet, funds and accounts.


                </Text>
                MetaMask is a
                 
                <Text
                  accessibilityRole="text"
                  onPress={[Function]}
                  style={
                    {
                      "color": "#4459ff",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  non-custodial wallet.
                   
                </Text>
                That means,
                 
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  you are the owner of your Secret Recovery Phrase.
                </Text>
              </Text>
              <View
                style={
                  [
                    {
                      "padding": 20,
                    },
                    {
                      "backgroundColor": "#ca35421a",
                      "borderColor": "#ca3542",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "marginTop": 16,
                      "padding": 20,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "flexShrink": 1,
                        "width": "100%",
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#ca3542"
                    fill="currentColor"
                    height={24}
                    name="EyeSlash"
                    style={
                      {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    width={24}
                  />
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#121314",
                        "fontFamily": "CentraNo1-Book",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 24,
                        "marginLeft": 10,
                        "marginRight": 40,
                      }
                    }
                  >
                    Make sure nobody is looking at your screen. 
                    <Text
                      accessibilityRole="text"
                      style={
                        {
                          "color": "#121314",
                          "fontFamily": "CentraNo1-Bold",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "letterSpacing": 0,
                          "lineHeight": 24,
                        }
                      }
                    >
                      MetaMask Support will never request this.
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Medium",
                    "fontSize": 16,
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginBottom": 4,
                  }
                }
              >
                Enter password to continue
              </Text>
              <TextInput
                keyboardAppearance="light"
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Password"
                placeholderTextColor="#b7bbc8"
                secureTextEntry={true}
                style={
                  {
                    "borderColor": "#b7bbc8",
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "color": "#121314",
                    "padding": 10,
                  }
                }
                testID="private-credential-password-text-input"
              />
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#ca3542",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginTop": 10,
                  }
                }
                testID="password-warning"
              />
            </View>
          </View>
        </RCTScrollView>
        <View
          style={
            [
              {
                "flexDirection": "row",
                "gap": 16,
                "paddingHorizontal": 16,
                "paddingVertical": 16,
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            disabled={true}
            loading={false}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "#121314",
                "borderRadius": 12,
                "flex": 1,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 0.5,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
            testID="reveal-private-credential-next-button"
          >
            <Text
              accessibilityRole="text"
              style={
                {
                  "color": "#ffffff",
                  "fontFamily": "Geist Medium",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "lineHeight": 24,
                }
              }
            >
              Next
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View />
</View>
`;

exports[`RevealPrivateCredential renders reveal SRP correctly when the credential is directly passed 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
      },
    ]
  }
  testID="reveal-private-credential-screen"
>
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        {
          "flex": 1,
        }
      }
      contentInset={
        {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
      testID="reveal-credential-scroll"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <RCTScrollView
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                  }
                }
              >
                Your
                 
                <Text
                  accessibilityRole="text"
                  onPress={[Function]}
                  style={
                    {
                      "color": "#4459ff",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  Secret Recovery Phrase
                </Text>
                 
                gives
                 
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  full access to your wallet, funds and accounts.


                </Text>
                MetaMask is a
                 
                <Text
                  accessibilityRole="text"
                  onPress={[Function]}
                  style={
                    {
                      "color": "#4459ff",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  non-custodial wallet.
                   
                </Text>
                That means,
                 
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  you are the owner of your Secret Recovery Phrase.
                </Text>
              </Text>
              <View
                style={
                  [
                    {
                      "padding": 20,
                    },
                    {
                      "backgroundColor": "#ca35421a",
                      "borderColor": "#ca3542",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "marginTop": 16,
                      "padding": 20,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "flexShrink": 1,
                        "width": "100%",
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#ca3542"
                    fill="currentColor"
                    height={24}
                    name="EyeSlash"
                    style={
                      {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    width={24}
                  />
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#121314",
                        "fontFamily": "CentraNo1-Book",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 24,
                        "marginLeft": 10,
                        "marginRight": 40,
                      }
                    }
                  >
                    Make sure nobody is looking at your screen. 
                    <Text
                      accessibilityRole="text"
                      style={
                        {
                          "color": "#121314",
                          "fontFamily": "CentraNo1-Bold",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "letterSpacing": 0,
                          "lineHeight": 24,
                        }
                      }
                    >
                      MetaMask Support will never request this.
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Medium",
                    "fontSize": 16,
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginBottom": 4,
                  }
                }
              >
                Enter password to continue
              </Text>
              <TextInput
                keyboardAppearance="light"
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Password"
                placeholderTextColor="#b7bbc8"
                secureTextEntry={true}
                style={
                  {
                    "borderColor": "#b7bbc8",
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "color": "#121314",
                    "padding": 10,
                  }
                }
                testID="private-credential-password-text-input"
              />
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#ca3542",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginTop": 10,
                  }
                }
                testID="password-warning"
              />
            </View>
          </View>
        </RCTScrollView>
        <View
          style={
            [
              {
                "flexDirection": "row",
                "gap": 16,
                "paddingHorizontal": 16,
                "paddingVertical": 16,
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            disabled={true}
            loading={false}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "#121314",
                "borderRadius": 12,
                "flex": 1,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 0.5,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
            testID="reveal-private-credential-next-button"
          >
            <Text
              accessibilityRole="text"
              style={
                {
                  "color": "#ffffff",
                  "fontFamily": "Geist Medium",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "lineHeight": 24,
                }
              }
            >
              Next
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View />
</View>
`;

exports[`RevealPrivateCredential renders reveal SRP correctly when the credential is passed via the route object 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
      },
    ]
  }
  testID="reveal-private-credential-screen"
>
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        {
          "flex": 1,
        }
      }
      contentInset={
        {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
      testID="reveal-credential-scroll"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <RCTScrollView
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                  }
                }
              >
                Your
                 
                <Text
                  accessibilityRole="text"
                  onPress={[Function]}
                  style={
                    {
                      "color": "#4459ff",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  Secret Recovery Phrase
                </Text>
                 
                gives
                 
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  full access to your wallet, funds and accounts.


                </Text>
                MetaMask is a
                 
                <Text
                  accessibilityRole="text"
                  onPress={[Function]}
                  style={
                    {
                      "color": "#4459ff",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  non-custodial wallet.
                   
                </Text>
                That means,
                 
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  you are the owner of your Secret Recovery Phrase.
                </Text>
              </Text>
              <View
                style={
                  [
                    {
                      "padding": 20,
                    },
                    {
                      "backgroundColor": "#ca35421a",
                      "borderColor": "#ca3542",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "marginTop": 16,
                      "padding": 20,
                    },
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "flexShrink": 1,
                        "width": "100%",
                      },
                    ]
                  }
                >
                  <SvgMock
                    color="#ca3542"
                    fill="currentColor"
                    height={24}
                    name="EyeSlash"
                    style={
                      {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    width={24}
                  />
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#121314",
                        "fontFamily": "CentraNo1-Book",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 24,
                        "marginLeft": 10,
                        "marginRight": 40,
                      }
                    }
                  >
                    Make sure nobody is looking at your screen. 
                    <Text
                      accessibilityRole="text"
                      style={
                        {
                          "color": "#121314",
                          "fontFamily": "CentraNo1-Bold",
                          "fontSize": 16,
                          "fontWeight": "600",
                          "letterSpacing": 0,
                          "lineHeight": 24,
                        }
                      }
                    >
                      MetaMask Support will never request this.
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Medium",
                    "fontSize": 16,
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginBottom": 4,
                  }
                }
              >
                Enter password to continue
              </Text>
              <TextInput
                keyboardAppearance="light"
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Password"
                placeholderTextColor="#b7bbc8"
                secureTextEntry={true}
                style={
                  {
                    "borderColor": "#b7bbc8",
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "color": "#121314",
                    "padding": 10,
                  }
                }
                testID="private-credential-password-text-input"
              />
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#ca3542",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginTop": 10,
                  }
                }
                testID="password-warning"
              />
            </View>
          </View>
        </RCTScrollView>
        <View
          style={
            [
              {
                "flexDirection": "row",
                "gap": 16,
                "paddingHorizontal": 16,
                "paddingVertical": 16,
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            disabled={true}
            loading={false}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "#121314",
                "borderRadius": 12,
                "flex": 1,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 0.5,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
            testID="reveal-private-credential-next-button"
          >
            <Text
              accessibilityRole="text"
              style={
                {
                  "color": "#ffffff",
                  "fontFamily": "Geist Medium",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "lineHeight": 24,
                }
              }
            >
              Next
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View />
</View>
`;

exports[`RevealPrivateCredential renders reveal private key correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
      },
    ]
  }
  testID="reveal-private-credential-screen"
>
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        {
          "flex": 1,
        }
      }
      contentInset={
        {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
      testID="reveal-credential-scroll"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <RCTScrollView
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                flexDirection="column"
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "backgroundColor": "#ffffff",
                      "borderRadius": 8,
                      "height": 32,
                      "marginBottom": 8,
                      "overflow": "hidden",
                      "width": 32,
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "overflow": "hidden",
                        },
                        {
                          "backgroundColor": "#F3E300",
                          "borderRadius": 16,
                          "height": 32,
                          "width": 32,
                        },
                        {
                          "borderRadius": 8,
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      bbHeight={32}
                      bbWidth={32}
                      focusable={false}
                      height={32}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          {
                            "flex": 0,
                            "height": 32,
                            "width": 32,
                          },
                        ]
                      }
                      width={32}
                    >
                      <RNSVGGroup
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                      >
                        <RNSVGRect
                          fill={
                            {
                              "payload": 4294033154,
                              "type": 0,
                            }
                          }
                          height={32}
                          matrix={
                            [
                              0.8902128046111263,
                              0.455544907233516,
                              -0.455544907233516,
                              0.8902128046111263,
                              14.528038776231607,
                              -10.727483724821674,
                            ]
                          }
                          propList={
                            [
                              "fill",
                            ]
                          }
                          width={32}
                          x={0}
                          y={0}
                        />
                        <RNSVGRect
                          fill={
                            {
                              "payload": 4278285708,
                              "type": 0,
                            }
                          }
                          height={32}
                          matrix={
                            [
                              -0.6768759696826608,
                              -0.7360970871197343,
                              0.7360970871197343,
                              -0.6768759696826608,
                              12.447006179185877,
                              55.31217516436145,
                            ]
                          }
                          propList={
                            [
                              "fill",
                            ]
                          }
                          width={32}
                          x={0}
                          y={0}
                        />
                        <RNSVGRect
                          fill={
                            {
                              "payload": 4291236915,
                              "type": 0,
                            }
                          }
                          height={32}
                          matrix={
                            [
                              0.46484204572461923,
                              0.885393625754416,
                              -0.885393625754416,
                              0.46484204572461923,
                              40.698516121381054,
                              -18.19641979556168,
                            ]
                          }
                          propList={
                            [
                              "fill",
                            ]
                          }
                          width={32}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Medium",
                      "fontSize": 18,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginBottom": 8,
                    }
                  }
                >
                  Test Account
                </Text>
                <View
                  alignItems="center"
                  flexDirection="row"
                  justifyContent="center"
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      {
                        "backgroundColor": "#4459ff1a",
                        "borderRadius": 999,
                        "color": "#4459ff",
                        "gap": 4,
                        "marginBottom": 16,
                        "paddingBottom": 4,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "paddingTop": 4,
                      },
                    ]
                  }
                >
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#4459ff",
                        "fontFamily": "Geist Medium",
                        "fontSize": 18,
                        "letterSpacing": 0,
                        "lineHeight": 24,
                      }
                    }
                  >
                    0x12345...67890
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <RNGestureHandlerButton
                      collapsable={false}
                      delayLongPress={600}
                      enabled={true}
                      exclusive={true}
                      handlerTag={1}
                      handlerType="NativeViewGestureHandler"
                      innerRef={null}
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      rippleColor="transparent"
                      style={
                        [
                          undefined,
                          {
                            "cursor": undefined,
                          },
                        ]
                      }
                      testID="wallet-account-copy-button"
                      touchSoundDisabled={false}
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        style={
                          {
                            "opacity": 1,
                            "padding": 4,
                          }
                        }
                      >
                        <SvgMock
                          color="#4459ff"
                          fill="currentColor"
                          height={24}
                          name="Copy"
                          style={
                            {
                              "height": 24,
                              "width": 24,
                            }
                          }
                          width={24}
                        />
                      </View>
                    </RNGestureHandlerButton>
                  </View>
                </View>
              </View>
              <View
                style={
                  {
                    "backgroundColor": "#ca35421a",
                    "borderColor": "#ca3542",
                    "borderLeftWidth": 4,
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "padding": 12,
                    "paddingLeft": 8,
                  }
                }
                testID="banneralert"
              >
                <View
                  style={
                    {
                      "marginRight": 8,
                    }
                  }
                >
                  <SvgMock
                    color="#ca3542"
                    fill="currentColor"
                    height={24}
                    name="Danger"
                    style={
                      {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    width={24}
                  />
                </View>
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#121314",
                        "fontFamily": "Geist Medium",
                        "fontSize": 18,
                        "letterSpacing": 0,
                        "lineHeight": 24,
                      }
                    }
                  >
                    Never disclose this key.
                  </Text>
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#121314",
                        "fontFamily": "Geist Regular",
                        "fontSize": 16,
                        "letterSpacing": 0,
                        "lineHeight": 24,
                      }
                    }
                  >
                    Anyone with your private key can steal any assets held in your account.
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Medium",
                    "fontSize": 16,
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginBottom": 4,
                  }
                }
              >
                Enter password to continue
              </Text>
              <TextInput
                keyboardAppearance="light"
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Password"
                placeholderTextColor="#b7bbc8"
                secureTextEntry={true}
                style={
                  {
                    "borderColor": "#b7bbc8",
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "color": "#121314",
                    "padding": 10,
                  }
                }
                testID="private-credential-password-text-input"
              />
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#ca3542",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginTop": 10,
                  }
                }
                testID="password-warning"
              />
            </View>
          </View>
        </RCTScrollView>
        <View
          style={
            [
              {
                "flexDirection": "row",
                "gap": 16,
                "paddingHorizontal": 16,
                "paddingVertical": 16,
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            disabled={true}
            loading={false}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "#121314",
                "borderRadius": 12,
                "flex": 1,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 0.5,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
            testID="reveal-private-credential-next-button"
          >
            <Text
              accessibilityRole="text"
              style={
                {
                  "color": "#ffffff",
                  "fontFamily": "Geist Medium",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "lineHeight": 24,
                }
              }
            >
              Next
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View />
</View>
`;

exports[`RevealPrivateCredential renders with a custom selectedAddress 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
      },
    ]
  }
  testID="reveal-private-credential-screen"
>
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        {
          "flex": 1,
        }
      }
      contentInset={
        {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
      testID="reveal-credential-scroll"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <RCTScrollView
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "color": "#121314",
                    "fontFamily": "CentraNo1-Book",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                flexDirection="column"
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "column",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    {
                      "backgroundColor": "#ffffff",
                      "borderRadius": 8,
                      "height": 32,
                      "marginBottom": 8,
                      "overflow": "hidden",
                      "width": 32,
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "overflow": "hidden",
                        },
                        {
                          "backgroundColor": "#F3E300",
                          "borderRadius": 16,
                          "height": 32,
                          "width": 32,
                        },
                        {
                          "borderRadius": 8,
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      bbHeight={32}
                      bbWidth={32}
                      focusable={false}
                      height={32}
                      style={
                        [
                          {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          {
                            "flex": 0,
                            "height": 32,
                            "width": 32,
                          },
                        ]
                      }
                      width={32}
                    >
                      <RNSVGGroup
                        fill={
                          {
                            "payload": 4278190080,
                            "type": 0,
                          }
                        }
                      >
                        <RNSVGRect
                          fill={
                            {
                              "payload": 4294033154,
                              "type": 0,
                            }
                          }
                          height={32}
                          matrix={
                            [
                              0.8902128046111263,
                              0.455544907233516,
                              -0.455544907233516,
                              0.8902128046111263,
                              14.528038776231607,
                              -10.727483724821674,
                            ]
                          }
                          propList={
                            [
                              "fill",
                            ]
                          }
                          width={32}
                          x={0}
                          y={0}
                        />
                        <RNSVGRect
                          fill={
                            {
                              "payload": 4278285708,
                              "type": 0,
                            }
                          }
                          height={32}
                          matrix={
                            [
                              -0.6768759696826608,
                              -0.7360970871197343,
                              0.7360970871197343,
                              -0.6768759696826608,
                              12.447006179185877,
                              55.31217516436145,
                            ]
                          }
                          propList={
                            [
                              "fill",
                            ]
                          }
                          width={32}
                          x={0}
                          y={0}
                        />
                        <RNSVGRect
                          fill={
                            {
                              "payload": 4291236915,
                              "type": 0,
                            }
                          }
                          height={32}
                          matrix={
                            [
                              0.46484204572461923,
                              0.885393625754416,
                              -0.885393625754416,
                              0.46484204572461923,
                              40.698516121381054,
                              -18.19641979556168,
                            ]
                          }
                          propList={
                            [
                              "fill",
                            ]
                          }
                          width={32}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Medium",
                      "fontSize": 18,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                      "marginBottom": 8,
                    }
                  }
                >
                  Test Account
                </Text>
                <View
                  alignItems="center"
                  flexDirection="row"
                  justifyContent="center"
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      {
                        "backgroundColor": "#4459ff1a",
                        "borderRadius": 999,
                        "color": "#4459ff",
                        "gap": 4,
                        "marginBottom": 16,
                        "paddingBottom": 4,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "paddingTop": 4,
                      },
                    ]
                  }
                >
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#4459ff",
                        "fontFamily": "Geist Medium",
                        "fontSize": 18,
                        "letterSpacing": 0,
                        "lineHeight": 24,
                      }
                    }
                  >
                    0x12345...67890
                  </Text>
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <RNGestureHandlerButton
                      collapsable={false}
                      delayLongPress={600}
                      enabled={true}
                      exclusive={true}
                      handlerTag={3}
                      handlerType="NativeViewGestureHandler"
                      innerRef={null}
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      rippleColor="transparent"
                      style={
                        [
                          undefined,
                          {
                            "cursor": undefined,
                          },
                        ]
                      }
                      testID="wallet-account-copy-button"
                      touchSoundDisabled={false}
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        style={
                          {
                            "opacity": 1,
                            "padding": 4,
                          }
                        }
                      >
                        <SvgMock
                          color="#4459ff"
                          fill="currentColor"
                          height={24}
                          name="Copy"
                          style={
                            {
                              "height": 24,
                              "width": 24,
                            }
                          }
                          width={24}
                        />
                      </View>
                    </RNGestureHandlerButton>
                  </View>
                </View>
              </View>
              <View
                style={
                  {
                    "backgroundColor": "#ca35421a",
                    "borderColor": "#ca3542",
                    "borderLeftWidth": 4,
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "padding": 12,
                    "paddingLeft": 8,
                  }
                }
                testID="banneralert"
              >
                <View
                  style={
                    {
                      "marginRight": 8,
                    }
                  }
                >
                  <SvgMock
                    color="#ca3542"
                    fill="currentColor"
                    height={24}
                    name="Danger"
                    style={
                      {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    width={24}
                  />
                </View>
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#121314",
                        "fontFamily": "Geist Medium",
                        "fontSize": 18,
                        "letterSpacing": 0,
                        "lineHeight": 24,
                      }
                    }
                  >
                    Never disclose this key.
                  </Text>
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#121314",
                        "fontFamily": "Geist Regular",
                        "fontSize": 16,
                        "letterSpacing": 0,
                        "lineHeight": 24,
                      }
                    }
                  >
                    Anyone with your private key can steal any assets held in your account.
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "padding": 20,
                  },
                  {
                    "flex": 1,
                  },
                ]
              }
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Medium",
                    "fontSize": 16,
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginBottom": 4,
                  }
                }
              >
                Enter password to continue
              </Text>
              <TextInput
                keyboardAppearance="light"
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Password"
                placeholderTextColor="#b7bbc8"
                secureTextEntry={true}
                style={
                  {
                    "borderColor": "#b7bbc8",
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "color": "#121314",
                    "padding": 10,
                  }
                }
                testID="private-credential-password-text-input"
              />
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#ca3542",
                    "fontFamily": "CentraNo1-Book",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 24,
                    "marginTop": 10,
                  }
                }
                testID="password-warning"
              />
            </View>
          </View>
        </RCTScrollView>
        <View
          style={
            [
              {
                "flexDirection": "row",
                "gap": 16,
                "paddingHorizontal": 16,
                "paddingVertical": 16,
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            disabled={true}
            loading={false}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "#121314",
                "borderRadius": 12,
                "flex": 1,
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "opacity": 0.5,
                "overflow": "hidden",
                "paddingHorizontal": 16,
              }
            }
            testID="reveal-private-credential-next-button"
          >
            <Text
              accessibilityRole="text"
              style={
                {
                  "color": "#ffffff",
                  "fontFamily": "Geist Medium",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "lineHeight": 24,
                }
              }
            >
              Next
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View />
</View>
`;
