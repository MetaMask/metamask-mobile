// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Wallet should render correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": {
                  "alternative": "#f2f4f6",
                  "alternativeHover": "#e7ebee",
                  "alternativePressed": "#dbe0e6",
                  "default": "#ffffff",
                  "defaultHover": "#f5f5f5",
                  "defaultPressed": "#ebebeb",
                  "hover": "#0000000a",
                  "pressed": "#00000014",
                },
                "borderBottomColor": "rgb(216, 216, 216)",
                "elevation": 0,
                "flex": 1,
                "shadowColor": "transparent",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "opacity": 1,
                  "position": "absolute",
                  "top": 0,
                }
              }
            >
              <View
                style={
                  {
                    "marginLeft": 16,
                  }
                }
              >
                <TouchableOpacity
                  disabled={false}
                  onPress={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "backgroundColor": "#f2f4f6",
                      "borderRadius": 16,
                      "flexDirection": "row",
                      "height": 32,
                      "paddingHorizontal": 8,
                    }
                  }
                  testID="open-networks-button"
                >
                  <View
                    style={
                      {
                        "marginRight": 8,
                      }
                    }
                  >
                    <View
                      accessibilityLabel="Ethereum Mainnet"
                      style={
                        {
                          "alignItems": "center",
                          "backgroundColor": "#ffffff",
                          "borderRadius": 8,
                          "height": 16,
                          "justifyContent": "center",
                          "overflow": "hidden",
                          "width": 16,
                        }
                      }
                      testID="network-avatar-picker"
                    >
                      <Image
                        onError={[Function]}
                        resizeMode="contain"
                        source={
                          {
                            "default": {
                              "uri": "MockImage",
                            },
                          }
                        }
                        style={
                          {
                            "height": 16,
                            "width": 16,
                          }
                        }
                        testID="network-avatar-image"
                      />
                    </View>
                  </View>
                  <SvgMock
                    color="#141618"
                    height={12}
                    name="ArrowDown"
                    style={
                      {
                        "height": 12,
                        "width": 12,
                      }
                    }
                    testID="pickernetwork-arrow"
                    width={12}
                  />
                </TouchableOpacity>
              </View>
            </View>
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 72,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  {
                    "flex": 1,
                    "justifyContent": "center",
                    "marginTop": 5,
                  }
                }
              >
                <View
                  style={
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    }
                  }
                >
                  <TouchableOpacity
                    onPress={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "backgroundColor": "#ffffff",
                        "borderColor": "#bbc0c5",
                        "borderRadius": 4,
                        "borderWidth": 0,
                        "flexDirection": "row",
                        "padding": 0,
                      }
                    }
                    testID="account-picker"
                  >
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#ffffff",
                                "borderRadius": 8,
                                "height": 16,
                                "marginRight": 8,
                                "overflow": "hidden",
                                "width": 16,
                              }
                            }
                          >
                            <View
                              style={
                                [
                                  {
                                    "overflow": "hidden",
                                  },
                                  {
                                    "backgroundColor": "#FC4800",
                                    "borderRadius": 8,
                                    "height": 16,
                                    "width": 16,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <RNSVGSvgView
                                bbHeight={16}
                                bbWidth={16}
                                focusable={false}
                                height={16}
                                style={
                                  [
                                    {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    {
                                      "flex": 0,
                                      "height": 16,
                                      "width": 16,
                                    },
                                  ]
                                }
                                width={16}
                              >
                                <RNSVGGroup
                                  fill={
                                    {
                                      "payload": 4278190080,
                                      "type": 0,
                                    }
                                  }
                                >
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278291575,
                                        "type": 0,
                                      }
                                    }
                                    height={16}
                                    matrix={
                                      [
                                        -0.41310442982454204,
                                        -0.910683660806177,
                                        0.910683660806177,
                                        -0.41310442982454204,
                                        4.404802817153955,
                                        20.16808402411075,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={16}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4278410587,
                                        "type": 0,
                                      }
                                    }
                                    height={16}
                                    matrix={
                                      [
                                        0.903335292863301,
                                        -0.42893513340314526,
                                        0.42893513340314526,
                                        0.903335292863301,
                                        -9.297010789302583,
                                        3.362634662066926,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={16}
                                    x={0}
                                    y={0}
                                  />
                                  <RNSVGRect
                                    fill={
                                      {
                                        "payload": 4294382337,
                                        "type": 0,
                                      }
                                    }
                                    height={16}
                                    matrix={
                                      [
                                        -0.6921431738704069,
                                        -0.7217602280983622,
                                        0.7217602280983622,
                                        -0.6921431738704069,
                                        -6.169639630140347,
                                        15.20799235933167,
                                      ]
                                    }
                                    propList={
                                      [
                                        "fill",
                                      ]
                                    }
                                    width={16}
                                    x={0}
                                    y={0}
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                          <Text
                            accessibilityRole="text"
                            style={
                              {
                                "color": "#141618",
                                "fontFamily": "EuclidCircularB-Medium",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0,
                                "lineHeight": 22,
                              }
                            }
                            testID="account-label"
                          >
                            Account 2
                          </Text>
                        </View>
                      </View>
                    </View>
                    <SvgMock
                      color="#141618"
                      height={12}
                      name="ArrowDown"
                      style={
                        {
                          "height": 12,
                          "marginLeft": 8,
                          "width": 12,
                        }
                      }
                      width={12}
                    />
                  </TouchableOpacity>
                  <Text
                    accessibilityRole="text"
                    style={
                      {
                        "color": "#6a737d",
                        "fontFamily": "EuclidCircularB-Medium",
                        "fontSize": 12,
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 20,
                        "textAlign": "center",
                      }
                    }
                  >
                    0xC496...a756
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "flex-end",
                  "bottom": 0,
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "flex-end",
                    "flexDirection": "row",
                    "marginRight": 12,
                  }
                }
              >
                <View
                  style={
                    {
                      "marginHorizontal": 4,
                    }
                  }
                  testID="navbar-address-copy-button"
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <RNGestureHandlerButton
                      collapsable={false}
                      onGestureEvent={[Function]}
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      onHandlerStateChange={[Function]}
                      rippleColor={0}
                      testID="wallet-account-copy-button"
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        style={
                          {
                            "opacity": 1,
                            "padding": 4,
                          }
                        }
                      >
                        <SvgMock
                          color="#141618"
                          height={24}
                          name="Copy"
                          style={
                            {
                              "height": 24,
                              "width": 24,
                            }
                          }
                          width={24}
                        />
                      </View>
                    </RNGestureHandlerButton>
                  </View>
                </View>
                <View
                  style={
                    {
                      "marginHorizontal": 4,
                    }
                  }
                />
                <TouchableOpacity
                  accessible={true}
                  activeOpacity={1}
                  disabled={false}
                  onPress={[Function]}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "borderRadius": 8,
                      "height": 32,
                      "justifyContent": "center",
                      "opacity": 1,
                      "width": 32,
                    }
                  }
                  testID="wallet-scan-button"
                >
                  <SvgMock
                    color="#141618"
                    height={24}
                    name="ScanBarcode"
                    style={
                      {
                        "height": 24,
                        "width": 24,
                      }
                    }
                    width={24}
                  />
                </TouchableOpacity>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        pointerEvents="box-none"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "backgroundColor": "#ffffff",
                            "flex": 1,
                          }
                        }
                        testID="wallet-screen"
                      >
                        <View
                          style={
                            {
                              "marginTop": 20,
                              "paddingHorizontal": 16,
                              "widht": "80%",
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "backgroundColor": "#d738471a",
                                "borderColor": "#d73847",
                                "borderLeftWidth": 4,
                                "borderRadius": 4,
                                "flexDirection": "row",
                                "padding": 12,
                                "paddingLeft": 8,
                              }
                            }
                            testID="banneralert"
                          >
                            <View
                              style={
                                {
                                  "marginRight": 8,
                                }
                              }
                            >
                              <SvgMock
                                color="#d73847"
                                height={24}
                                name="Danger"
                                style={
                                  {
                                    "height": 24,
                                    "width": 24,
                                  }
                                }
                                width={24}
                              />
                            </View>
                            <View
                              style={
                                {
                                  "flex": 1,
                                }
                              }
                            >
                              <Text
                                accessibilityRole="text"
                                style={
                                  {
                                    "color": "#141618",
                                    "fontFamily": "EuclidCircularB-Medium",
                                    "fontSize": 16,
                                    "fontWeight": "500",
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  }
                                }
                              >
                                Basic functionality is off
                              </Text>
                              <Text
                                accessibilityRole="text"
                                onPress={[Function]}
                                style={
                                  {
                                    "color": "#0376c9",
                                    "fontFamily": "EuclidCircularB-Regular",
                                    "fontSize": 14,
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                    "lineHeight": 22,
                                  }
                                }
                              >
                                Turn on basic functionality
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
