// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecuritySettings should render correctly 1`] = `
<ScrollView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "padding": 24,
      "paddingBottom": 48,
    }
  }
  testID="security-settings-scrollview"
>
  <View
    style={
      Object {
        "paddingBottom": 112,
      }
    }
  >
    <Heading
      first={true}
    >
      Security
    </Heading>
    <View
      style={
        Array [
          Object {
            "marginTop": 50,
          },
          Object {
            "marginTop": 0,
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        <WarningIcon />
         
        <Text
          style={
            Object {
              "color": "#000000",
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 20,
              "fontWeight": "400",
              "lineHeight": 20,
            }
          }
        >
          Protect your wallet
        </Text>
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Protect your wallet by saving your seed phrase in various places like on a piece of paper, password manager and/or the cloud.
      </Text>
      <SettingsNotification
        isHighlighted={false}
        isWarning={true}
        style={Object {}}
      >
        <Text
          style={
            Array [
              Object {
                "color": "#24292E",
                "fontFamily": "EuclidCircularB-Regular",
                "fontSize": 12,
                "fontWeight": "400",
              },
              Object {
                "color": "#D73A49",
              },
              undefined,
            ]
          }
        >
          Important! Seed phrase not backed up
        </Text>
      </SettingsNotification>
      <StyledButton
        containerStyle={
          Object {
            "marginTop": 18,
          }
        }
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="blue"
      >
        Back up now
      </StyledButton>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
      testID="change-password-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Password
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Choose a strong password to unlock MetaMask app on your device. If you lose this password, you will need your seedphrase to re-import your wallet.
      </Text>
      <StyledButton
        containerStyle={
          Object {
            "marginTop": 18,
          }
        }
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="normal"
      >
        Change password
      </StyledButton>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
      testID="auto-lock-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Auto-lock
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Choose the amount of time before the application automatically locks.
      </Text>
      <View
        style={
          Object {
            "borderColor": "#bbc0c5",
            "borderRadius": 5,
            "borderWidth": 2,
            "marginTop": 16,
          }
        }
      >
        <SelectComponent
          label="Auto-lock"
          onValueChange={[Function]}
          options={
            Array [
              Object {
                "key": "0",
                "label": "Immediately",
                "value": "0",
              },
              Object {
                "key": "5000",
                "label": "After 5 seconds",
                "value": "5000",
              },
              Object {
                "key": "15000",
                "label": "After 15 seconds",
                "value": "15000",
              },
              Object {
                "key": "30000",
                "label": "After 30 seconds",
                "value": "30000",
              },
              Object {
                "key": "60000",
                "label": "After 60 seconds",
                "value": "60000",
              },
              Object {
                "key": "300000",
                "label": "After 5 minutes",
                "value": "300000",
              },
              Object {
                "key": "600000",
                "label": "After 10 minutes",
                "value": "600000",
              },
              Object {
                "key": "-1",
                "label": "Never",
                "value": "-1",
              },
            ]
          }
          selectedValue="1000"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
      testID="reveal-private-key-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Show private key for "Account 1"
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        This is the private key for the current selected account: Account 1. Never disclose this key. Anyone with your private key can fully control your account, including transferring away any of your funds.
      </Text>
      <StyledButton
        containerStyle={
          Object {
            "marginTop": 18,
          }
        }
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="normal"
      >
        Show private key
      </StyledButton>
    </View>
    <Heading>
      Privacy
    </Heading>
    <View
      style={
        Array [
          Object {
            "marginTop": 50,
          },
          Object {
            "marginTop": 0,
          },
        ]
      }
      testID="clear-privacy-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Clear privacy data
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Clear privacy data so all websites must request access to view account information again.
      </Text>
      <StyledButton
        containerStyle={
          Object {
            "marginTop": 18,
          }
        }
        disabled={true}
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="normal"
      >
        Clear privacy data
      </StyledButton>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Clear browser history
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Choose this option to clear your entire browsing history.
      </Text>
      <StyledButton
        containerStyle={
          Object {
            "marginTop": 18,
          }
        }
        disabled={true}
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="normal"
      >
        Clear browser history
      </StyledButton>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
      testID="clear-cookies-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Clear browser cookies
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Choose this option to clear your browser's cookies.
      </Text>
      <StyledButton
        containerStyle={
          Object {
            "marginTop": 18,
          }
        }
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="normal"
      >
        Clear browser cookies
      </StyledButton>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
      testID="privacy-mode-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Privacy mode
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Websites must request access to view your account information.
      </Text>
      <View
        style={
          Object {
            "marginTop": 18,
          }
        }
      >
        <Switch
          ios_backgroundColor="#f2f3f4"
          onValueChange={[Function]}
          trackColor={
            Object {
              "false": "#f2f3f4",
              "true": "#037dd6",
            }
          }
          value={true}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
      testID="metametrics-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Participate in MetaMetrics
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Participate in MetaMetrics to help us make MetaMask better.
      </Text>
      <View
        style={
          Object {
            "marginTop": 18,
          }
        }
      >
        <Switch
          ios_backgroundColor="#f2f3f4"
          onValueChange={[Function]}
          testID="metametrics-switch"
          trackColor={
            Object {
              "false": "#f2f3f4",
              "true": "#037dd6",
            }
          }
          value={false}
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 50,
        }
      }
      testID="third-party-section"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 20,
            "fontWeight": "400",
            "lineHeight": 20,
          }
        }
      >
        Get incoming transactions
      </Text>
      <Text
        style={
          Object {
            "color": "#6a737d",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
            "marginTop": 12,
          }
        }
      >
        Third party APIs (Etherscan) are used to show your incoming transactions in the history. Turn off if you don’t want us to pull data from those services.
      </Text>
      <View
        style={
          Object {
            "marginTop": 18,
          }
        }
      >
        <Switch
          ios_backgroundColor="#f2f3f4"
          onValueChange={[Function]}
          trackColor={
            Object {
              "false": "#f2f3f4",
              "true": "#037dd6",
            }
          }
        />
      </View>
    </View>
    <ActionModal
      cancelButtonDisabled={false}
      cancelButtonMode="neutral"
      cancelTestID=""
      cancelText="Cancel"
      confirmButtonMode="warning"
      confirmDisabled={false}
      confirmTestID=""
      confirmText="CLEAR"
      displayCancelButton={true}
      displayConfirmButton={true}
      modalVisible={false}
      onCancelPress={[Function]}
      onConfirmPress={[Function]}
      onRequestClose={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "EuclidCircularB-Bold",
              "fontSize": 22,
              "fontWeight": "600",
              "marginBottom": 20,
              "textAlign": "center",
            }
          }
        >
          Clear Approval Data?
        </Text>
        <Text
          style={
            Object {
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 18,
              "fontWeight": "400",
              "textAlign": "center",
            }
          }
        >
          All dapps will need to request access to view account information again.
        </Text>
      </View>
    </ActionModal>
    <ActionModal
      cancelButtonDisabled={false}
      cancelButtonMode="neutral"
      cancelTestID=""
      cancelText="Cancel"
      confirmButtonMode="warning"
      confirmDisabled={false}
      confirmTestID=""
      confirmText="CLEAR"
      displayCancelButton={true}
      displayConfirmButton={true}
      modalVisible={false}
      onCancelPress={[Function]}
      onConfirmPress={[Function]}
      onRequestClose={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "EuclidCircularB-Bold",
              "fontSize": 22,
              "fontWeight": "600",
              "marginBottom": 20,
              "textAlign": "center",
            }
          }
        >
          Clear Browser History?
        </Text>
        <Text
          style={
            Object {
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 18,
              "fontWeight": "400",
              "textAlign": "center",
            }
          }
        >
          We are about to remove all your browser history. Are you sure?
        </Text>
      </View>
    </ActionModal>
    <ActionModal
      cancelButtonDisabled={false}
      cancelButtonMode="neutral"
      cancelTestID=""
      cancelText="Cancel"
      confirmButtonMode="warning"
      confirmDisabled={false}
      confirmTestID=""
      confirmText="CLEAR"
      displayCancelButton={true}
      displayConfirmButton={true}
      modalVisible={false}
      onCancelPress={[Function]}
      onConfirmPress={[Function]}
      onRequestClose={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "EuclidCircularB-Bold",
              "fontSize": 22,
              "fontWeight": "600",
              "marginBottom": 20,
              "textAlign": "center",
            }
          }
        >
          Clear Browser Cookies
        </Text>
        <Text
          style={
            Object {
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 18,
              "fontWeight": "400",
              "textAlign": "center",
            }
          }
        >
          We are about to remove your browser's cookies. Are you sure?
        </Text>
      </View>
    </ActionModal>
    <HintModal
      modalVisible={false}
      onCancel={[Function]}
      onChangeText={[Function]}
      onConfirm={[Function]}
      onRequestClose={[Function]}
      value=""
    />
  </View>
</ScrollView>
`;
