// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NetworkSettings should render correctly 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "flexDirection": "column",
    }
  }
  testID="new-rpc-screen"
>
  <KeyboardAwareScrollViewMock
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    keyboardOpeningTime={250}
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": 24,
      }
    }
    viewIsInsideTabBar={false}
  >
    <View
      style={
        Object {
          "flex": 1,
          "paddingVertical": 12,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Bold",
            "fontSize": 20,
            "fontWeight": "600",
            "paddingVertical": 12,
          }
        }
        testID="rpc-screen-title"
      >
        New RPC Network
      </Text>
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
          }
        }
      >
        Use a custom RPC-capable network via URL instead of one of the provided networks.
      </Text>
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Bold",
            "fontSize": 14,
            "fontWeight": "600",
            "paddingVertical": 12,
          }
        }
      >
        Network Name
      </Text>
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Network Name (optional)"
        placeholderTextColor="#d6d9dc"
        style={
          Array [
            Object {
              "borderColor": "#bbc0c5",
              "borderRadius": 5,
              "borderWidth": 2,
              "fontFamily": "EuclidCircularB-Regular",
              "fontWeight": "400",
              "padding": 10,
            },
            Object {
              "width": "99%",
            },
          ]
        }
        testID="input-network-name"
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Bold",
            "fontSize": 14,
            "fontWeight": "600",
            "paddingVertical": 12,
          }
        }
      >
        RPC Url
      </Text>
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="New RPC Network"
        placeholderTextColor="#d6d9dc"
        style={
          Array [
            Object {
              "borderColor": "#bbc0c5",
              "borderRadius": 5,
              "borderWidth": 2,
              "fontFamily": "EuclidCircularB-Regular",
              "fontWeight": "400",
              "padding": 10,
            },
            Object {
              "width": "99%",
            },
          ]
        }
        testID="input-rpc-url"
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Bold",
            "fontSize": 14,
            "fontWeight": "600",
            "paddingVertical": 12,
          }
        }
      >
        Chain ID
      </Text>
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        keyboardType="numbers-and-punctuation"
        onBlur={[Function]}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Chain ID"
        placeholderTextColor="#d6d9dc"
        style={
          Array [
            Object {
              "borderColor": "#bbc0c5",
              "borderRadius": 5,
              "borderWidth": 2,
              "fontFamily": "EuclidCircularB-Regular",
              "fontWeight": "400",
              "padding": 10,
            },
            Object {
              "width": "99%",
            },
          ]
        }
        testID="input-chain-id"
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Bold",
            "fontSize": 14,
            "fontWeight": "600",
            "paddingVertical": 12,
          }
        }
      >
        Symbol
      </Text>
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Symbol (optional)"
        placeholderTextColor="#d6d9dc"
        style={
          Array [
            Object {
              "borderColor": "#bbc0c5",
              "borderRadius": 5,
              "borderWidth": 2,
              "fontFamily": "EuclidCircularB-Regular",
              "fontWeight": "400",
              "padding": 10,
            },
            Object {
              "width": "99%",
            },
          ]
        }
        testID="input-network-symbol"
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Bold",
            "fontSize": 14,
            "fontWeight": "600",
            "paddingVertical": 12,
          }
        }
      >
        Block Explorer URL
      </Text>
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Block Explorer URL (optional)"
        placeholderTextColor="#d6d9dc"
        style={
          Array [
            Object {
              "borderColor": "#bbc0c5",
              "borderRadius": 5,
              "borderWidth": 2,
              "fontFamily": "EuclidCircularB-Regular",
              "fontWeight": "400",
              "padding": 10,
            },
            Object {
              "width": "99%",
            },
          ]
        }
      />
    </View>
    <View
      style={
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "marginVertical": 12,
        }
      }
    >
      <View
        style={
          Object {
            "alignSelf": "flex-end",
            "flex": 1,
            "flexDirection": "column",
          }
        }
      >
        <StyledButton
          disabled={true}
          disabledContainerStyle={
            Object {
              "opacity": 0.6,
            }
          }
          onPress={[Function]}
          styleDisabled={
            Object {
              "opacity": 0.6,
            }
          }
          testID="network-add-button"
          type="confirm"
        >
          Add
        </StyledButton>
      </View>
    </View>
  </KeyboardAwareScrollViewMock>
</ForwardRef(SafeAreaView)>
`;
