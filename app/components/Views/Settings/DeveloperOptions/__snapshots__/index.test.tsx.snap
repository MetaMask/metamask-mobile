// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeveloperOptions renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="box-none"
      style={
        {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#ffffff",
                "borderBottomColor": "rgb(216, 216, 216)",
                "elevation": 0,
                "flex": 1,
                "shadowColor": "transparent",
                "shadowOffset": {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          collapsable={false}
          pointerEvents="box-none"
          style={
            {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "opacity": 1,
                  "position": "absolute",
                  "top": 0,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "transform": [
                        {
                          "scale": 1,
                        },
                      ],
                    },
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 2,
                        "height": 40,
                        "justifyContent": "center",
                        "opacity": 1,
                        "width": 40,
                      },
                      {
                        "marginHorizontal": 16,
                      },
                    ]
                  }
                  testID="back-arrow-button"
                >
                  <SvgMock
                    fill="currentColor"
                    name="ArrowLeft"
                    style={
                      [
                        {
                          "color": "#121314",
                          "height": 24,
                          "width": 24,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "marginHorizontal": 72,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                collapsable={false}
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  {
                    "color": "#4459ff",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                <Text
                  accessibilityRole="text"
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Bold",
                      "fontSize": 18,
                      "letterSpacing": 0,
                      "lineHeight": 24,
                    }
                  }
                >
                  Developer Options
                </Text>
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        collapsable={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        onGestureCancel={[Function]}
        pointerEvents="box-none"
        sheetAllowedDetents="large"
        sheetCornerRadius={-1}
        sheetExpandsWhenScrolledToEdge={true}
        sheetGrabberVisible={false}
        sheetLargestUndimmedDetent="all"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": undefined,
          }
        }
      >
        <View
          collapsable={false}
          style={
            {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            [
              {
                "overflow": undefined,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            {
              "close": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": {
                "animation": "spring",
                "config": {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            collapsable={false}
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              enabled={false}
              handlerTag={1}
              handlerType="PanGestureHandler"
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                {
                  "flex": 1,
                  "transform": [
                    {
                      "translateX": 0,
                    },
                    {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="none"
                style={
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  [
                    {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <RCTScrollView
                      style={
                        {
                          "backgroundColor": "#ffffff",
                          "flex": 1,
                          "padding": 24,
                          "paddingBottom": 48,
                        }
                      }
                    >
                      <View>
                        <Text
                          accessibilityRole="text"
                          style={
                            {
                              "color": "#121314",
                              "fontFamily": "Geist Bold",
                              "fontSize": 24,
                              "letterSpacing": 0,
                              "lineHeight": 32,
                              "marginTop": 16,
                            }
                          }
                        >
                          Sentry
                        </Text>
                        <Text
                          accessibilityRole="text"
                          style={
                            {
                              "color": "#686e7d",
                              "fontFamily": "Geist Regular",
                              "fontSize": 16,
                              "letterSpacing": 0,
                              "lineHeight": 24,
                              "marginTop": 8,
                            }
                          }
                        >
                          Generate a Developer Test Sentry trace.
                        </Text>
                        <TouchableOpacity
                          accessibilityRole="button"
                          accessible={true}
                          activeOpacity={1}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "alignSelf": "stretch",
                              "backgroundColor": "#3c4d9d0f",
                              "borderColor": "transparent",
                              "borderRadius": 12,
                              "borderWidth": 1,
                              "flexDirection": "row",
                              "height": 48,
                              "justifyContent": "center",
                              "marginTop": 16,
                              "overflow": "hidden",
                              "paddingHorizontal": 16,
                            }
                          }
                        >
                          <Text
                            accessibilityRole="text"
                            style={
                              {
                                "color": "#121314",
                                "fontFamily": "Geist Medium",
                                "fontSize": 16,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                              }
                            }
                          >
                            Generate Trace Test
                          </Text>
                        </TouchableOpacity>
                        <View
                          style={
                            {
                              "gap": 8,
                              "marginTop": 8,
                            }
                          }
                        >
                          <Text
                            accessibilityRole="text"
                            style={
                              {
                                "color": "#121314",
                                "fontFamily": "Geist Bold",
                                "fontSize": 24,
                                "letterSpacing": 0,
                                "lineHeight": 32,
                                "marginTop": 16,
                              }
                            }
                          >
                            Perpetual Trading
                          </Text>
                          <View
                            style={
                              {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "gap": 16,
                              }
                            }
                            testID="perps-testnet-toggle-root"
                          >
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "color": "#686e7d",
                                  "fontFamily": "Geist Regular",
                                  "fontSize": 16,
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                            >
                              Hyperliquid Network Toggle
                            </Text>
                            <RCTSwitch
                              accessibilityRole="switch"
                              onChange={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                {
                                  "height": 31,
                                  "width": 51,
                                }
                              }
                              testID="perps-testnet-toggle-switch"
                              value={false}
                            />
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "color": "#686e7d",
                                  "fontFamily": "Geist Regular",
                                  "fontSize": 16,
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                            >
                              Mainnet
                            </Text>
                          </View>
                          <TouchableOpacity
                            accessibilityRole="button"
                            accessible={true}
                            activeOpacity={1}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            style={
                              {
                                "alignItems": "center",
                                "alignSelf": "flex-start",
                                "backgroundColor": "#121314",
                                "borderRadius": 12,
                                "flexDirection": "row",
                                "height": 40,
                                "justifyContent": "center",
                                "marginTop": 8,
                                "overflow": "hidden",
                                "paddingHorizontal": 16,
                                "width": "100%",
                              }
                            }
                            testID="perps-developer-options-section-perps-sandbox-button"
                          >
                            <Text
                              accessibilityRole="text"
                              style={
                                {
                                  "color": "#ffffff",
                                  "fontFamily": "Geist Medium",
                                  "fontSize": 16,
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                }
                              }
                            >
                              Perps Sandbox
                            </Text>
                          </TouchableOpacity>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
