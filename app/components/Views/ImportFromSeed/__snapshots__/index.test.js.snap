// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImportFromSeed should render correctly 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <KeyboardAwareScrollViewMock
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    keyboardOpeningTime={250}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": 32,
      }
    }
    viewIsInsideTabBar={false}
  >
    <View
      testID="import-from-seed-screen"
    >
      <Text
        style={
          Object {
            "color": "#000000",
            "fontFamily": "EuclidCircularB-Bold",
            "fontSize": 25,
            "fontWeight": "600",
            "justifyContent": "center",
            "marginBottom": 20,
            "marginTop": 20,
            "textAlign": "center",
          }
        }
      >
        Import from seed
      </Text>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "width": "50%",
            }
          }
        >
          <Text
            style={
              Object {
                "fontFamily": "EuclidCircularB-Regular",
                "fontSize": 14,
                "fontWeight": "400",
                "marginBottom": 12,
              }
            }
          >
            Seed phrase
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "width": "50%",
              },
              Object {
                "flexDirection": "row-reverse",
              },
            ]
          }
        >
          <TouchableOpacity
            onPress={[Function]}
          >
            <Text
              style={
                Object {
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "marginBottom": 12,
                }
              }
            >
              Show
            </Text>
          </TouchableOpacity>
        </View>
      </View>
      <OutlinedTextField
        activeLineWidth={2}
        animationDuration={225}
        autoCapitalize="none"
        baseColor="#6a737d"
        containerStyle={
          Object {
            "width": "99%",
          }
        }
        disableFullscreenUI={true}
        disabled={false}
        disabledLineType="dotted"
        disabledLineWidth={0.5}
        editable={true}
        errorColor="rgb(213, 0, 0)"
        fontSize={16}
        inputContainerStyle={
          Object {
            "paddingRight": 46,
          }
        }
        labelFontSize={12}
        lineType="solid"
        lineWidth={1}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Enter your seed phrase here"
        returnKeyType="next"
        secureTextEntry={true}
        testID="input-seed-phrase"
        textColor="rgba(0, 0, 0, .87)"
        tintColor="#037dd6"
        underlineColorAndroid="transparent"
        value=""
      />
      <TouchableOpacity
        onPress={[Function]}
        style={
          Object {
            "alignSelf": "flex-end",
            "borderColor": "#d6d9dc",
            "borderRadius": 6,
            "borderWidth": 1,
            "marginBottom": 30,
            "marginRight": 10,
            "marginTop": -50,
            "paddingHorizontal": 6,
            "paddingVertical": 4,
          }
        }
      >
        <Icon
          allowFontScaling={false}
          color="#777777"
          name="qrcode"
          size={20}
        />
      </TouchableOpacity>
      <View
        style={
          Object {
            "marginVertical": 5,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "width": "50%",
              }
            }
          >
            <Text
              style={
                Object {
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "marginBottom": 12,
                }
              }
            >
              New Password
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "width": "50%",
                },
                Object {
                  "flexDirection": "row-reverse",
                },
              ]
            }
          >
            <TouchableOpacity
              onPress={[Function]}
            >
              <Text
                style={
                  Object {
                    "fontFamily": "EuclidCircularB-Regular",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "marginBottom": 12,
                  }
                }
              >
                Show
              </Text>
            </TouchableOpacity>
          </View>
        </View>
        <OutlinedTextField
          activeLineWidth={2}
          animationDuration={225}
          autoCapitalize="none"
          baseColor="#6a737d"
          containerStyle={
            Object {
              "width": "99%",
            }
          }
          disableFullscreenUI={true}
          disabled={false}
          disabledLineType="dotted"
          disabledLineWidth={0.5}
          editable={true}
          errorColor="rgb(213, 0, 0)"
          fontSize={16}
          labelFontSize={12}
          lineType="solid"
          lineWidth={1}
          onChangeText={[Function]}
          onSubmitEditing={[Function]}
          placeholder="New Password"
          returnKeyType="next"
          secureTextEntry={true}
          testID="input-password-field"
          textColor="rgba(0, 0, 0, .87)"
          tintColor="#037dd6"
          underlineColorAndroid="transparent"
          value=""
        />
        <Text
          style={
            Object {
              "color": "#777777",
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 12,
              "fontWeight": "400",
              "height": 20,
              "marginLeft": 5,
              "marginTop": 10,
              "textAlign": "left",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "marginVertical": 5,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 14,
              "fontWeight": "400",
              "marginBottom": 12,
            }
          }
        >
          Confirm password
        </Text>
        <OutlinedTextField
          activeLineWidth={2}
          animationDuration={225}
          autoCapitalize="none"
          baseColor="#6a737d"
          containerStyle={
            Object {
              "width": "99%",
            }
          }
          disableFullscreenUI={true}
          disabled={false}
          disabledLineType="dotted"
          disabledLineWidth={0.5}
          editable={true}
          errorColor="rgb(213, 0, 0)"
          fontSize={16}
          labelFontSize={12}
          lineType="solid"
          lineWidth={1}
          onChangeText={[Function]}
          onSubmitEditing={[Function]}
          placeholder="Confirm password"
          returnKeyType="next"
          secureTextEntry={true}
          testID="input-password-field-confirm"
          textColor="rgba(0, 0, 0, .87)"
          tintColor="#037dd6"
          underlineColorAndroid="transparent"
          value=""
        />
        <View
          style={
            Object {
              "alignSelf": "flex-end",
              "marginTop": 8,
              "position": "absolute",
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#777777",
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 12,
              "fontWeight": "400",
              "height": 20,
              "marginLeft": 5,
              "marginTop": 10,
              "textAlign": "left",
            }
          }
        >
          Must be at least 8 characters
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "marginTop": 10,
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 16,
              "fontWeight": "400",
            }
          }
        >
          Remember me
        </Text>
        <Switch
          ios_backgroundColor="#9fa6ae"
          onValueChange={[Function]}
          style={
            Object {
              "flex": 0,
              "marginTop": 10,
            }
          }
          trackColor={
            Object {
              "false": "#9fa6ae",
              "true": "#86e29b",
            }
          }
          value={false}
        />
      </View>
      <View
        style={
          Object {
            "marginTop": 20,
          }
        }
      >
        <StyledButton
          disabled={true}
          disabledContainerStyle={
            Object {
              "opacity": 0.6,
            }
          }
          onPress={[Function]}
          styleDisabled={
            Object {
              "opacity": 0.6,
            }
          }
          testID="submit"
          type="blue"
        >
          IMPORT
        </StyledButton>
      </View>
    </View>
  </KeyboardAwareScrollViewMock>
  <View
    style={
      Object {
        "paddingVertical": 10,
      }
    }
  >
    <TermsAndConditions
      action="IMPORT"
      navigation={
        Object {
          "state": Object {
            "params": Object {},
          },
        }
      }
    />
  </View>
</ForwardRef(SafeAreaView)>
`;
