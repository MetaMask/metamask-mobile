// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddAsset component renders collectible view correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  testID="add-collectible-screen"
>
  <View
    style={
      {
        "alignItems": "center",
        "marginTop": 10,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "#9a63001a",
          "borderColor": "#9a6300",
          "borderLeftWidth": 4,
          "borderRadius": 4,
          "flexDirection": "row",
          "padding": 12,
          "paddingLeft": 8,
        }
      }
      testID="banneralert"
      variant="Alert"
    >
      <View
        style={
          {
            "marginRight": 8,
          }
        }
      >
        <SvgMock
          color="#9a6300"
          fill="currentColor"
          height={24}
          name="Danger"
          style={
            {
              "height": 24,
              "width": 24,
            }
          }
          width={24}
        />
      </View>
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <Text
          accessibilityRole="text"
          style={
            {
              "color": "#121314",
              "fontFamily": "Geist Regular",
              "fontSize": 16,
              "letterSpacing": 0,
              "lineHeight": 24,
            }
          }
          testID="warning-display-media-enabled-text"
        >
          Displaying NFT media and data may expose your IP address to centralized servers. Only import an NFT if you understand the risks involved.
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
    testID="import-nft-screen"
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentInset={
          {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableOnAndroid={false}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="never"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollIntoView={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          [
            {
              "flex": 1,
            },
            undefined,
          ]
        }
        update={[Function]}
        viewIsInsideTabBar={false}
      >
        <View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              style={
                {
                  "padding": 20,
                }
              }
            >
              <TouchableOpacity
                onLongPress={[Function]}
                onPress={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "borderColor": "#b7bbc8",
                    "borderRadius": 8,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "marginBottom": 16,
                    "padding": 16,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "fontSize": 16,
                    }
                  }
                >
                  Ethereum
                </Text>
                <View
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    }
                  }
                >
                  <View
                    style={
                      {
                        "alignItems": "center",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 8,
                        "height": 24,
                        "justifyContent": "center",
                        "overflow": "hidden",
                        "width": 24,
                      }
                    }
                    testID="select-network-button"
                  >
                    <Image
                      onError={[Function]}
                      resizeMode="contain"
                      source="ethereum"
                      style={
                        {
                          "height": 24,
                          "width": 24,
                        }
                      }
                      testID="network-avatar-image"
                    />
                  </View>
                  <TouchableOpacity
                    accessibilityRole="button"
                    accessible={true}
                    activeOpacity={1}
                    disabled={false}
                    onPress={[Function]}
                    onPressIn={[Function]}
                    onPressOut={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "borderRadius": 8,
                        "height": 28,
                        "justifyContent": "center",
                        "marginLeft": 16,
                        "opacity": 1,
                        "width": 28,
                      }
                    }
                    testID="select-network-button"
                  >
                    <SvgMock
                      color="#121314"
                      fill="currentColor"
                      height={20}
                      name="ArrowDown"
                      style={
                        {
                          "height": 20,
                          "width": 20,
                        }
                      }
                      width={20}
                    />
                  </TouchableOpacity>
                </View>
              </TouchableOpacity>
              <Text
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Regular",
                    "paddingBottom": 3,
                  }
                }
              >
                Address
              </Text>
              <TextInput
                keyboardAppearance="light"
                onBlur={[Function]}
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="0x..."
                placeholderTextColor="#b7bbc8"
                style={
                  [
                    {
                      "borderColor": "#b7bbc8",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "padding": 16,
                    },
                    {},
                  ]
                }
                testID="input-collectible-address"
                value=""
              />
              <Text
                style={
                  {
                    "color": "#ca3542",
                    "fontFamily": "Geist Regular",
                    "marginTop": 15,
                  }
                }
                testID="collectible-address-warning"
              />
            </View>
            <View
              style={
                {
                  "padding": 20,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Regular",
                    "paddingBottom": 3,
                  }
                }
              >
                ID
              </Text>
              <TextInput
                keyboardAppearance="light"
                keyboardType="numeric"
                onBlur={[Function]}
                onChangeText={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Enter the collectible ID"
                placeholderTextColor="#b7bbc8"
                returnKeyType="done"
                style={
                  [
                    {
                      "borderColor": "#b7bbc8",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "color": "#121314",
                      "fontFamily": "Geist Regular",
                      "padding": 16,
                    },
                    {},
                  ]
                }
                testID="input-collectible-identifier"
                value=""
              />
              <Text
                style={
                  {
                    "color": "#ca3542",
                    "fontFamily": "Geist Regular",
                    "marginTop": 15,
                  }
                }
                testID="collectible-identifier-warning"
              />
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "row",
                  "gap": 16,
                  "paddingHorizontal": 16,
                  "paddingVertical": 16,
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <TouchableOpacity
              accessibilityRole="button"
              accessible={true}
              activeOpacity={1}
              disabled={false}
              onPress={[Function]}
              onPressIn={[Function]}
              onPressOut={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": "#3c4d9d0f",
                  "borderColor": "transparent",
                  "borderRadius": 12,
                  "borderWidth": 1,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
              testID=""
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#121314",
                    "fontFamily": "Geist Medium",
                    "fontSize": 16,
                    "letterSpacing": 0,
                    "lineHeight": 24,
                  }
                }
              >
                CANCEL
              </Text>
            </TouchableOpacity>
            <TouchableOpacity
              accessibilityRole="button"
              accessible={true}
              activeOpacity={1}
              disabled={true}
              loading={false}
              onPressIn={[Function]}
              onPressOut={[Function]}
              style={
                {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": "#121314",
                  "borderRadius": 12,
                  "flex": 1,
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "opacity": 0.5,
                  "overflow": "hidden",
                  "paddingHorizontal": 16,
                }
              }
              testID="add-collectible-button"
            >
              <Text
                accessibilityRole="text"
                style={
                  {
                    "color": "#ffffff",
                    "fontFamily": "Geist Medium",
                    "fontSize": 16,
                    "letterSpacing": 0,
                    "lineHeight": 24,
                  }
                }
              >
                IMPORT
              </Text>
            </TouchableOpacity>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`AddAsset component renders token view correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
  testID="add-token-screen"
>
  <View
    style={
      {
        "paddingHorizontal": 16,
        "paddingTop": 16,
      }
    }
  >
    <RNGestureHandlerButton
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      exclusive={true}
      handlerTag={-1}
      handlerType="NativeViewGestureHandler"
      innerRef={null}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      rippleColor="transparent"
      style={
        [
          undefined,
          {
            "cursor": undefined,
          },
        ]
      }
      touchSoundDisabled={false}
    >
      <View
        accessible={true}
        collapsable={false}
        style={
          {
            "alignItems": "center",
            "borderColor": "#b7bbc8",
            "borderRadius": 8,
            "borderWidth": 1,
            "flexDirection": "row",
            "marginBottom": 16,
            "marginTop": 4,
            "opacity": 1,
            "padding": 16,
          }
        }
      >
        <Text
          accessibilityRole="text"
          style={
            {
              "color": "#121314",
              "fontFamily": "Geist Regular",
              "fontSize": 16,
              "letterSpacing": 0,
              "lineHeight": 24,
            }
          }
        >
          Ethereum
        </Text>
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "paddingHorizontal": 16,
              "position": "absolute",
              "right": 0,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 8,
                "height": 24,
                "justifyContent": "center",
                "overflow": "hidden",
                "width": 24,
              }
            }
            testID="select-network-button"
          >
            <Image
              onError={[Function]}
              resizeMode="contain"
              source="ethereum"
              style={
                {
                  "height": 24,
                  "width": 24,
                }
              }
              testID="network-avatar-image"
            />
          </View>
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={1}
            disabled={false}
            onPress={[Function]}
            onPressIn={[Function]}
            onPressOut={[Function]}
            style={
              {
                "alignItems": "center",
                "borderRadius": 8,
                "height": 28,
                "justifyContent": "center",
                "opacity": 1,
                "width": 28,
              }
            }
            testID="select-network-button"
          >
            <SvgMock
              color="#121314"
              fill="currentColor"
              height={20}
              name="ArrowDown"
              style={
                {
                  "height": 20,
                  "width": 20,
                }
              }
              width={20}
            />
          </TouchableOpacity>
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "paddingHorizontal": 16,
      }
    }
  >
    <ActivityIndicator
      color="#4459ff"
      size="large"
    />
  </View>
</RCTSafeAreaView>
`;
