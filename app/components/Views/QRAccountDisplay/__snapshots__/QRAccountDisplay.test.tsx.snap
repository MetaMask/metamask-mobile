// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QRAccountDisplay render matches snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "zIndex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(216, 216, 216)",
                  "flex": 1,
                  "shadowColor": "rgb(216, 216, 216)",
                  "shadowOffset": {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            collapsable={false}
            pointerEvents="box-none"
            style={
              {
                "height": 44,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                {
                  "height": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                {
                  "alignItems": "stretch",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-start",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginStart": 0,
                    "opacity": 1,
                  }
                }
              />
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "justifyContent": "center",
                    "marginHorizontal": 16,
                    "maxWidth": 718,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  aria-level="1"
                  collapsable={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  QRAccountDisplay
                </Text>
              </View>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "alignItems": "flex-end",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "justifyContent": "center",
                    "marginEnd": 0,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          collapsable={false}
          gestureResponseDistance={
            {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          onGestureCancel={[Function]}
          pointerEvents="box-none"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                enabled={false}
                handlerTag={-1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          [
                            {
                              "alignItems": "center",
                              "backgroundColor": "#ffffff",
                              "display": "flex",
                            },
                            undefined,
                          ]
                        }
                      >
                        <Text
                          accessibilityRole="text"
                          style={
                            [
                              {
                                "color": "#121314",
                                "fontFamily": "Geist Medium",
                                "fontSize": 18,
                                "fontWeight": 500,
                                "letterSpacing": 0,
                                "lineHeight": 24,
                              },
                              undefined,
                            ]
                          }
                        >
                          0xd8dA6...96045
                        </Text>
                        <View
                          style={
                            [
                              {
                                "alignItems": "center",
                                "display": "flex",
                                "marginTop": 32,
                              },
                              undefined,
                            ]
                          }
                        >
                          <Text
                            accessibilityRole="text"
                            style={
                              [
                                {
                                  "color": "#121314",
                                  "fontFamily": "Geist Regular",
                                  "fontSize": 16,
                                  "fontWeight": 400,
                                  "letterSpacing": 0,
                                  "lineHeight": 24,
                                },
                                {
                                  "textAlign": "center",
                                  "width": 200,
                                },
                              ]
                            }
                          >
                            0xd8dA
                            <Text
                              accessibilityRole="text"
                              style={
                                [
                                  {
                                    "color": "#686e7d",
                                    "fontFamily": "Geist Regular",
                                    "fontSize": 16,
                                    "fontWeight": 400,
                                    "letterSpacing": 0,
                                    "lineHeight": 24,
                                  },
                                  undefined,
                                ]
                              }
                            >
                              6BF26964aF9D7eEd9e03E53415D37aA
                            </Text>
                            96045
                          </Text>
                          <View
                            style={
                              [
                                {
                                  "transform": [
                                    {
                                      "scale": 1,
                                    },
                                  ],
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <View
                              accessibilityLabel="Copy address"
                              accessibilityRole="button"
                              accessibilityState={
                                {
                                  "busy": undefined,
                                  "checked": undefined,
                                  "disabled": false,
                                  "expanded": undefined,
                                  "selected": undefined,
                                }
                              }
                              accessibilityValue={
                                {
                                  "max": undefined,
                                  "min": undefined,
                                  "now": undefined,
                                  "text": undefined,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                [
                                  {
                                    "alignItems": "center",
                                    "backgroundColor": "transparent",
                                    "borderColor": "transparent",
                                    "borderRadius": 12,
                                    "borderWidth": 0,
                                    "flexDirection": "row",
                                    "height": 48,
                                    "justifyContent": "center",
                                    "minWidth": 80,
                                    "opacity": 1,
                                    "overflow": "hidden",
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "width": "auto",
                                  },
                                ]
                              }
                              testID="qr-account-display-copy-button"
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "bottom": 0,
                                    "display": "flex",
                                    "justifyContent": "center",
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="spinner-container"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "columnGap": 8,
                                        "flexDirection": "row",
                                      },
                                      undefined,
                                    ]
                                  }
                                  testID="spinner"
                                >
                                  <View
                                    style={
                                      [
                                        {
                                          "transform": [
                                            {
                                              "rotate": "0deg",
                                            },
                                          ],
                                        },
                                      ]
                                    }
                                    testID="spinner-animated-view"
                                  >
                                    <SvgMock
                                      fill="currentColor"
                                      name="Loading"
                                      style={
                                        [
                                          {
                                            "color": "#4459ff",
                                            "height": 20,
                                            "width": 20,
                                          },
                                          undefined,
                                        ]
                                      }
                                      testID="spinner-icon"
                                    />
                                  </View>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "columnGap": 8,
                                    "flexDirection": "row",
                                    "justifyContent": "center",
                                    "opacity": 1,
                                  }
                                }
                                testID="content-container"
                              >
                                <Text
                                  accessibilityRole="text"
                                  ellipsizeMode="clip"
                                  numberOfLines={1}
                                  style={
                                    [
                                      {
                                        "color": "#4459ff",
                                        "flexGrow": 0,
                                        "flexShrink": 1,
                                        "flexWrap": "wrap",
                                        "fontFamily": "Geist Medium",
                                        "fontSize": 16,
                                        "fontWeight": 400,
                                        "letterSpacing": 0,
                                        "lineHeight": 24,
                                        "textAlign": "center",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  Copy address
                                </Text>
                                <SvgMock
                                  fill="currentColor"
                                  name="Copy"
                                  style={
                                    [
                                      {
                                        "color": "#4459ff",
                                        "flexShrink": 0,
                                        "height": 16,
                                        "width": 16,
                                      },
                                      undefined,
                                    ]
                                  }
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
