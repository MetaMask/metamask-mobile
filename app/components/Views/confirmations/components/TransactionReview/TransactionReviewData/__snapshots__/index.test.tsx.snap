// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TransactionReviewData should render correctly 1`] = `
<View
  style={
    [
      {
        "paddingBottom": 48,
        "paddingHorizontal": 24,
        "paddingTop": 24,
      },
      {
        "height": undefined,
      },
    ]
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 28,
        "width": "100%",
      }
    }
  >
    <TouchableOpacity>
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "color": "#141618",
              "fontSize": 24,
            },
            undefined,
            {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        
      </Text>
    </TouchableOpacity>
    <Text
      style={
        {
          "alignSelf": "center",
          "color": "#141618",
          "fontFamily": "EuclidCircularB-Bold",
          "fontSize": 14,
          "fontWeight": "600",
        }
      }
    >
      Data
    </Text>
    <Text
      allowFontScaling={false}
      style={
        [
          {
            "color": "#ffffff",
            "fontSize": 24,
          },
          undefined,
          {
            "fontFamily": "Ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
    >
      
    </Text>
  </View>
  <Text
    style={
      {
        "color": "#141618",
        "fontFamily": "EuclidCircularB-Regular",
        "fontSize": 14,
        "fontWeight": "400",
        "marginBottom": 28,
        "textAlign": "center",
      }
    }
  >
    Data associated with this transaction
  </Text>
  <View
    style={
      {
        "borderColor": "#bbc0c5",
        "borderRadius": 8,
        "borderWidth": 1,
        "flex": 1,
        "padding": 12,
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "marginBottom": 12,
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "#141618",
              "fontFamily": "EuclidCircularB-Regular",
              "fontSize": 14,
              "fontWeight": "400",
            },
            {
              "fontFamily": "EuclidCircularB-Bold",
              "fontWeight": "600",
            },
          ]
        }
      >
        Function
        :
         
      </Text>
      <Text
        style={
          {
            "color": "#141618",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
          }
        }
      />
    </View>
    <Text
      style={
        [
          {
            "color": "#141618",
            "fontFamily": "EuclidCircularB-Regular",
            "fontSize": 14,
            "fontWeight": "400",
          },
          {
            "fontFamily": "EuclidCircularB-Bold",
            "fontWeight": "600",
          },
        ]
      }
    >
      Hex data
      :
       
    </Text>
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentInset={
          {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableOnAndroid={false}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollIntoView={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          {
            "flex": 1,
          }
        }
        update={[Function]}
        viewIsInsideTabBar={false}
      >
        <View>
          <TouchableOpacity
            activeOpacity={0.8}
            onPress={[Function]}
            style={
              {
                "flex": 1,
              }
            }
          >
            <Text
              style={
                {
                  "backgroundColor": "#ffffff",
                  "color": "#141618",
                  "fontFamily": "EuclidCircularB-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "paddingTop": 0,
                }
              }
            />
          </TouchableOpacity>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={false}
  />
</View>
`;
