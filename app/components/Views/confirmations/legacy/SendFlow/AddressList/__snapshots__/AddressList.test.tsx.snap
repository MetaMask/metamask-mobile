// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddressList renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#ffffff",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentInset={
      {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      {
        "flexGrow": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View
        style={
          {
            "marginTop": 16,
          }
        }
      >
        <Text
          accessibilityRole="text"
          style={
            {
              "color": "#686e7d",
              "fontFamily": "Geist Medium",
              "fontSize": 18,
              "letterSpacing": 0,
              "lineHeight": 24,
              "marginHorizontal": 16,
              "paddingBottom": 8,
            }
          }
        >
          Your Accounts
        </Text>
        <View
          style={
            {
              "flex": 1,
              "overflow": "hidden",
            }
          }
        >
          <RCTScrollView
            applyWindowCorrection={[Function]}
            canChangeSize={true}
            contentContainerStyle={
              {
                "backgroundColor": undefined,
                "minHeight": 1,
                "minWidth": 1,
                "paddingLeft": 0,
                "paddingRight": 0,
              }
            }
            contentHeight={0}
            contentWidth={0}
            data={
              [
                {
                  "address": "0xc4955c0d639d99699bfd7ec54d9fafee40e4d272",
                  "id": "30786334-3935-4563-b064-363339643939",
                  "metadata": {
                    "importTime": 1684232000456,
                    "keyring": {
                      "type": "HD Key Tree",
                    },
                    "name": "Account 1",
                  },
                  "methods": [
                    "personal_sign",
                    "eth_signTransaction",
                    "eth_signTypedData_v1",
                    "eth_signTypedData_v3",
                    "eth_signTypedData_v4",
                  ],
                  "options": {},
                  "scopes": [
                    "eip155:0",
                  ],
                  "type": "eip155:eoa",
                },
              ]
            }
            dataProvider={
              DataProvider {
                "_data": [
                  {
                    "address": "0xc4955c0d639d99699bfd7ec54d9fafee40e4d272",
                    "id": "30786334-3935-4563-b064-363339643939",
                    "metadata": {
                      "importTime": 1684232000456,
                      "keyring": {
                        "type": "HD Key Tree",
                      },
                      "name": "Account 1",
                    },
                    "methods": [
                      "personal_sign",
                      "eth_signTransaction",
                      "eth_signTypedData_v1",
                      "eth_signTypedData_v3",
                      "eth_signTypedData_v4",
                    ],
                    "options": {},
                    "scopes": [
                      "eip155:0",
                    ],
                    "type": "eip155:eoa",
                  },
                ],
                "_firstIndexToProcess": 0,
                "_hasStableIds": true,
                "_requiresDataChangeHandling": false,
                "_size": 1,
                "getStableId": [Function],
                "rowHasChanged": [Function],
              }
            }
            disableRecycling={false}
            extendedState={{}}
            externalScrollView={[Function]}
            finalRenderAheadOffset={250}
            forceNonDeterministicRendering={true}
            horizontal={false}
            initialOffset={0}
            initialRenderIndex={0}
            isHorizontal={false}
            keyExtractor={[Function]}
            layoutProvider={
              GridLayoutProviderWithProps {
                "_acceptableRelayoutDelta": 1,
                "_getHeightOrWidth": [Function],
                "_getLayoutTypeForIndex": [Function],
                "_getSpan": [Function],
                "_hasExpired": false,
                "_maxSpan": 1,
                "_setLayoutForType": [Function],
                "_tempDim": {
                  "height": 0,
                  "width": 0,
                },
                "averageWindow": AverageWindow {
                  "currentAverage": 100,
                  "currentCount": 1,
                  "inputValues": [
                    100,
                  ],
                  "nextIndex": 1,
                },
                "defaultEstimatedItemSize": 100,
                "layoutObject": {
                  "size": undefined,
                  "span": undefined,
                },
                "props": {
                  "data": [
                    {
                      "address": "0xc4955c0d639d99699bfd7ec54d9fafee40e4d272",
                      "id": "30786334-3935-4563-b064-363339643939",
                      "metadata": {
                        "importTime": 1684232000456,
                        "keyring": {
                          "type": "HD Key Tree",
                        },
                        "name": "Account 1",
                      },
                      "methods": [
                        "personal_sign",
                        "eth_signTransaction",
                        "eth_signTypedData_v1",
                        "eth_signTypedData_v3",
                        "eth_signTypedData_v4",
                      ],
                      "options": {},
                      "scopes": [
                        "eip155:0",
                      ],
                      "type": "eip155:eoa",
                    },
                  ],
                  "keyExtractor": [Function],
                  "numColumns": 1,
                  "renderItem": [Function],
                },
                "renderWindowInsets": {
                  "height": 0,
                  "width": 0,
                },
                "shouldRefreshWithAnchoring": true,
              }
            }
            maxRenderAhead={750}
            numColumns={1}
            onEndReached={[Function]}
            onEndReachedThreshold={0}
            onEndReachedThresholdRelative={0}
            onItemLayout={[Function]}
            onLayout={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onSizeChanged={[Function]}
            onVisibleIndicesChanged={[Function]}
            removeClippedSubviews={false}
            renderAheadOffset={0}
            renderAheadStep={250}
            renderContentContainer={[Function]}
            renderItem={[Function]}
            renderItemContainer={[Function]}
            rowRenderer={[Function]}
            scrollEventThrottle={16}
            scrollThrottle={16}
            scrollViewProps={
              {
                "contentContainerStyle": {
                  "backgroundColor": undefined,
                  "minHeight": 1,
                  "minWidth": 1,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                },
                "onLayout": [Function],
                "onScrollBeginDrag": [Function],
                "refreshControl": undefined,
                "style": {
                  "minHeight": 1,
                  "minWidth": 1,
                },
              }
            }
            style={
              {
                "minHeight": 1,
                "minWidth": 1,
              }
            }
            suppressBoundedSizeException={true}
            windowCorrectionConfig={
              {
                "applyToInitialOffset": true,
                "applyToItemScroll": true,
                "value": {
                  "endCorrection": 0,
                  "startCorrection": 0,
                  "windowShift": -0,
                },
              }
            }
          >
            <View>
              <View
                style={
                  {
                    "flexDirection": "column",
                  }
                }
              >
                <AutoLayoutView
                  enableInstrumentation={false}
                  horizontal={false}
                  onBlankAreaEvent={[Function]}
                  onLayout={[Function]}
                  renderAheadOffset={0}
                  scrollOffset={0}
                  style={
                    {
                      "height": 0,
                      "width": 0,
                    }
                  }
                  windowSize={0}
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
