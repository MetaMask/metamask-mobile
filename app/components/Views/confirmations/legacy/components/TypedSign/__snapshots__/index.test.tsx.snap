// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypedSign onConfirm signs message 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#ffffff",
        "borderTopLeftRadius": 20,
        "borderTopRightRadius": 20,
        "minHeight": "90%",
        "paddingBottom": 20,
        "paddingTop": 24,
      },
      undefined,
    ]
  }
  testID="typed-signature-request"
>
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentInset={
        {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              {
                "alignItems": "center",
                "marginVertical": 24,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#121314",
                  "fontFamily": "CentraNo1-Bold",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "textAlign": "center",
                }
              }
            >
              Sign this message?
            </Text>
          </View>
          <View
            style={
              {
                "marginBottom": 20,
                "marginHorizontal": 20,
              }
            }
          />
          <View
            style={
              {
                "paddingHorizontal": 24,
              }
            }
          >
            <View
              style={
                {
                  "marginBottom": 20,
                  "width": "100%",
                }
              }
            />
            <TouchableOpacity
              onPress={null}
              style={
                {
                  "alignSelf": "center",
                  "borderColor": "#b7bbc8",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "padding": 16,
                  "width": "100%",
                }
              }
            >
              <View>
                <View
                  style={
                    [
                      {
                        "alignContent": "center",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 27,
                        "height": 54,
                        "justifyContent": "center",
                        "width": 54,
                      },
                      {
                        "borderRadius": 20,
                        "height": 40,
                        "marginRight": 8,
                        "width": 40,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#121314",
                          "fontFamily": "CentraNo1-Book",
                          "fontSize": 24,
                          "fontWeight": "400",
                          "textAlign": "center",
                          "textTransform": "uppercase",
                        },
                        undefined,
                      ]
                    }
                  >
                    h
                  </Text>
                </View>
              </View>
              <View
                style={
                  {
                    "justifyContent": "space-between",
                    "width": "75%",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "CentraNo1-Bold",
                      "fontSize": 16,
                      "fontWeight": "600",
                      "marginBottom": 4,
                    }
                  }
                >
                  Message
                  :
                </Text>
                <View
                  onLayout={[Function]}
                  style={[]}
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "flex-end",
                    "flexGrow": 1,
                  }
                }
              />
            </TouchableOpacity>
          </View>
        </View>
        <View
          style={
            {
              "flex": 0,
              "flexDirection": "row",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            }
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={0.2}
            disabled={false}
            onPress={[Function]}
            style={
              [
                [
                  {
                    "borderRadius": 100,
                    "justifyContent": "center",
                    "padding": 15,
                  },
                  {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#4459ff",
                    "borderWidth": 1,
                  },
                  [
                    {
                      "flex": 1,
                    },
                    {
                      "marginRight": 8,
                    },
                  ],
                ],
                null,
              ]
            }
            testID="request-signature-cancel-button"
          >
            <Text
              style={
                [
                  {
                    "color": "#007aff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "textAlign": "center",
                  },
                  null,
                  [
                    {
                      "fontFamily": "CentraNo1-Bold",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    {
                      "color": "#4459ff",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              Cancel
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={0.2}
            disabled={false}
            onPress={[Function]}
            style={
              [
                [
                  {
                    "borderRadius": 100,
                    "justifyContent": "center",
                    "padding": 15,
                  },
                  {
                    "backgroundColor": "#4459ff",
                    "borderColor": "#4459ff",
                    "borderWidth": 1,
                  },
                  [
                    {
                      "flex": 1,
                    },
                    {
                      "marginLeft": 8,
                    },
                    {},
                    {},
                  ],
                ],
                null,
              ]
            }
            testID="request-signature-confirm-button"
          >
            <Text
              style={
                [
                  {
                    "color": "#007aff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "textAlign": "center",
                  },
                  null,
                  [
                    {
                      "fontFamily": "CentraNo1-Bold",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    {
                      "color": "#ffffff",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              Sign
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`TypedSign onReject rejects message 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#ffffff",
        "borderTopLeftRadius": 20,
        "borderTopRightRadius": 20,
        "minHeight": "90%",
        "paddingBottom": 20,
        "paddingTop": 24,
      },
      undefined,
    ]
  }
  testID="typed-signature-request"
>
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentInset={
        {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="never"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              {
                "alignItems": "center",
                "marginVertical": 24,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#121314",
                  "fontFamily": "CentraNo1-Bold",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "textAlign": "center",
                }
              }
            >
              Sign this message?
            </Text>
          </View>
          <View
            style={
              {
                "marginBottom": 20,
                "marginHorizontal": 20,
              }
            }
          />
          <View
            style={
              {
                "paddingHorizontal": 24,
              }
            }
          >
            <View
              style={
                {
                  "marginBottom": 20,
                  "width": "100%",
                }
              }
            />
            <TouchableOpacity
              onPress={null}
              style={
                {
                  "alignSelf": "center",
                  "borderColor": "#b7bbc8",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "padding": 16,
                  "width": "100%",
                }
              }
            >
              <View>
                <View
                  style={
                    [
                      {
                        "alignContent": "center",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 27,
                        "height": 54,
                        "justifyContent": "center",
                        "width": 54,
                      },
                      {
                        "borderRadius": 20,
                        "height": 40,
                        "marginRight": 8,
                        "width": 40,
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#121314",
                          "fontFamily": "CentraNo1-Book",
                          "fontSize": 24,
                          "fontWeight": "400",
                          "textAlign": "center",
                          "textTransform": "uppercase",
                        },
                        undefined,
                      ]
                    }
                  >
                    h
                  </Text>
                </View>
              </View>
              <View
                style={
                  {
                    "justifyContent": "space-between",
                    "width": "75%",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#121314",
                      "fontFamily": "CentraNo1-Bold",
                      "fontSize": 16,
                      "fontWeight": "600",
                      "marginBottom": 4,
                    }
                  }
                >
                  Message
                  :
                </Text>
                <View
                  onLayout={[Function]}
                  style={[]}
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "flex-end",
                    "flexGrow": 1,
                  }
                }
              />
            </TouchableOpacity>
          </View>
        </View>
        <View
          style={
            {
              "flex": 0,
              "flexDirection": "row",
              "paddingHorizontal": 24,
              "paddingVertical": 16,
            }
          }
        >
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={0.2}
            disabled={false}
            onPress={[Function]}
            style={
              [
                [
                  {
                    "borderRadius": 100,
                    "justifyContent": "center",
                    "padding": 15,
                  },
                  {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#4459ff",
                    "borderWidth": 1,
                  },
                  [
                    {
                      "flex": 1,
                    },
                    {
                      "marginRight": 8,
                    },
                  ],
                ],
                null,
              ]
            }
            testID="request-signature-cancel-button"
          >
            <Text
              style={
                [
                  {
                    "color": "#007aff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "textAlign": "center",
                  },
                  null,
                  [
                    {
                      "fontFamily": "CentraNo1-Bold",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    {
                      "color": "#4459ff",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              Cancel
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            accessibilityRole="button"
            accessible={true}
            activeOpacity={0.2}
            disabled={false}
            onPress={[Function]}
            style={
              [
                [
                  {
                    "borderRadius": 100,
                    "justifyContent": "center",
                    "padding": 15,
                  },
                  {
                    "backgroundColor": "#4459ff",
                    "borderColor": "#4459ff",
                    "borderWidth": 1,
                  },
                  [
                    {
                      "flex": 1,
                    },
                    {
                      "marginLeft": 8,
                    },
                    {},
                    {},
                  ],
                ],
                null,
              ]
            }
            testID="request-signature-confirm-button"
          >
            <Text
              style={
                [
                  {
                    "color": "#007aff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "textAlign": "center",
                  },
                  null,
                  [
                    {
                      "fontFamily": "CentraNo1-Bold",
                      "fontSize": 14,
                      "fontWeight": "600",
                      "textAlign": "center",
                    },
                    {
                      "color": "#ffffff",
                    },
                    undefined,
                  ],
                  null,
                ]
              }
            >
              Sign
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`TypedSign should render correctly 1`] = `
<ContextProvider
  value={
    {
      "getServerState": undefined,
      "noopCheck": "once",
      "stabilityCheck": "once",
      "store": {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <Component
    currentPageInformation={
      {
        "title": "title",
        "url": "http://localhost:8545",
      }
    }
    messageParams={
      {
        "data": {
          "name": "Message",
          "type": "string",
          "value": "Hi, Alice!",
        },
        "from": "0xC4955C0d639D99699Bfd7Ec54d9FaFEe40e4D272",
        "metamaskId": "TestMessageId",
        "origin": "example.com",
      }
    }
    onConfirm={[MockFunction]}
    onReject={[MockFunction]}
  />
</ContextProvider>
`;
