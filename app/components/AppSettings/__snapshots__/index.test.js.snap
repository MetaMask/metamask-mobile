// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppSettings should render correctly 1`] = `
<SafeAreaView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
  testID="app-settings-screen"
>
  <ScrollView
    contentContainerStyle={
      Object {
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingVertical": 20,
      }
    }
  >
    <ActionModal
      cancelButtonMode="neutral"
      cancelTestID=""
      cancelText="NEVERMIND"
      confirmButtonMode="warning"
      confirmTestID=""
      confirmText="RESET"
      modalVisible={false}
      onCancelPress={[Function]}
      onConfirmPress={[Function]}
      onRequestClose={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Roboto",
              "fontSize": 22,
              "fontWeight": "600",
              "textAlign": "center",
            }
          }
        >
          Reset Account?
        </Text>
        <Text
          style={
            Object {
              "fontFamily": "Roboto",
              "fontSize": 18,
              "fontWeight": "400",
              "textAlign": "center",
            }
          }
        >
          Resetting your account will clear your transaction history.
        </Text>
      </View>
    </ActionModal>
    <ActionModal
      cancelButtonMode="neutral"
      cancelTestID=""
      cancelText="NEVERMIND"
      confirmButtonMode="warning"
      confirmTestID=""
      confirmText="CLEAR"
      modalVisible={false}
      onCancelPress={[Function]}
      onConfirmPress={[Function]}
      onRequestClose={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Roboto",
              "fontSize": 22,
              "fontWeight": "600",
              "textAlign": "center",
            }
          }
        >
          Clear Approval Data?
        </Text>
        <Text
          style={
            Object {
              "fontFamily": "Roboto",
              "fontSize": 18,
              "fontWeight": "400",
              "textAlign": "center",
            }
          }
        >
          All dapps will need to request access to view account information again.
        </Text>
      </View>
    </ActionModal>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Base Currency
      </Text>
      <View
        style={
          Object {
            "borderColor": "#f1f2f6",
            "borderRadius": 5,
            "borderWidth": 2,
          }
        }
      >
        <SelectComponent
          label="Base Currency"
          onValueChange={[Function]}
          options={
            Array [
              Object {
                "key": "adx",
                "label": "ADX - AdEx",
                "value": "adx",
              },
              Object {
                "key": "adt",
                "label": "ADT - adToken",
                "value": "adt",
              },
              Object {
                "key": "ant",
                "label": "ANT - Aragon",
                "value": "ant",
              },
              Object {
                "key": "rep",
                "label": "REP - Augur",
                "value": "rep",
              },
              Object {
                "key": "aud",
                "label": "AUD - Australian Dollar",
                "value": "aud",
              },
              Object {
                "key": "bnt",
                "label": "BNT - Bancor",
                "value": "bnt",
              },
              Object {
                "key": "bat",
                "label": "BAT - Basic Attention Token",
                "value": "bat",
              },
              Object {
                "key": "btc",
                "label": "BTC - Bitcoin",
                "value": "btc",
              },
              Object {
                "key": "cad",
                "label": "CAD - Canadian Dollar",
                "value": "cad",
              },
              Object {
                "key": "time",
                "label": "TIME - ChronoBank",
                "value": "time",
              },
              Object {
                "key": "cvc",
                "label": "CVC - Civic",
                "value": "cvc",
              },
              Object {
                "key": "cfi",
                "label": "CFI - Cofound.it",
                "value": "cfi",
              },
              Object {
                "key": "crb",
                "label": "CRB - CreditBit",
                "value": "crb",
              },
              Object {
                "key": "dash",
                "label": "DASH - Dash",
                "value": "dash",
              },
              Object {
                "key": "dgd",
                "label": "DGD - DigixDAO",
                "value": "dgd",
              },
              Object {
                "key": "etc",
                "label": "ETC - Ethereum Classic",
                "value": "etc",
              },
              Object {
                "key": "eur",
                "label": "EUR - Euro",
                "value": "eur",
              },
              Object {
                "key": "1st",
                "label": "1ST - FirstBlood",
                "value": "1st",
              },
              Object {
                "key": "fun",
                "label": "FUN - FunFair",
                "value": "fun",
              },
              Object {
                "key": "gno",
                "label": "GNO - Gnosis",
                "value": "gno",
              },
              Object {
                "key": "gnt",
                "label": "GNT - Golem",
                "value": "gnt",
              },
              Object {
                "key": "hkd",
                "label": "HKD - Hong Kong Dollar",
                "value": "hkd",
              },
              Object {
                "key": "hmq",
                "label": "HMQ - Humaniq",
                "value": "hmq",
              },
              Object {
                "key": "rlc",
                "label": "RLC - iEx.ec",
                "value": "rlc",
              },
              Object {
                "key": "idr",
                "label": "IDR - Indonesian Rupiah",
                "value": "idr",
              },
              Object {
                "key": "jpy",
                "label": "JPY - Japanese Yen",
                "value": "jpy",
              },
              Object {
                "key": "lgd",
                "label": "LGD - Legends Room",
                "value": "lgd",
              },
              Object {
                "key": "lsk",
                "label": "LSK - Lisk",
                "value": "lsk",
              },
              Object {
                "key": "ltc",
                "label": "LTC - Litecoin",
                "value": "ltc",
              },
              Object {
                "key": "lun",
                "label": "LUN - Lunyr",
                "value": "lun",
              },
              Object {
                "key": "gup",
                "label": "GUP - Matchpool",
                "value": "gup",
              },
              Object {
                "key": "mtl",
                "label": "MTL - Metal",
                "value": "mtl",
              },
              Object {
                "key": "mco",
                "label": "MCO - Monaco",
                "value": "mco",
              },
              Object {
                "key": "xmr",
                "label": "XMR - Monero",
                "value": "xmr",
              },
              Object {
                "key": "myst",
                "label": "MYST - Mysterium",
                "value": "myst",
              },
              Object {
                "key": "xem",
                "label": "XEM - NEM",
                "value": "xem",
              },
              Object {
                "key": "nmr",
                "label": "NMR - Numeraire",
                "value": "nmr",
              },
              Object {
                "key": "omg",
                "label": "OMG - OmiseGO",
                "value": "omg",
              },
              Object {
                "key": "ptoy",
                "label": "PTOY - Patientory",
                "value": "ptoy",
              },
              Object {
                "key": "php",
                "label": "PHP - Philippine Peso",
                "value": "php",
              },
              Object {
                "key": "gbp",
                "label": "GBP - Pound Sterling",
                "value": "gbp",
              },
              Object {
                "key": "qtum",
                "label": "QTUM - Qtum",
                "value": "qtum",
              },
              Object {
                "key": "qrl",
                "label": "QRL - Quantum-Resistant Ledger",
                "value": "qrl",
              },
              Object {
                "key": "xrp",
                "label": "XRP - Ripple",
                "value": "xrp",
              },
              Object {
                "key": "rub",
                "label": "RUB - Russian Ruble",
                "value": "rub",
              },
              Object {
                "key": "sc",
                "label": "SC - Siacoin",
                "value": "sc",
              },
              Object {
                "key": "sgd",
                "label": "SGD - Singapore Dollar",
                "value": "sgd",
              },
              Object {
                "key": "sngls",
                "label": "SNGLS - SingularDTV",
                "value": "sngls",
              },
              Object {
                "key": "snt",
                "label": "SNT - Status",
                "value": "snt",
              },
              Object {
                "key": "steem",
                "label": "STEEM - Steem",
                "value": "steem",
              },
              Object {
                "key": "xlm",
                "label": "XLM - Stellar Lumen",
                "value": "xlm",
              },
              Object {
                "key": "storj",
                "label": "STORJ - Storj",
                "value": "storj",
              },
              Object {
                "key": "pay",
                "label": "PAY - TenX",
                "value": "pay",
              },
              Object {
                "key": "tkn",
                "label": "TKN - TokenCard",
                "value": "tkn",
              },
              Object {
                "key": "uah",
                "label": "UAH - Ukrainian Hryvnia",
                "value": "uah",
              },
              Object {
                "key": "usd",
                "label": "USD - United States Dollar",
                "value": "usd",
              },
              Object {
                "key": "trst",
                "label": "TRST - WeTrust",
                "value": "trst",
              },
              Object {
                "key": "wings",
                "label": "WINGS - Wings",
                "value": "wings",
              },
              Object {
                "key": "zec",
                "label": "ZEC - Zcash",
                "value": "zec",
              },
            ]
          }
          selectedValue="usd"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Current Language
      </Text>
      <View
        style={
          Object {
            "borderColor": "#f1f2f6",
            "borderRadius": 5,
            "borderWidth": 2,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        New RPC URL
      </Text>
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        style={
          Object {
            "borderColor": "#f1f2f6",
            "borderRadius": 5,
            "borderWidth": 2,
            "padding": 10,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <Text
        style={
          Object {
            "color": "#FF0000",
            "fontFamily": "Roboto",
            "fontWeight": "400",
          }
        }
      />
      <TouchableOpacity
        activeOpacity={0.2}
        key="save"
        onPress={[Function]}
        style={
          Object {
            "alignSelf": "flex-end",
            "flex": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "fontFamily": "Roboto",
              "fontSize": 18,
              "fontWeight": "400",
              "padding": 5,
            }
          }
        >
          SAVE
        </Text>
      </TouchableOpacity>
    </View>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Privacy Mode
      </Text>
      <View>
        <Text
          style={
            Object {
              "color": "#999999",
              "fontFamily": "Roboto",
              "fontSize": 14,
              "fontWeight": "400",
              "marginBottom": 8,
              "marginTop": 5,
              "textAlign": "left",
            }
          }
        >
          Disabling privacy mode will allow every website to read your public accounts by default.
        </Text>
        <Switch
          ios_backgroundColor="#dfe4ea"
          onValueChange={[Function]}
          trackColor={
            Object {
              "false": "#f1f2f6",
              "true": "#008edf",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Clear approved dapps
      </Text>
      <StyledButton
        disabled={true}
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="confirm"
      >
        CLEAR APPROVED DAPPS
      </StyledButton>
    </View>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Sync with Metamask Extension
      </Text>
      <StyledButton
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="confirm"
      >
        SYNC
      </StyledButton>
    </View>
    <View
      style={
        Object {
          "marginBottom": 22,
          "marginTop": 22,
        }
      }
    >
      <Text
        style={
          Object {
            "fontFamily": "Roboto",
            "fontSize": 18,
            "fontWeight": "400",
            "marginBottom": 5,
            "textAlign": "left",
          }
        }
      >
        Reset Account
      </Text>
      <StyledButton
        disabledContainerStyle={
          Object {
            "opacity": 0.6,
          }
        }
        onPress={[Function]}
        styleDisabled={
          Object {
            "opacity": 0.6,
          }
        }
        type="orange"
      >
        RESET ACCOUNT
      </StyledButton>
    </View>
  </ScrollView>
</SafeAreaView>
`;
