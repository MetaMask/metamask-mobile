# Sign up and generate your own keys at pubnub.com
# Then rename this file to ".js.env" and rebuild the app
#
# In order for this feature to work properly, you need to
# build metamask-extension from source (https://github.com/MetaMask/metamask-extension)
# and set your the same values there.
#
# For more info take a look at https://github.com/MetaMask/metamask-extension/pull/5955

export MM_PUBNUB_SUB_KEY=""
export MM_PUBNUB_PUB_KEY=""
export MM_OPENSEA_KEY=""
export MM_ETHERSCAN_KEY=""
export MM_FOX_CODE="EXAMPLE_FOX_CODE"

# NOTE: Non-MetaMask only, will need to create an account and generate
# API key at https://infura.io in order to connect to main and test nets.
# More info: https://github.com/MetaMask/metamask-mobile/issues/1984

export MM_INFURA_PROJECT_ID="null"
export IGNORE_BOXLOGS_DEVELOPMENT="false"
export MM_SENTRY_DSN=""
# Determines if Sentry will auto upload source maps and debug files. Disabled by default
export SENTRY_DISABLE_AUTO_UPLOAD="true"

# ENV vars for e2e tests
# enable e2e tests when value is true
export IS_TEST=""
# defined as secrets to run on Bitrise CI
# but have to be defined here for local tests
export MM_TEST_ACCOUNT_SRP=""
export MM_TEST_ACCOUNT_PRIVATE_KEY=""
export TENDERLY_NETWORK_ID=""

# address is the address of the first account generated from the previous SRP
export MM_TEST_ACCOUNT_ADDRESS=""


# Wallet connect project id -- should be v2 compatible
export WALLET_CONNECT_PROJECT_ID=""

# Optional: SDK Remote Communication url (for testing with your local socket server)
# export SDK_COMMLAYER_URL="http://{YOUR_LOCAL_IP}

# CDN for blockaid files
export BLOCKAID_FILE_CDN=""
export BLOCKAID_PUBLIC_KEY=""
export MM_BLOCKAID_UI_ENABLED=""

# Default PORT for metro
export WATCHER_PORT=8081

# Environment: "production", "pre-release" or "local"
export METAMASK_ENVIRONMENT="local"

# Build type: "main" or "flask"
export METAMASK_BUILD_TYPE="main"

# Segment SDK proxy endpoint and write key
export SEGMENT_WRITE_KEY=""
export SEGMENT_PROXY_URL=""
export SEGMENT_DELETE_API_SOURCE_ID=""
export SEGMENT_REGULATIONS_ENDPOINT=""

# Optional for dev purpose: Segment flush interval in seconds
# example for 1 second flush interval
export SEGMENT_FLUSH_INTERVAL="1"
# example for flush when 1 event is queued
export SEGMENT_FLUSH_EVENT_LIMIT="1"
