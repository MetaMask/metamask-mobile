import { test, expect } from "appwright";

import { GetStartedScreen } from "../screens/GetStartedScreen";
import { OnboardingScreen } from "../screens/OnboardingScreen";
import { TermsOfUseScreen } from "../screens/TermsOfUseScreen";
import { CreateNewWalletScreen } from "../screens/CreateNewWalletScreen";
import { SkipAccountSecurityScreen } from "../screens/SkipAccountSecurityScreen";
import { MetaMetricsScreen } from "../screens/MetaMetricsScreen";
import { OnboardingSuccessScreen } from "../screens/OnboardingSuccessScreen";
import TimerHelper from "../utils/TimersHelper";
import { SolanaIsHereScreen } from "../screens/SolanaIsHereScreen";
import { WalletAccountScreen } from "../screens/WalletAccountScreen";

test("User can create a new wallet", async ({ device }) => {

  const getStartedScreen = new GetStartedScreen(device);
  const termsOfUseScreen = new TermsOfUseScreen(device);
  const onboardingScreen = new OnboardingScreen(device);
  const createNewWalletScreen = new CreateNewWalletScreen(device);
  const skipAccountSecurityScreen = new SkipAccountSecurityScreen(device);
  const metaMetricsScreen = new MetaMetricsScreen(device);
  const onboardingSuccessScreen = new OnboardingSuccessScreen(device);
  const solanaIsHereScreen = new SolanaIsHereScreen(device);
  const getStartedScreenTimer = new TimerHelper('getStartedScreenTimer');
  getStartedScreenTimer.start();
  await getStartedScreen.tapOnGetStartedButton();
  await termsOfUseScreen.isDisplayed();
  getStartedScreenTimer.stop();
  const termsOfUseScreenTimer = new TimerHelper('termsOfUseScreenTimer');
  termsOfUseScreenTimer.start();
  await termsOfUseScreen.tapOnAggreeCheckBox();
  await termsOfUseScreen.tapOnScrollEndArrowButton();
  await termsOfUseScreen.tapOnAcceptButton();
  termsOfUseScreenTimer.stop();
  const onboardingScreenTimer = new TimerHelper('onboardingScreenTimer');
  onboardingScreenTimer.start();
  await onboardingScreen.tapOnCreateNewWalletButton();
  await onboardingScreen.tapOnContinueWithSRPButton();
  onboardingScreenTimer.stop();
  const createNewWalletScreenTimer = new TimerHelper('createNewWalletScreenTimer');
  createNewWalletScreenTimer.start();
  await createNewWalletScreen.inputNewWalletPassword("password");
  await createNewWalletScreen.inputNewWalletPasswordConfirm("password");
  await createNewWalletScreen.tapOnTermsAndConditionCheckBox();
  await createNewWalletScreen.tapOnNewWalletSubmitButton();
  await createNewWalletScreen.tapOnRemindMeLaterButton();
  createNewWalletScreenTimer.stop();
  const skipAccountSecurityScreenTimer = new TimerHelper('skipAccountSecurityScreenTimer');
  skipAccountSecurityScreenTimer.start();
  await skipAccountSecurityScreen.proceedWithoutWalletSecure();
  skipAccountSecurityScreenTimer.stop();
  const metaMetricsScreenTimer = new TimerHelper('metaMetricsScreenTimer');
  metaMetricsScreenTimer.start();
  await metaMetricsScreen.tapOnIAgreeButton();
  metaMetricsScreenTimer.stop();
  const onboardingSuccessScreenTimer = new TimerHelper('onboardingSuccessScreenTimer');
  onboardingSuccessScreenTimer.start();
  await onboardingSuccessScreen.tapOnDoneButton();
  const solanaIsHereScreenTimer = new TimerHelper('solanaIsHereScreenTimer');
  solanaIsHereScreenTimer.start();
  onboardingSuccessScreenTimer.stop();
  await solanaIsHereScreen.isVisible();
  solanaIsHereScreenTimer.stop();
  await solanaIsHereScreen.tapOnNotNowButton();
  const walletAccountScreenTimer = new TimerHelper('walletAccountScreenTimer');
  walletAccountScreenTimer.start();
  const walletAccountScreen = new WalletAccountScreen(device);
  expect(await walletAccountScreen.isAccountNameLabelEqualTo("Account 1")).toBe(true);
  walletAccountScreenTimer.stop();
  console.log('getStartedScreenTimer', getStartedScreenTimer.getDuration());
  console.log('termsOfUseScreenTimer', termsOfUseScreenTimer.getDuration());
  console.log('onboardingScreenTimer', onboardingScreenTimer.getDuration());
  console.log('createNewWalletScreenTimer', createNewWalletScreenTimer.getDuration());
  console.log('skipAccountSecurityScreenTimer', skipAccountSecurityScreenTimer.getDuration());
  console.log('metaMetricsScreenTimer', metaMetricsScreenTimer.getDuration());
  console.log('onboardingSuccessScreenTimer', onboardingSuccessScreenTimer.getDuration());
  console.log('solanaIsHereScreenTimer', solanaIsHereScreenTimer.getDuration());
  console.log('walletAccountScreenTimer', walletAccountScreenTimer.getDuration());
  console.log('Total time in Seconds', getStartedScreenTimer.getDurationInSeconds() + termsOfUseScreenTimer.getDurationInSeconds() + onboardingScreenTimer.getDurationInSeconds() + createNewWalletScreenTimer.getDurationInSeconds() + skipAccountSecurityScreenTimer.getDurationInSeconds() + metaMetricsScreenTimer.getDurationInSeconds() + onboardingSuccessScreenTimer.getDurationInSeconds() + solanaIsHereScreenTimer.getDurationInSeconds() + walletAccountScreenTimer.getDurationInSeconds());
});