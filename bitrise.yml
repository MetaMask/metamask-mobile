---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: react-native
trigger_map:
- push_branch: 'bitrise_yml_new'
  workflow: test_release
- push_branch: 'develop'
  workflow: test_release
- push_branch: 'bitrise-yml-bump-version'
  workflow: bump_version_minor
- push_branch: '*'
  workflow: ci_test
- pull_request_source_branch: '*'
  workflow: ci_test

# Will use this for the release and deploy to store
- pull_request_source_branch: "*"
  workflow: ci_test
  pull_request_target_branch: develop

workflows:
  code_setup:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - nvm@1:
        inputs:
        - node_version: '14'
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: install --network-timeout 300000 --frozen-lockfile --network-concurrency 1
        title: Yarn Install
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: audit:ci
        title: Audit Dependencies
    # - yarn@0:
    #     title: Lint
    #     inputs:
    #     - cache_local_deps: 'yes'
    #     - command: lint
    #     is_always_run: true
  ci_test:
    before_run:
    - code_setup
    steps:
    - yarn@0:
        inputs:
        - args: ''
        - command: test:unit --silent
        title: Unit Test
        is_always_run: false
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            echo 'weew - everything passed!'
        title: All Tests Passed
        is_always_run: false
  e2e_setup:
    before_run:
    - code_setup
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            sudo gem install bundler:1.17.1
            sudo gem install faraday:1.3.0
            curl -sL https://sentry.io/get-cli/
        title: Install Test Dependencies (Bundler & Sentry)
        is_always_run: false
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: global add detox-cli
        title: Install Detox CLI
    - script:
        inputs:
        - content: |-
            # Add cache directory to environment variable
            envman add --key BREW_APPLESIMUTILS --value "$(brew --cellar)/applesimutils"
            envman add --key BREW_OPT_APPLESIMUTILS --value "/usr/local/opt/applesimutils"
            brew tap wix/brew
        title: Set Env Path for caching deps
  ios_e2e_test:
    before_run:
    - e2e_setup
    steps:
    - cocoapods-install@2: {}
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: test:e2e:ios
        title: E2E Tests on iOS
  android_e2e_test:
    before_run:
    - e2e_setup
    steps:
    - install-missing-android-tools@2:
        inputs:
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: test:e2e:android
        title: E2E Tests on Android
  e2e_test:
    before_run:
    - android_e2e_test
    - ios_e2e_test
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash echo 'weew - everything passed!'
        title: All Tests Passed
        is_always_run: false
  android_test_release_step:
    steps:
    - file-downloader@1:
        inputs:
        - source: $BITRISEIO_ANDROID_KEYSTORE_URL
        - destination: android/keystores/release.keystore
    - install-missing-android-tools@2:
        inputs:
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            jq 'del(.engines)' package.json > new.json && mv new.json package.json
            node -v
            METAMASK_ENVIRONMENT='production' yarn build:android:pre-release:bundle
        title: Build Android Pre-Release Bundle
        is_always_run: false
    - deploy-to-bitrise-io@1.9.4:
        inputs:
        - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/release/app-release.apk
        title: Bitrise Deploy APK 
    - deploy-to-bitrise-io@1.9.4:
        inputs:
        - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/release/sha512sums.txt
        title: Bitrise Deploy Checksum
    - deploy-to-bitrise-io@1.9.4:
        inputs:
        - deploy_path: $PROJECT_LOCATION/app/build/outputs/bundle/release/app-release.aab
        title: Bitrise Deploy AAB 
    - deploy-to-bitrise-io@1.9.4:
        inputs:
        - deploy_path: sourcemaps/android/index.js.map
        title: Bitrise Deploy Sourcemaps
  ios_test_release_step:
    steps:
    - certificate-and-profile-installer@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            curl -sL https://sentry.io/get-cli/ | bash
        title: Install Sentry CLI
        is_always_run: false
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            sudo gem install bundler:1.17.1
            sudo gem install faraday:1.3.0
        title: Install Bundler
        is_always_run: false
    - cocoapods-install@2: {}
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: sourcemaps:ios
        title: iOS Sourcemaps
    - xcode-archive@3:
        inputs:
        - export_method: enterprise
        - configuration: Release
    # - deploy-to-itunesconnect-application-loader@1: {}
  test_release:
    before_run:
    # - ci_test
    # - android_test_release_step
    - code_setup
    - ios_test_release_step
    steps:
    # - yarn@0:
    #     inputs:
    #     - command: build:announce
    #     title: Accouncing pre-release
    #     is_always_run: false      
  bump_version_minor:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - nvm@1:
        inputs:
        - node_version: ''
    - change-android-versioncode-and-versionname@1:
        inputs:
        - new_version_name: $VERSION_NAME
        - build_gradle_path: $PROJECT_LOCATION_ANDROID/app/build.gradle
    - set-xcode-build-number@1:
        inputs:
        - build_short_version_string: $VERSION_NAME
        - plist_path: $PROJECT_LOCATION_IOS/MetaMask/Info.plist
app:
  envs:
  - opts:
      is_expand: false
    PROJECT_LOCATION: android
  - opts:
      is_expand: false
    MODULE: app
  - opts:
      is_expand: false
    VARIANT: ''
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: ios/MetaMask.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: MetaMask
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: enterprise
  - opts:
      is_expand: false
    PROJECT_LOCATION_ANDROID: android
  - opts:
      is_expand: false
    PROJECT_LOCATION_IOS: ios
  - opts:
      is_expand: false
    VERSION_NAME: 2.2.0
  - opts:
      is_expand: false
    ANDROID_APK_LINK: ''
  - opts:
      is_expand: false
    ANDROID_AAP_LINK: ''
  - opts:
      is_expand: false
    IOS_APP_LINK: ''
