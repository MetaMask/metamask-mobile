---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: react-native
trigger_map:
- push_branch: 'bitrise_yml_new'
  workflow: test_release
- push_branch: 'develop'
  workflow: test_release
- push_branch: 'main'
  workflow: test_release
- pull_request_source_branch: '*'
  workflow: ci_test
workflows:
  code_setup:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - nvm@1:
        inputs:
        - node_version: '14'
    # - cache-pull@2: {}
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: install --network-timeout 300000 --frozen-lockfile --network-concurrency 1
        title: Yarn Install
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: audit:ci
        title: Audit Dependencies
    - yarn@0:
        title: Lint
        inputs:
        - cache_local_deps: 'yes'
        - command: lint
        is_always_run: true
    # - cache-push@2: {}
  ci_test:
    before_run:
    - code_setup
    steps:
    - yarn@0:
        inputs:
        - args: ''
        - command: test:unit --silent
        title: Unit Test
        is_always_run: false
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            echo 'weew - everything passed!'
        title: All Tests Passed
        is_always_run: false
  start_release_builds:
    before_run:
    - code_setup
    - bump_version
    steps:
    - build-router-start@0:
        inputs:
        - workflows: |-
            android_test_release_step
            ios_test_release_step
        - wait_for_builds: 'true'
        - abort_on_fail: 'yes'
        - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
    - build-router-wait@0:
        inputs:
        - abort_on_fail: 'yes'
        - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
  e2e_setup:
    before_run:
    - code_setup
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            sudo gem install bundler:1.17.1
            sudo gem install faraday:1.3.0
            curl -sL https://sentry.io/get-cli/
        title: Install Test Dependencies (Bundler & Sentry)
        is_always_run: false
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: global add detox-cli
        title: Install Detox CLI
    - script:
        inputs:
        - content: |-
            # Add cache directory to environment variable
            envman add --key BREW_APPLESIMUTILS --value "$(brew --cellar)/applesimutils"
            envman add --key BREW_OPT_APPLESIMUTILS --value "/usr/local/opt/applesimutils"
            brew tap wix/brew
        title: Set Env Path for caching deps
  ios_e2e_test:
    before_run:
    - e2e_setup
    steps:
    - cocoapods-install@2: {}
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: test:e2e:ios
        title: E2E Tests on iOS
  android_e2e_test:
    before_run:
    - e2e_setup
    steps:
    - install-missing-android-tools@2:
        inputs:
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - yarn@0:
        inputs:
        - cache_local_deps: 'yes'
        - command: test:e2e:android
        title: E2E Tests on Android
  e2e_test:
    before_run:
    - android_e2e_test
    - ios_e2e_test
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash echo 'weew - everything passed!'
        title: All Tests Passed
        is_always_run: false
  bump_version:
    steps:
    - change-android-versioncode-and-versionname@1:
        inputs:
        - new_version_name: $VERSION_NAME
        - build_gradle_path: $PROJECT_LOCATION_ANDROID/app/build.gradle
    - set-xcode-build-number@1:
        inputs:
        - build_short_version_string: $VERSION_NAME
        - plist_path: $PROJECT_LOCATION_IOS/MetaMask/Info.plist
  android_test_release_step:
    steps:
    - file-downloader@1:
        inputs:
        - source: $BITRISEIO_ANDROID_KEYSTORE_URL
        - destination: android/keystores/release.keystore
    - install-missing-android-tools@2:
        inputs:
        - gradlew_path: $PROJECT_LOCATION/gradlew
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            jq 'del(.engines)' package.json > new.json && mv new.json package.json
            node -v
            METAMASK_ENVIRONMENT='production' yarn build:android:pre-release:bundle
        title: Build Android Pre-Release Bundle
        is_always_run: false
    - deploy-to-bitrise-io@1:
        inputs:
        - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/release/app-release.apk
        title: Bitrise Deploy APK 
    - deploy-to-bitrise-io@1:
        inputs:
        - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/release/sha512sums.txt
        title: Bitrise Deploy Checksum
    - deploy-to-bitrise-io@1:
        inputs:
        - deploy_path: $PROJECT_LOCATION/app/build/outputs/bundle/release/app-release.aab
        title: Bitrise Deploy AAB 
    - deploy-to-bitrise-io@1:
        inputs:
        - deploy_path: sourcemaps/android/index.js.map
        title: Bitrise Deploy Sourcemaps
    # - google-play-deploy@3:
    #     inputs:
    #     - app_path: $PROJECT_LOCATION/app/build/outputs/bundle/release/app-release.aab
    #     - track: internal
    #     - service_account_json_key_path: NEEDS TO BE UPDATED
    #     - package_name: $MM_ANDROID_PACKAGE_NAME
    envs:
    - opts:
        is_expand: false
      MM_ANDROID_PACKAGE_NAME: io.metamask
  ios_test_release_step:
    steps:
    - certificate-and-profile-installer@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            curl -sL https://sentry.io/get-cli/ | bash
        title: Install Sentry CLI
        is_always_run: false
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            sudo gem install bundler:1.17.1
            sudo gem install faraday:1.3.0
        title: Install Bundler
        is_always_run: false
    - cocoapods-install@2: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash 
            jq 'del(.engines)' package.json > new.json && mv new.json package.json
            node -v
            METAMASK_ENVIRONMENT='production' yarn build:ios:pre-release
        title: iOS Sourcemaps & Build
        is_always_run: false
    - deploy-to-bitrise-io@1:
        inputs:
        - deploy_path: ios/build/output/MetaMask.ipa
        title: Deploy iOS IPA
    # - deploy-to-bitrise-io@1:
    #     inputs:
    #     - deploy_path: ios/build/MetaMask.xcarchive/dSYMs/MetaMask.dSYM
    #     title: Deploy Symbols File
    - deploy-to-bitrise-io@1:
        inputs:
        - deploy_path: sourcemaps/ios/index.js.map
        title: Deploy Source Map
    - deploy-to-itunesconnect-deliver@2:
        inputs:
        - bundle_id: io.metamask.MetaMask
        - app_id: '1438144202'
        - ipa_path: ios/build/output/MetaMask.ipa
  test_release:
    before_run:
    - code_setup
    - bump_version
    - ios_test_release_step
    - android_test_release_step
    steps:
    - yarn@0:
        inputs:
        - command: build:announce
        title: Accouncing pre-release
        is_always_run: false
app:
  envs:
  - opts:
      is_expand: false
    PROJECT_LOCATION: android
  - opts:
      is_expand: false
    MODULE: app
  - opts:
      is_expand: false
    VARIANT: ''
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: ios/MetaMask.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: MetaMask
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: enterprise
  - opts:
      is_expand: false
    PROJECT_LOCATION_ANDROID: android
  - opts:
      is_expand: false
    PROJECT_LOCATION_IOS: ios
  - opts:
      is_expand: false
    VERSION_NAME: 2.3.0
  - opts:
      is_expand: false
    ANDROID_APK_LINK: ''
  - opts:
      is_expand: false
    ANDROID_AAP_LINK: ''
  - opts:
      is_expand: false
    IOS_APP_LINK: ''


    