---
format_version: '8'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: react-native
workflows:
  # Code Setups
  setup:
    steps:
      - activate-ssh-key@4:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@6: {}
      - nvm@1.3.0:
          inputs:
            - node_version: '14'
  code_setup_cache:
    before_run:
      - setup
    steps:
      - cache-pull@2: {}
      - yarn@0:
          inputs:
            - cache_local_deps: 'yes'
            - command: setup
          title: Yarn Setup
      - yarn@0:
          inputs:
            - cache_local_deps: 'yes'
            - command: audit:ci
          title: Audit Dependencies
      - yarn@0:
          title: Lint
          inputs:
            - cache_local_deps: 'yes'
            - command: lint
          is_always_run: true
      - cache-push@2: {}
  code_setup:
    before_run:
      - setup
    steps:
      - yarn@0:
          inputs:
            - cache_local_deps: 'yes'
            - command: setup
          title: Yarn Setup
      - yarn@0:
          inputs:
            - cache_local_deps: 'yes'
            - command: audit:ci
          title: Audit Dependencies
      - yarn@0:
          title: Lint
          inputs:
            - cache_local_deps: 'yes'
            - command: lint
          is_always_run: true
  # CI Steps
  ci_test:
    before_run:
      - code_setup_cache
    steps:
      - yarn@0:
          inputs:
            - args: ''
            - command: test:unit --silent
          title: Unit Test
          is_always_run: false
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                echo 'weew - everything passed!'
          title: All Tests Passed
          is_always_run: false
  # E2E Steps
  e2e_setup:
    steps:
      - yarn@:
          inputs:
            - cache_local_deps: 'yes'
            - command: global add detox-cli
          title: Detox - Install CLI
  android_e2e_test:
    before_run:
      - code_setup
      - e2e_setup
    steps:
      - install-missing-android-tools@2:
          inputs:
            - ndk_revision: $NDK_VERSION
            - gradlew_path: $PROJECT_LOCATION/gradlew
      - avd-manager@1:
          inputs:
            - api_level: '29'
            - create_command_flags: '--sdcard 4096M'
            - profile: pixel
      - wait-for-android-emulator@1: {}
      - file-downloader@1:
          inputs:
            - source: $BITRISEIO_ANDROID_KEYSTORE_URL
            - destination: android/keystores/release.keystore
      - yarn@0:
          inputs:
            - cache_local_deps: 'yes'
            - command: test:e2e:android
          title: E2E Tests on Android
          is_always_run: false
  ios_e2e_test:
    before_run:
      - code_setup
      - e2e_setup
    steps:
      - certificate-and-profile-installer@1: {}
      - set-xcode-build-number@1:
          inputs:
            - build_short_version_string: $VERSION_NAME
            - plist_path: $PROJECT_LOCATION_IOS/MetaMask/Info.plist
      - script:
          inputs:
            - content: |-
                # Add cache directory to environment variable
                envman add --key BREW_APPLESIMUTILS --value "$(brew --cellar)/applesimutils"
                envman add --key BREW_OPT_APPLESIMUTILS --value "/usr/local/opt/applesimutils"
                brew tap wix/brew
          title: Set Env Path for caching deps
      - cocoapods-install@2:
          is_always_run: false
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                node -v
                METAMASK_ENVIRONMENT='production' yarn test:e2e:ios
          title: Detox Build & Test
          is_always_run: false
  start_e2e_tests:
    steps:
      - build-router-start@0:
          inputs:
            - workflows: |-
                ios_e2e_test
            - wait_for_builds: 'true'
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
      - build-router-wait@0:
          inputs:
            - abort_on_fail: 'yes'
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash echo 'weew - everything passed!'
          title: All Tests Passed
          is_always_run: false
  # Parallel Build & Deploy Steps
  create_release_builds:
    before_run:
      - code_setup_cache
    steps:
      - build-router-start@0:
          inputs:
            - workflows: |-
                build_android_release
                build_ios_release
            - wait_for_builds: 'true'
            - abort_on_fail: 'yes'
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
      - build-router-wait@0:
          inputs:
            - abort_on_fail: 'yes'
            - build_artifacts_save_path: $BITRISE_DEPLOY_DIR
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
  release_to_stores:
    before_run:
      - code_setup_cache
    steps:
      - build-router-start@0:
          inputs:
            - workflows: |-
                deploy_android_to_store
                deploy_ios_to_store
            - wait_for_builds: 'true'
            - abort_on_fail: 'yes'
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
      - build-router-wait@0:
          inputs:
            - abort_on_fail: 'yes'
            - build_artifacts_save_path: $BITRISE_DEPLOY_DIR
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $BITRISE_DEPLOY_DIR/app-prod-release.apk
          title: Bitrise Deploy APK
      - yarn@0:
          inputs:
            - command: build:announce
          title: Accouncing pre-release
          is_always_run: false
  create_qa_builds:
    before_run:
      - code_setup_cache
    steps:
      - build-router-start@0:
          inputs:
            - workflows: |-
                build_android_qa
                build_ios_qa
            - wait_for_builds: 'true'
            - abort_on_fail: 'yes'
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
      - build-router-wait@0:
          inputs:
            - abort_on_fail: 'yes'
            - build_artifacts_save_path: $BITRISE_DEPLOY_DIR
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
  build_android_release:
    before_run:
      - code_setup
    steps:
      - change-android-versioncode-and-versionname@1:
          inputs:
            - new_version_name: $VERSION_NAME
            - new_version_code: $VERSION_NUMBER
            - build_gradle_path: $PROJECT_LOCATION_ANDROID/app/build.gradle
      - file-downloader@1:
          inputs:
            - source: $BITRISEIO_ANDROID_KEYSTORE_URL
            - destination: android/keystores/release.keystore
      - install-missing-android-tools@2:
          inputs:
            - ndk_revision: $NDK_VERSION
            - gradlew_path: $PROJECT_LOCATION/gradlew
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                node -v
                METAMASK_ENVIRONMENT='production' yarn build:android:pre-release:bundle
          title: Build Android Pre-Release Bundle
          is_always_run: false
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/prod/release/app-prod-release.apk
          title: Bitrise Deploy APK
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/prod/release/sha512sums.txt
          title: Bitrise Deploy Checksum
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/mapping/prodRelease/mapping.txt
          title: Bitrise ProGuard Map Files
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/bundle/prodRelease/app-prod-release.aab
          title: Bitrise Deploy AAB
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: sourcemaps/android/index.js.map
          title: Bitrise Deploy Sourcemaps
  build_android_qa:
    before_run:
      - code_setup_cache
    after_run:
      - _upload_apk_to_browserstack
    steps:
      - change-android-versioncode-and-versionname@1:
          inputs:
            - new_version_name: $VERSION_NAME
            - new_version_code: $VERSION_NUMBER
            - build_gradle_path: $PROJECT_LOCATION_ANDROID/app/build.gradle
      - file-downloader@1:
          inputs:
            - source: $BITRISEIO_ANDROID_QA_KEYSTORE_URL
            - destination: android/keystores/internalRelease.keystore
      - install-missing-android-tools@2:
          inputs:
            - ndk_revision: $NDK_VERSION
            - gradlew_path: $PROJECT_LOCATION/gradlew
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                node -v
                GIT_BRANCH=$BITRISE_GIT_BRANCH METAMASK_ENVIRONMENT='qa' yarn build:android:pre-release:bundle:qa
          title: Build Android Pre-Release Bundle
          is_always_run: false
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/qa/release/app-qa-release.apk
          title: Bitrise Deploy APK
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/apk/qa/release/sha512sums.txt
          title: Bitrise Deploy Checksum
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/mapping/qaRelease/mapping.txt
          title: Bitrise ProGuard Map Files
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: $PROJECT_LOCATION/app/build/outputs/bundle/qaRelease/app-qa-release.aab
          title: Bitrise Deploy AAB
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: sourcemaps/android/index.js.map
          title: Bitrise Deploy Sourcemaps
  _upload_apk_to_browserstack:
    steps:
      - script@1:
          title: Upload APK to Browserstack
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -e
                set -x
                set -o pipefail
                APK_PATH=$PROJECT_LOCATION/app/build/outputs/apk/qa/release/app-qa-release.apk
                CUSTOM_ID="$BITRISE_GIT_BRANCH-$VERSION_NAME-$VERSION_NUMBER"
                CUSTOM_ID=${CUSTOM_ID////-}
                curl -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@$APK_PATH" -F 'data={"custom_id": "'$CUSTOM_ID'"}' | jq -j '.app_url' | envman add --key BROWSERSTACK_APP_URL
                curl -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" -X GET https://api-cloud.browserstack.com/app-automate/recent_apps | jq > browserstack_uploaded_apps.json
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: browserstack_uploaded_apps.json
          title: Bitrise Deploy Browserstack Uploaded Apps
      - build-router-start@0:
          inputs:
            - workflows: |-
                wdio_android_e2e_test
            - wait_for_builds: 'false'
            - abort_on_fail: 'yes'
            - access_token: $BITRISE_START_BUILD_ACCESS_TOKEN
            - environment_key_list:
                BROWSERSTACK_APP_URL

                BROWSERSTACK_DEVICE

                BROWSERSTACK_OS_VERSION

                BROWSERSTACK_TAG_EXPRESSION
  wdio_android_e2e_test:
    before_run:
      - code_setup_cache
    steps:
      - script@1:
          title: Run Android E2E tests on Browserstack
          inputs:
            - content: |-
                #!/usr/bin/env bash
                yarn test:wdio:android:browserstack
      - script@1:
          is_always_run: true
          title: Add tests reports to Bitrise
          inputs:
            - content: |-
                #!/usr/bin/env bash
                cp -r $BITRISE_SOURCE_DIR/wdio/reports/junit-results/ $BITRISE_TEST_RESULT_DIR/
      - deploy-to-bitrise-io@1:
          inputs:
              - deploy_path: $BITRISE_TEST_RESULT_DIR
          title: Deploy test report files
  deploy_android_to_store:
    before_run:
      - build_android_release
    steps:
      - google-play-deploy:
          inputs:
            - app_path: $PROJECT_LOCATION/app/build/outputs/bundle/prodRelease/app-prod-release.aab
            - track: internal
            - service_account_json_key_path: $BITRISEIO_BITRISEIO_SERVICE_ACCOUNT_JSON_KEY_URL_URL
            - package_name: $MM_ANDROID_PACKAGE_NAME
    envs:
      - opts:
          is_expand: false
        MM_ANDROID_PACKAGE_NAME: io.metamask
  deploy_ios_to_store:
    before_run:
      - build_ios_release
    steps:
      - deploy-to-itunesconnect-application-loader@1:
          inputs:
            - ipa_path: ios/build/output/MetaMask.ipa
  build_ios_release:
    before_run:
      - code_setup_cache
    steps:
      - certificate-and-profile-installer@1: {}
      - set-xcode-build-number@1:
          inputs:
            - build_short_version_string: $VERSION_NAME
            - build_version: $VERSION_NUMBER
            - plist_path: $PROJECT_LOCATION_IOS/MetaMask/Info.plist
      - cocoapods-install@2: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                node -v
                METAMASK_ENVIRONMENT='production' yarn build:ios:pre-release
          title: iOS Sourcemaps & Build
          is_always_run: false
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: ios/build/output/MetaMask.ipa
          title: Deploy iOS IPA
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: ios/build/MetaMask.xcarchive
          title: Deploy Symbols File
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: sourcemaps/ios/index.js.map
          title: Deploy Source Map
  build_ios_qa:
    before_run:
      - code_setup_cache
    steps:
      - certificate-and-profile-installer@1: {}
      - set-xcode-build-number@1:
          inputs:
            - build_short_version_string: $VERSION_NAME
            - build_version: $VERSION_NUMBER
            - plist_path: $PROJECT_LOCATION_IOS/MetaMask/MetaMask-QA-Info.plist
      - cocoapods-install@2: {}
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                node -v
                GIT_BRANCH=$BITRISE_GIT_BRANCH METAMASK_ENVIRONMENT='qa' yarn build:ios:pre-qa
          title: iOS Sourcemaps & Build
          is_always_run: false
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: ios/build/output/MetaMask-QA.ipa
          title: Deploy iOS IPA
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: ios/build/MetaMask-QA.xcarchive
          title: Deploy Symbols File
      - deploy-to-bitrise-io@1:
          inputs:
            - deploy_path: sourcemaps/ios/index.js.map
          title: Deploy Source Map
app:
  envs:
    - opts:
        is_expand: false
      PROJECT_LOCATION: android
    - opts:
        is_expand: false
      NDK_VERSION: 21e
    - opts:
        is_expand: false
      MODULE: app
    - opts:
        is_expand: false
      VARIANT: ''
    - opts:
        is_expand: false
      BITRISE_PROJECT_PATH: ios/MetaMask.xcworkspace
    - opts:
        is_expand: false
      BITRISE_SCHEME: MetaMask
    - opts:
        is_expand: false
      BITRISE_EXPORT_METHOD: enterprise
    - opts:
        is_expand: false
      PROJECT_LOCATION_ANDROID: android
    - opts:
        is_expand: false
      PROJECT_LOCATION_IOS: ios
    - opts:
        is_expand: false
      VERSION_NAME: 5.14.0
    - opts:
        is_expand: false
      VERSION_NUMBER: 1055
    - opts:
        is_expand: false
      ANDROID_APK_LINK: ''
    - opts:
        is_expand: false
      ANDROID_AAP_LINK: ''
    - opts:
        is_expand: false
      IOS_APP_LINK: ''
meta:
  bitrise.io:
    stack: osx-xcode-13.4.x
