version: 2.1
aliases:
  - &restore-node-cache
    keys:
      - v1.1.0-node-{{ .Branch }}-{{ checksum "package.json" }}
      - v1.1.0-node-{{ .Branch }}
  - &save-node-cache
    key: v1.1.0-node-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules

  - &install-node-dependencies
      |
        rm -rf node_modules/websocket/.git && yarn install --network-timeout 300000 --frozen-lockfile --network-concurrency 1

defaults: &defaults
  working_directory: ~/MetaMask

jobs:
  prep-deps:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          command: *install-node-dependencies
          no_output_timeout: "15m"
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
  prep-node-deps:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: *restore-node-cache
      - run:
          command: *install-node-dependencies
          no_output_timeout: "15m"
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
      - save_cache: *save-node-cache

  lint:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn lint

  test-unit:
    <<: *defaults
    parallelism: 3
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn test:unit -- -w 3
    #   - persist_to_workspace:
    #       root: .
    #       paths:
    #         - coverage

  test-deps:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: yarn audit
          command: ./scripts/yarn-audit.sh

  test-e2e-ios:
    <<: *defaults
    macos:
      xcode: 12.0.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Load dependencies
          command:
            |
              brew update
              brew install watchman
              brew tap wix/brew
              brew install --HEAD applesimutils
              yarn global add detox-cli
      - run: echo $IOS_ENV | tr "|" "\n" > .ios.env
      - run: detox clean-framework-cache && detox build-framework-cache
      - run: detox build --configuration ios.sim.release && detox test --configuration ios.sim.release --cleanup --workers 2
  upload-coverage:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn install codecov
      - run: ./node_modules/bin/codecov

  all-tests-pass:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - run:
          name:  All Tests Passed
          command: echo 'weew - everything passed!'
  publish-pre-release-android:
    working_directory:  ~/MetaMask
    environment:
      JAVA_OPTS: "-Xms512m -Xmx1024m"
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    docker:
      - image: circleci/android:api-29-node
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: build:accept-android-licenses
          command: sdkmanager --licenses
      - run:
          name: build:pre-release
          command: |
              jq 'del(.engines)' package.json > new.json && mv new.json package.json
              node -v
              METAMASK_ENVIRONMENT='production' yarn build:android:pre-release:bundle
      - store_artifacts:
          path: android/app/build/outputs/bundle/release
          destination: bundle
      - store_artifacts:
          path: android/app/build/outputs/apk/release
          destination: builds
      - store_artifacts:
          path: sourcemaps/android
          destination: sourcemaps-android
      - run:
          name: Announcing pre-release
          command: yarn build:announce
  publish-pre-release-ios:
    macos:
      xcode: 12.0.0
    working_directory:  ~/MetaMask
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install Sentry CLI
          command: curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Install Bundler
          command: |
            sudo gem install bundler:1.17.1
            sudo gem install faraday:1.3.0
      - run:
          name: Install CocoaPods
          command: |
            sudo gem install cocoapods
            cd ios && pod install && cd ..
      - run:
          name: pre-release
          command: |
              jq 'del(.engines)' package.json > new.json && mv new.json package.json
              node -v
              METAMASK_ENVIRONMENT='production' yarn build:ios:pre-release
      - store_artifacts:
          path: sourcemaps/ios
          destination: sourcemaps-ios
workflows:
  full_test:
    jobs:
      - test-deps:
          requires:
            - prep-node-deps
      - prep-deps:
          filters:
            branches:
              only:
                - master
                - develop
      - prep-node-deps:
          filters:
            branches:
              ignore:
                - master
                - develop
      - lint:
          requires:
            - prep-node-deps
      - test-unit:
          requires:
            - prep-node-deps
    #   - test-e2e-ios:
    #       requires:
    #         - prep-node-deps
    #         - test-unit
      - all-tests-pass:
          requires:
            - test-deps
            - lint
            - test-unit
    #       - test-e2e-ios
    #   - upload-coverage:
    #       requires:
    #         - test-unit
      - publish-pre-release-ios:
          requires:
            - prep-deps
      - publish-pre-release-android:
          requires:
            - publish-pre-release-ios
