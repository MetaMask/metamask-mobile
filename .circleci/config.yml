aliases:
  - &restore-cache
    keys:
      - v1.0.2-{{ .Branch }}-{{ checksum "package.json" }}
      - v1.0.2-{{ .Branch }}

  - &save-cache
    key: v1.0.2-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules

  - &install-node-dependencies
      |
        npm install

defaults: &defaults
  working_directory: ~/MetaMask

version: 2
jobs:
  prep-deps:
    <<: *defaults
    macos:
      xcode: 10.1.0
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *install-node-dependencies
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
      - save_cache: *save-cache

  lint:
    <<: *defaults
    macos:
      xcode: 10.1.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run lint

  test-unit:
    <<: *defaults
    macos:
      xcode: 10.1.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run test:unit -- -w 1
      - persist_to_workspace:
          root: .
          paths:
            - coverage

  test-e2e-ios:
    <<: *defaults
    macos:
      xcode: 10.1.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Load dependencies
          command:
            |
              brew update
              brew tap wix/brew
              brew install --HEAD applesimutils
              npm install -g detox-cli
      - run: echo $IOS_ENV | tr "|" "\n" > .ios.env
      - run: detox clean-framework-cache && detox build-framework-cache
      - run: detox build --configuration ios.sim.release && detox test --configuration ios.sim.release --cleanup
  upload-coverage:
    <<: *defaults
    macos:
      xcode: 10.1.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm install -g codecov
      - run: codecov

  all-tests-pass:
    <<: *defaults
    macos:
      xcode: 10.1.0
    steps:
      - run:
          name:  All Tests Passed
          command: echo 'weew - everything passed!'
  announce-pre-release:
    <<: *defaults
    macos:
      xcode: 10.1.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Announcing pre-release
          command: npm run build:announce
  publish-pre-release-android:
    working_directory:  ~/MetaMask
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/MetaMask
      - attach_workspace:
          at: ~/MetaMask
      - run:
          name: build:accept-android-licenses
          command: (echo y; echo y; echo y; echo y; echo y; echo y) | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - run:
          name: build:pre-release
          command:
            |
              npm run build:android:pre-release
      - store_artifacts:
          path: android/app/build/outputs/apk/release
          destination: builds
  publish-pre-release-ios:
    macos:
      xcode: 10.1.0
    working_directory:  ~/MetaMask
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/MetaMask
      - attach_workspace:
          at: ~/MetaMask
      - run:
          name: pre-release
          command: npm run build:ios:pre-release

workflows:
  version: 2
  full_test:
    jobs:
      - prep-deps
      - lint:
          requires:
            - prep-deps
          filters:
            branches:
              ignore: master
      - test-unit:
          requires:
            - prep-deps
          filters:
            branches:
              ignore: master
    #   - test-e2e-ios:
    #       requires:
    #         - test-unit
      - all-tests-pass:
          requires:
            - lint
            - test-unit
            # - test-e2e-ios
      - upload-coverage:
          requires:
            - test-unit
      - publish-pre-release-ios:
          requires:
            - prep-deps
          filters:
            branches:
              only: master
      - publish-pre-release-android:
          requires:
            - prep-deps
          filters:
            branches:
              only: master
      - announce-pre-release:
          requires:
            - publish-pre-release-ios
            - publish-pre-release-android
